@Parser DefaultFiniteStrainParser;
@Behaviour SaintVenantKirchhoffElasticity;

@MaterialProperty stress young;
young.setGlossaryName("YoungModulus");
@MaterialProperty real nu;
nu.setGlossaryName("PoissonRatio");

@LocalVariable stress lambda;
@LocalVariable stress mu;

@LocalVariable StressStensor s;

@Includes{
#include"TFEL/Material/Lame.hxx"
}

@Integrator{
  using namespace tfel::material::lame;
  lambda = computeLambda(young,nu);
  mu     = computeMu(young,nu);
  const StrainStensor e = computeGreenLagrangeTensor(F1);
  s   = lambda*trace(e)*StrainStensor::Id()+2*mu*e;
  sig = convertSecondPiolaKirchhoffStressToCauchyStress(s,F1);
}

@TangentOperator<DS_DEGL>{
  Dt = lambda*Stensor4::IxI()+2*mu*Stensor4::Id();
}

@TangentOperator<DTAU_DF>{
  const StiffnessTensor De = lambda*Stensor4::IxI()+2*mu*Stensor4::Id();
  const t2tost2<N,stress> dS = 0.5*De*t2tost2<N,strain>::dCdF(F1);
  t2tost2<N,stress> dtau;
  computePushForwardDerivative(dtau,dS,s,F1); 
  Dt = dtau;
}
