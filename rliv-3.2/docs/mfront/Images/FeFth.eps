%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: amr-04.pdf
%%Creator: Adobe Acrobat 9.5.3
%%For: th202608
%%CreationDate: 22/12/2013, 14:21:48
%%BoundingBox: 184 318 411 524
%%HiResBoundingBox: 184.4053 318.1716 410.5948 523.8285
%%CropBox: 184.4053 318.1716 410.5948 523.8285
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%TargetDevice: (iR-ADV C5235/5240) (3017.104)1
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq{pop}{setblackgeneration}ifelse
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq{pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *PageSize A4
<</PageSize [595 842 ] >> setpagedevice
%% FoomaticRIPOptionSetting: PageSize=A4
%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 852 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-13:18:53        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
   xmp:CreateDate="2004-04-02T17:16:35Z"
   xmp:CreatorTool="XPP"
   xmp:ModifyDate="2004-04-21T10:05:04-07:00"
   pdf:Keywords=""
   pdf:Producer="">
   <dc:creator>
    <rdf:Seq>
     <rdf:li/>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[{Catalog} {Doc_Metadata} /Metadata pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 2 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (2)]
[/TrimBox [184.40525817871 318.17150878906 410.5947265625 523.82843017578]]
[/BleedBox [184.40525817871 318.17150878906 410.5947265625 523.82843017578]]
[/ArtBox [0 0 498.021 624.013 ]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 currentpagedevice/PageSize get 1  get neg translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
184.405 318.172 mo
184.405 523.828 li
410.595 523.828 li
410.595 318.172 li
cp
clp
[1 0 0 1 -113.979 -167.987 ]ct
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
true set_gvm
%ADOBeginSubsetFont: FHRBAA+Times-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /FHRBAA+Times-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 59 /semicolon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/FamilyBlues [-14 -0 450 460 662 676] def
/FamilyOtherBlues [-218 -217 262 270 394 394] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
66 dict dup begin
/parenleft <1C60D8A8C9B81F2C34DD536D1360D89197E7FA43CD15762B1F48
F10FBDCF9BC2C750CDE4A2E91649CF8859E337C2E166D3734F3568F45FDC414D
6EEB6B611B8690C7C03C> |-
/parenright <1C60D8A8C9B81F2C34DD536D5F91D4C3DAE454AEB0D09D2D77A
B7A4947777BB664E613196BC679C0FA303967174C88DFCCFA0D154A8957EC684
FC25A36D2507079F0D08A> |-
/comma <1C60D8A8C9B8707CB516A860815AB2EC26918885F713E4ED7939803E
0A8E0EE12DBD595F7B4FC46C96E99C7C244F8EE37F7C691D6FF966A57DBB357A
175F54A977790792A86A701245F8E3A81974A3254E3CFE0117AA8FEF> |-
/hyphen <1C60D8A8C9B81F2C3AED63678C15FF4B0D41EAF1ADF08534F78C6CF
D85> |-
/period <1C60D8A8C9B8707CABA78EB744DAD228E94EA6790A3CF5471A14CA1
EC74457D34EB30A52B7D5CE690F230DA3> |-
/slash <1C60D8A8C9B854D091294BA916DE103B530ED44B0658EDFA9AE5572B
AD53C85F2BB138> |-
/zero <1C60D8A8C9B7A73D33BD7C9339964DD07C87D05AB7B25A7463788209D
FA6F2469A76A662ABDEC36022D07150EBCCB00EAFC3634E253FB48B765FB94D7
1E293B85E25BD0A9620E2BFB3082EA4BB23F9236A4694D2C3E9FC45E251B722> |-
/one <1C60D8A8C9B7A73DC549024B406C76DEED7B46C1EF6EB5651B1F268C37
87648C40DBF41CCAF519D06A13A3171180A36B4BF986E9264F6C74AFB62268E9
5BF4B0184D270E> |-
/two <1C60D8A8C9B7A73DC5046156A965F0B3A5C5C92B949F09859351B7460B
BC2BE41737489572FD61CF5BD3DA796B955EB550353EDF2F8C07B4F538413169
7035B0D3184C9331276BD170AD13B7E6187EA056B38F406A362F0A077FD8459E
E186F67C0C> |-
/three <1C60D8A8C9B7A73D33B7A780A4FB6D47887A89CCD14262CC5EAF9A44
E4667C02E08E12C9FAA81B3FDF7544E6E75E5296452BF3839C72DB687B09DBAE
283E004770052C2C40F3BE9D14CD88A743EF8BCC90D61B07BC93A5F254687A35
8EFD7C6A34DA02B99630F8F91E5B5B18682C41B5E27DFA84375DC950157D776B
EF8B8244DE2CBD755506> |-
/four <1C60D8A8C9B7A73DB91ED1D58B1534FC3DC9CE70FBEFFE64A020E69D3
05561F2E3159DBBBFB3075C8C37AD523FA4E6CA1C673946692CFDA34CFE2A635
874507E6C9AACEA9BFCA866A31780314DE8CB239F7F84052FFAEAB4A857AB9E0
A7D17979C9340343DBC60020EAB> |-
/five <1C60D8A8C9B7A73D33A88FEA12959A734F76D056A6AD18616787F24D4
694B06D2D404FC3FCA38087EA8162B81AF2DD5F722A8A8620829370F42A0D36A
D232CF1AF8C5768FCC5070E4C1D383794DEEE463936008AA8B79C75171B0B56A
EE44FCABBD4B348C68E82A7216D83E5CCC6E39493B5E64C831AA2> |-
/six <1C60D8A8C9B7A73D33BF1B90A184398C344468AF20F393E1CDAE1A1BDF
4B1EF29581C243D118AD9C2F9F3B85C649B4F94D8775B8245D414436A3846937
1891286E3E4F3F2C58114BE7041C63E1137F930DD38393462B124AC8D60E4109
AAD485EEDD44016B3DCF2F116B050BDED76293F395802A2102> |-
/seven <1C60D8A8C9B7A73DD6FE362CD24F05334B0EB647AEFE5409105064A3
E2149E3F071B4B7682CB4AAE846128CC40E4FE81E9AE8C264167A3B3D819A723> |-
/eight <1C60D8A8C9B7A73D33BF1B919D3990280983708D6757A992F5763D40
D0C17EA83BCB85789813648C1332AA4BA5DECDB6C51AC02F13C5CEC3648068DF
163FD5A16CBA724ABBC388395CA8D29C7E9CBEAA9260DD0185441D7B1077F46D
B8D59436936512EF03987B35CAAC3F83CBCFD25406E86BFCA5DD2BD7BAF4B5A6
E1EF7535E35954911D554DFEA44E42DB79B0FB04D3E90477795F66F8A8FEB792
F15D59414AE3673345D8ABA5BD4D2AD8EE578BFD9E28ECEFDCBE7E7D857182A9
F46443C79272F5FFF983387F498DC0041982F82C8B0FA76BA464F5DD7119CCD6
2BCFB1365FA28B858FC14D73B10CF5A83F8B> |-
/nine <1C60D8A8C9B7A73DD0C741EDEE83FA306ACFF34B0F4BCBA36C21A7408
C6F9BEB4A442B2F13237BF635FDFAB907B29059292DDAFF5DABCEDC6EC41C5F3
C648AFBF12E0ECD4E60C870F065877946C9D47E8B9420F50B2720233BC04950F
88E0C085E4CFFDC37232A1913DAF7D116A465520E3E0185527DFA5DEE32> |-
/semicolon <1C60D8A8C9B854D09D7AD97383C8388D4CD6615DF9607347FFFD
EAB0E7479FDC37D8D2BA7CE7A7E10202379107368A0370C61822048DB2CEB190
B444AC36D82DCB4D58EC11FE55E48CC97CF38F7FCAC86DE803E25C3A630623B7
8B93D91235D86534524222C8ED158E98604639FFBE02473907B87A9E22291E80
41B73C2CEBB5F6401B737226D9084EEDDDA9E9> |-
/A <1C60D8A8C9B6079F1E48848039BAD53EF75083A15B245763DB78818AFF61
A16A1320ECEE497C9F16C5A9970A7745608AF8FED49797B2C617F48878314ECB
9388DC87C41E0CC6BE34027C1122095499F934B9D2E8FCDB060A9CB7A2718077
27C28B32415ED07DCC7001E6D3C85F5AEC7FFEE39DAFE67E7733CC865438> |-
/B <1C60D8A8C9B64EDF88216CF024BDC8993EE8739690407CCCBA55622B1291
8D3D17B30491F1CA282D9D8970F0E7D82029935D97EFE881B4DF2886B228CE25
7D591CDE49A8CC4885CEC7CCEA8711A068478FEFD5A1AE8CBEE74FD6B5E9B442
15B429576C7C558160F2B347FA2DE19097A51D8DC5A07C69C381C16050A2C3C0
AD9429FE9FB016DE0AD2384D26D27090BAD9C5F245D7B3E6963711AFEDF85F48
C27AAA847C24C6F3FA2933FA01060CE313860904472963674DD2917A5A08E4BB
800FDC7A1B59EA97822D469C42B9DBE7574377B1FAE77CD254CC259CD40FF463
2AF735C694E1D1AE312C0A5D35FEE91AC0> |-
/C <1C60D8A8C9B64EDF7E182276F33FE64591D35477734F1BEC23C2AC3C7BB2
4FE587EAFC58752906FDF803B7EE08CC0EEA6D4DF528ED9A25AEB8763A1E0F33
51E8367C0E0AF3723CBF0E47B6C61A46C0C9B9B14422A38EEC6A11432287BB1A
AA047F2C2F93CA4A999D93CAB432079751D1C3EA> |-
/D <1C60D8A8C9B6079F1E66B7565D0C0FE392D7D1AED8C6DCA6A1AA2DE51BB0
54073985C252F108C147E5B894B74E8DD41D4B2907B2971BD6DBC1DA40B30BE3
21EFA5013A17A623A37E171056FA1C8F8EA833B84DA2D5777727CE57C35BBEBB
84A1CD5B36C6FDD2EDF02AB75D6D59B40E8D867EAC2EF07C9A4EC98494859463
D49D6F36907EE221091971F8FF4FEE> |-
/E <1C60D8A8C9B7D8BE6A6EDEC7A42842EA4F0E34B06A7ADB9E9D606CC179C8
C106C498D8C31750ADF7168F9C384D18F5B3E9F35EBFB6818E179DD0D7CACCAA
FD2F3A66F4207F2991F9E8E5F10631AD96E779D68C3DDBA38AF95AF86FC8835D
1EB04D73306C4ADB04B49FA3DF42FF005DB7E3E54329CAC27610F5CEE7B7581B
B77FB5AE7F6E0B9688143FA853BCC63D807B575E10D4D6FFD9D8E19CAE0C8F02
77562B41F7FD59FC04FA6FC55F110EBF43148B35D9A3C5A98544> |-
/F <1C60D8A8C9B7EF32570E39CCED07FE54E8B5118F3EFF07C7A79A2805F3A0
A62B533927739BBD16C0FFD3AC5F7937BA6A77D95364929C45CCB36D43768248
BB4CA07335B05089C3054F8266267EA81FD1968E342067FDB1C18CAE3BA134F0
CFE97722A134B258723887B6348E563CA90DD50FCFD86BBD6D86A70BD9FA04FE
D5C28095E9CAE9129CC5DD43CEB35A25AF3CFF0C1B8081DE66> |-
/G <1C60D8A8C9B6079FE80B2D9B8A220BABE8A5775155D5AEE67EA9CE80530F
42678BB7923C2E1998D5A150C054ED90E9D960696B97F4DB8EA42B60C13ED383
1BAE2B146B775564D2359A7EC713509A43C5C5E3539551C39DB899CD95573B1D
4F19BE1759C57CF1BCAA6FB7D841F4C17766A5D35D204457A8F7FAA27C0DD08A
35CD68D893853416989C0D7266D1AB8433FCBD83529F03E02AAB3CCA8AF06110
C60DDAA381BF4BF975C41ABF718C730E643CFDF62ABFA9468C> |-
/H <1C60D8A8C9B6079F1E4884809AF27C32C4C4644B748B72386090B6EA72F2
CAD492799B13A490C22BB769448B5BE5145154E5257C346442332292571F1722
B637B36F195964360C86F3C2FA20D5968E5EF117A87C5275E3CF4EDCBA851C9A
2685EF777C52F37A9D6571C1FF8201E097F935E15B632A692C95A8A199E69FDF
3449B5C7E7D9F966187E> |-
/I <1C60D8A8C9B81F2C46F6291E6BC656A33181A7CEBA53BA35C0D637783657
13E4937D45432C22967EB42DF6DA1495947FD682A87B83F3472A9AC53AFF202C
ED526C6E0626B1> |-
/J <1C60D8A8C9B7361F880F413C1C9D6C86FEA00697E36B5763F3D7FD9A1E23
CF6677220319B360476BBC0170DA873D0E3D0C5A5B405FDB02B95D7F889A75BA
4F9D51BA63901883BA51239D3D6001E60146B80BC705A3D1608F> |-
/K <1C60D8A8C9B6079F1E48848E88AD51D875E18A757A1A6325AC362734879A
AFAD42E2CFBAD5446AE147FD12A5E9A047AD123CE532F2C71974BDDAFED116F3
86DFBBD27BFD1FE6B32F3F98B336226EB8E9B9110925821FFD7841F8A8D3AB39
12F803B84F359CF4C96FC59565AEDDE400BC329821CB75B63B2CAC9CAFFCE37E
85F33708E8758BC2D160D6830730BB048B8C3A9E76619F> |-
/L <1C60D8A8C9B7D8BE6A6D10833A58E10E35AAF0D74F28161F1E96F93676A5
2EBF6FCEE0F833224946C62AB4825949DCD38F43112D2F78458FF85000573083
054640F9BEF9D64C20B231AD48404F645607CB5F4CDB2A6BFD9D45ADC27D5BF3
58972E357CAF472CF1479518> |-
/M <1C60D8A8C9B59F859BE0FB9A2A0F7654C6EDCAEDEE9F7FF916442D9C9F4E
D6F42D0588BBB70AFF4A34C797748BF897F607B52C72A4CB4A45FE66E245A32A
75D88FD8959E00389A6DBAED16321CC2D91DF069B6D6467D128CC5B30A969384
52FCD034FAF7C4DC50E3464B901F68B77945A36B587B81F6A85C08C5E954DCBE
A7AEB21BCCFA49> |-
/N <1C60D8A8C9B6079F1E48848E88AD51D864EC24104C6DD11D55A63CFF3E9C
756106D0E97B2A535F11521FC421A87DB7AA1BB7E5E72F9C1F26749CEA608791
28C49F034519E4F1E3D0B2668109027E7AE954A9FBCDB8C98F28D8FD5566696A
FD7E7E86478C98CFD0142A5D34CA87950DF8C96F24696E1A4263A162D3B7D031
8A42AFF3> |-
/O <1C60D8A8C9B6079FE817D875D2CBFFB503E7661914031DEF82D4082D7029
995CDB5B363791EF40B5AF7B3843B9E472E4F50B8472BF0DFE33E4CD5D7DBCF3
EB6D302111F8799A9C032144A0C9CB2E8226B631DA3032A3884790267BD00E4E
CAADF3> |-
/P <1C60D8A8C9B7EF32570E39CC82D8FC3971C64FFF40AB84806AE53A80D003
59C85B6AFD0D4E4516E6F925E114CB5694CA3C3BB5BD1D3AACEA6F4D4E17877A
A50A9AB3B90A72FF729470C063D06BEEAA5184A0D925F90DCE26119419701EB2
53AFCA84A1D0339652DC6259CB60A6C47C07B17E94492CCC7FA176E9C4175D61
D356F93D23B513D5121081D0F8AD8E04BD4C29CCCFFE386A44> |-
/R <1C60D8A8C9B64EDF88216CF039522D2CD16031C14F48AE18706656314B55
A44D32F713967A5EF8844C033ACCF3957E344151100D1C83334794F24CBE3A1B
9AF4A82F4D6C7CD452B51143B0C6F97C0FA861F03E4C420C96B9F0EC4B2245F8
CD654119EBE887016A0D90A29861BC0C36838B5464E1DB93F15F4476DA9E07D5
97F3D2EA5732F6E8BF74573804D1C1542747A58851CA05BA5FA2416A905DAF1E
03CC5FD0906576F6C98C075D633B8EC1BE9755F5EC40> |-
/S <1C60D8A8C9B7EF32A193189DA2467EEF90BB4843AFCD07682C17FCB181C3
F70B0CA8436486C289ED34AE435D16FF1CB07A2B01CAD9573442FA519C68EF9A
198BFAE5C4A460021A5C56FEA9BD8D624F7DAF5F40358D4BEEF4C33B8CA9313A
0976CADAB3AF967336E068B5FDB3E208F4079D52BB0970F735315F1E256DFA87
D04984A8> |-
/T <1C60D8A8C9B7D8BE7EA0B64700DC8E438573301CAC4344B7D410E182F881
F58CB0EE6C7200F45451BF195D6B4EC9CF9C8B176B767CF2064CDC4BF9C3DA0B
6A6FF54C56F67DE1F05535B028AE5A1E7C736084EB09A8A00FEB9607E1E016> |-
/V <1C60D8A8C9B6079F00D3839AD3AAE47C24C61BEF9550E6B3F54F328A2E72
2C97D7D2FBC5772073A5D2242D57568F9713676A9A112080E9C58F5709109124
89ED383248F2A72FF33DDFA4B7BB50F9DB818B39D67B1C90816C650F497C9BFE
308B3A0ADE01210A> |-
/W <1C60D8A8C9B5D6EF203CFD756D7886C6923F14CB2B145795133A4097CE2D
5E96D3BF6D30AF147BE0DC50CEF0E4C43E37601F7D5B36C9EA62EB623CBDD762
1F7CDC9591AD048D1D8A14C445CA02086468A3F68BFB4F34B84F197939306BCA
26FB45C767C3471D697F21D9DB9B96CBD00D5CB38D9F6CA97F559147F568DB76
4BF9F72A1F66FAB764FDDF200F256A908BEC101F14CE4C8841DBE1467BFC364A
4F282E1F5B95C9> |-
/X <1C60D8A8C9B6079F1E48848E88AD51BACDA7B85AF6C59F325DABC20C0271
F7729B1BAED0A2EA3506BF4981AE769F153EC33455F8CD8A678149C65F9D6530
5D20A4C2F96F9B48C00303751A17174C7775D8C7E9320DD976F795F4B048855D
B20E2637E9BF0976AA26D324FA72B608C9D7660B9B408A0A0A10EAAEB904DB62
180E00E827836F9C73453B226BA367CD073AB8592EA6E9665EEC75D9810C816A
2AD85BA92129690D1A254CB7920BB69D> |-
/a <1C60D8A8C9B77FE2B8A4D222FB41F47F459CA0D95123D06ECF654AB05FF5
B6DC144FC9BBEC366E5ECC063C78F59640CE32DD9D219C4F4385FAEDBC60FF33
4CB1D3BF02D9F353F73914E29D9DD64FAA28B45E23265BD78A90B345EFEAD972
A0D93CE817026DBF17DB9E8E49AD8C2AF4FC6486D49F260206F186E614E3D16B
2F4AD46463A28F92ED5F2851044761192B9ADCF8B12C73A96A7E57C5841BD16A
930132DACDF469EE0C2A8F85A167570E289B5609FF9CB20DD38C9C84A9BB9FC8
A7014AC491483F6C> |-
/b <1C60D8A8C9B7A73DCF483CC3D064C5FA3DCB4FE14F64E061FC6B7B327BD3
AD170E4E134821E89959D7FC86E9160C1887FE9D1E5C6528E6DF501B7B2F3F30
D0CEE6E0ECDE5FBEA2BBABC11DF1E31664808113184F8240E66E326CF8F60725
DAFAA94AA48A85FA298CB9ED7FFADEF21D27A3E79BDB2F75A75EA736FD59CC65
59DB85761C885E021EFCF09E24B9> |-
/c <1C60D8A8C9B77FE2B8B3EAC4BBDE029BAC315D1866DD79216DBC0D30C20B
16F949C4DACB51911E080D5D4FADB2A127C4AB23B312E9F44F985AA21BA1A9B7
1EA7AE21C439E05A319047A6D64BC1D4392480160430400AFA5C943510A8521B
80B0990CB49D8F01EE3F> |-
/d <1C60D8A8C9B7A73DCF5C5F7CCFE1224745C14DED045144DECBED335D8767
365A686119923BC683874F138A812E24882366A564440105A4DC036664F6BE73
6287F87B295D2920E5B8EA5128E5E6C4D3D8CC4EF499D5F82793394C8A44BB4B
C5B324694DE039E82E3C3E95CCEA761C759B9AB2F813EF75023CD818EA7E49BF
A40067FB96C397B29CD7920172CF32CEB2D7D6BA2C2C243F80C59229B326C2E0
18A09BBC01E8E5EAF27058ED024F330852F9551733A92CF8DD2FDE72DD73A6AB
5C5124E5F56317BB270B722C0F9A2DB91EC3> |-
/e <1C60D8A8C9B77FE2B8B0813537CAE403B54DB40537D3BCE3A721EBABA194
412EC3061B00A07EF9497D2BA0393994B5BAD3D53481E4076AC8BDD976CDE1D7
C869C749BF31CD9AA8D8775C17BFBC48988132FD7543B8680B068C59E2A9123C
08B9AC1B> |-
/f <1C60D8A8C9B81F2C46F2EFDEFE0CB59F321E43BFD6E82BCAAF0597468DCF
77C72CE9F4FF44E681C46DF934E6F13477EDB282AE0A0AEB3C1EAE1FE7BD0F6D
E854793C6EBB102BA640EE2A1937B205F1275AE2A18BEEEA6F56A75ACE6F8742
D16A82839984> |-
/g <1C60D8A8C9B7A73DB582976F6FA2EE84F51D64198201D65DA0379D449296
CB33756AB3A7AE8A175ECCFBAEFE2D4D26FE981086B935FAC40322E1F0B8F735
0D4069F2282387985119CD3420DA7C6AF69B6593DDE216B952D8FCDCBEF2F469
E8089D575BA41CC65444D1B22A9D24CFC1E970C8B6BEDF22A18DB852FFB88FE3
E61676AF1B587C8BEDC7F57FDC2C2A66C537084478A0CE11D64537C41EBBD5BF
312EA203B1D25DC925907A26C5096A56920B8D980F1FDE4021D766D9EBB9E2D5
040E1243BA22D72996312BD29C454816BAAC378D28EAD1B4E006AFB191F0E636
14E1C1D12BF3C0816D46C6B4BFA439751F894732123CB9417F879A9079FEB665
894A238DC5E00C5560672D49ED3BE797BB9B40B81D47DC4D6525BAC3E19A2463
521FF7137CAAF2A9FB5F4F7C0D469F6100DFA27CAFCE39CE1E106B3138E3B02A
642CB6CBDE836A606594170908768F9F84598AA082C678AA176A30FCE7778326
054A4DB4C2521DC0835CAFB81BC8AFB272F07932AA37EF69999C6D26587244DB
681D773B8265D77C46AB4A99012FE89850D5F97C81D2ACDC98A50506471087EB
40F5> |-
/h <1C60D8A8C9B7A73DC549024A8346FEB2B78E908B5A6E113B6B1D9F55576F
B6430AA363CC7EA7A85866229D47A648E16050AC3817C69AC198992A95DC887E
9C2F4E126428A388941BC547CF3DFD3AF002591B6C465CE80F6B0C8E3BF1745F
FB044EE609634601B3F272E0A2A1613C8D3DAD607A9DF002A5DBDCD953AE67BA
74F625AAC084AEBD78F5D55004D7E5DC895C1EC4CADD91BABB3BE394835C4CCB
41B4BC3CDD> |-
/i <1C60D8A8C9B854D08887A954377F4C214D4B21F7492A7553FF39CC630E80
1180DD16566EA992053D08DFDDD90B69C61E00DD73FA9F14D9F9BA0BA5DE6F46
3B9913A4C5B8DB11D33C1FDD97C4AED671CB9420D4160C0D8849042FEC7B7C3A
D6164404608E93E91AD41C497AA4F0BFEC99AE40E5> |-
/j <1C60D8A8C9B854D0F8036B9E41E00749D27292159EBFE77AC2277EF54883
34291DD30C4B9C3E7C953150698FE31B2CBE1624AFD85A81A9069F8F47C4285F
33A4C9AD85DA78A27DB5C06356F829273C4740DFB56B8B0FDC43D66AC99A3ABD
AF5532DEF5D91EF8D649F7038A091BBD40D049C74BB965EB68080498527B94AE> |-
/k <1C60D8A8C9B7A73DC549024AEE55A01243B0ED1B2825DB74E3D4409DAB03
360E64EE70A07ED7B69F115EEF98820D21F1DE6EF3BB4358612BA07FC9A40921
C0AD30EF197C3D695EFDC35D3C9730116E52E0ABEFC9769B9302392F123FDEAA
4AA885495C7D34579141F0B531400B42BB4E124EADD24EC34F713FF7466019E5
54EC1582FC6D1F609CBE080383D47963691E73E752C0BDF5CFFA1CA9F764FD81
0298046BFCBC263AE7BCB74C096697F8A00B5877DC20F2A2> |-
/l <1C60D8A8C9B854D08887A955C7D68D8C5333C31878F574AA9AE5E3E7AADB
E1B3A329F6AE772A2FA9E3BCD7AD6B2EB2F08C5C060E81EC0A70F41E9D6D0E7B
19D3FEF21F30C39B12829A5A4E4EDD48F68C41B6A233A2DBED> |-
/m <1C60D8A8C9B6FF86E3B590DB9FE94810D7AFBFE7B946F15ADC4969344E90
E1A3F6BB0EC423A0839831AD6C986649A08BE59C9A3AF60608A974950B299379
DB00149450A78653D6D4B9B18966FB51AC5B75CCA0334B3300F064709EE52494
90C1CB7C6E6F7A3DBD6837889932B38C16FA553F6A7BD9185FFB7638767BBEB1
CC928CF2A5534FC32F6F3027FAF68DC8EE9A75EC980BD894ADC4F0B26421A336
F0F6A40AAD70D4278736A8FEA511C2ED4A971DB961B998B0AA6DA21448599468
54D246CD2A6E94B7321CC1214550> |-
/n <1C60D8A8C9B7A73DC549024A80DEC09E4F713BEC6C634F1E9284F6FC7263
711D03C47F22A203EB41F88268C104BC4A61C7649DA42D5BE18FE7F731730EB4
D130993D14FEE046DD67E78C9CE5C5598D396AB18A5366D9E71D2D6A292A9108
9ACF40B09098B729C4807DB1C9D54B7EE1602D3D091D4525D3E7868AFA4B4D0D
EB009172C2D67F26ED44CA4931A6533F30AB34> |-
/o <1C60D8A8C9B7A73DCF4402F5174BF7DD0D28D0C5665CB34A93F0BF7A993E
7B76B394E0DD4E0D515EE382B893A080E29B40A4402A4A406056947B5B2334F6
D5909CCB56B0284CEFC066661E9D6B7471673D105428B9DFDD7F> |-
/p <1C60D8A8C9B7A73DB581186A9391F1059D96F459FFDB82B44DD4DA245FA5
07D024F28401075285D307468CE0D757751AAB4F3490756973E462106B10BD76
63199C4B8A27D5695A680192DE86699DAAF1A89717FDB65265476969999FB7D7
847B55845008C66520A977913643311D83941F927D5B958DBE761028866277B0
1C9604CB3013C82C039B9AE8C95A3C2834B9ED8E05831C8156944A7F9B872094
AF1AB63EB96F8DF66A491A85E4F72D480F637D538DE8> |-
/q <1C60D8A8C9B7A73DB5811938DD329AF571F14FFDE692A057FCB729720A5B
ED4D1F9C0C23BDB1CB452F40EB6D848BE0932F4C760F5C2503004914FFB4B676
82FA186AE228665B2BFEA6ACC885BEC05363FF79301DC87EB9E5C026E33B1707
B560B235E300E90D1225B3F5646ADDE05DCB20F259A4A8F9EE35B417CA23FCC3
15BAD2FB6734C0B8BCA0E27A3A137C64206716203345A864EDB66059A017842F
1314A9089CC31918917957F569> |-
/r <1C60D8A8C9B81F2C46F2EFD1B3B81533015C6076AEA2DF2F336244DA608D
0666A9C39147579BE5F84064BA5DCF6CD4C576D0177C42EAE7438D00AB1D6595
6107D443F0AD6F08A63F5306BE8A1920B3CB273D9CF24739F3E4740FB53EC981
D22501D5AF8E600BA9EEBFA742EC328561AB6E257A9B7C3C0B4F8CAC20D46ECD
F05FEB5C54162C09AD2C0169673C> |-
/s <1C60D8A8C9B7361F743FE5C092782516B89C667F24852F2833C914D37274
1C204CB19829CF798EC00B6F60FD56301EF9B4136E1F422FAA9773C81ADFC08A
FD24624819F92289BABB5D2A560D29B4C37B5C72F295B1A8757B2DDC4F96A3A7
A76D5B8850E9D3B3108E173E7C2AC94ED9F5B4EBB2AC4F74997A581EAA1D8190
963213A6DBA3FD99B4DDDF91DEB606EB29DAC3E030DB9A2BEA3B60C98F55A0A9
B8097DA00FD849056413A4E04E950801ED07C405C45837491E4864754EBADCC3
2B5232850305BAEEDA0A345554138E3B49E2F7260D37E80E4C37FED6327D7438
DA6B2E0355D0043D6795C50CA3> |-
/t <1C60D8A8C9B854D082F829CADA24029904B667043F82AAF5798ADB1AF637
87A08D89C04AC22E998B93D82023FC776DB3B03794FD10AD1A9169D67270B70C
C8030C1164B605608F8ED713A3CC4AFDDB0825DD3A8B4DD78D9148075B5FF6> |-
/u <1C60D8A8C9B7A73DE1FEDB846BC597269D9E0C51D8C22F2B722B34AEBAF1
90658C0559601B266D7A25A55FD43DDD5BEFD1643FDA15DB9307B56B392B5AC6
8F81B580F46B71CB6DE1A21AE03B91093587C26F113B0055E84FDB8C5EDADEE6
28F85456B6D1B0C90F3F4C6B66407F7C61F465E76A627C6E1AC486C9BC9506FC
F303D0A507D5D7D5D700213EA098FC6A864FC4203B659E> |-
/v <1C60D8A8C9B7A73DDC2846ECA263567D5FF766DAF6EDECBDA59981A2B8D8
52D5F3C735E0CB09E278E085C85902E93B6730AC94976F06C86CE79902DFE3D6
3F4327D345589E5D6D8E4470DC068DE92C7775CDBCE234CF63D9048B83B5B822
5EB38A3E7FD244643B093F0131528FD6DE23> |-
/w <1C60D8A8C9B6079F073CF9E9FD4DD755103DBBF986FA4805E36E84A4ECDE
5D22075F7DCF210C6B1EBA68713659F633DB777AF20557A55192976916F7539F
BF60FD9581CC24839D0FB84FEDB8D55FB604997EF9376D1DB0C150E41998C0DD
7332B70334BC2A16949E085C7559C48EDDB465613BB3B4A21037C818DEE65F27
4EC082BD0BF16541E3A6DC67D01E45FCE5987C6993A634C7751F403C64619D5D
34EDF98783774454B5C36C735A22C2> |-
/x <1C60D8A8C9B7A73DC5490245197C6A10ADDC3E0FA58392059EC7D8F6B66F
B0930B38EB119ACB6A2A3F634D77F5CF7C8D99C62501D6684A6FD07A49AFAD74
8B3BD4468AD4BA11802E815F7DDC3EFDD84C4D7209BF92B0439CDE5D67632483
66DFBFD06A148E86014B62BD462267E2267FF702B3FE0C2F56259689794C288E
394AE4382AFC6AC04373CAD56E7F81CE52F61834C7721A873F0194632E517E05
6B975C> |-
/y <1C60D8A8C9B7A73DB5828C8EB66C86A2A0178950C8A5D2BCDF7E587CE4AD
01DF8AD4603198C6F5DF9E7F658259AE7FF6DC72080528C2A7D419F982E298CC
AED2E6BCC85E06532CEB363664FB4449960341BAA9D39DAAAF5C47EC79D4FFB0
F446C4E2A0FDC91EAC4399171E6DFD5F8C5B3A9EDD053AD9BFC6A562A7DCD44F
19646282D2DDE100CDBBA0EDB34E355DB469767675AF6D94185E4181FCCDCD20
A6CA572AF5532989> |-
/z <1C60D8A8C9B77FE2B2232EA49D913AB92E7516BF62E6A60F72232006C7F9
8446373826AD224BCC9C0B400B08D08E041AF3C08F73E4C31D308972E0D201EC
DBDD1A879A0BBF62D21C71B2> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWXX+Times-Roman /FHRBAA+Times-Roman findfont ct_VMDictPut
/ZUSWXX+Times-Roman*1 
[40{/.notdef}rp /parenleft /parenright 2{/.notdef}rp /comma /hyphen /period /slash 
/zero /one /two /three /four /five /six /seven 
/eight /nine /.notdef /semicolon 5{/.notdef}rp /A /B /C 
/D /E /F /G /H /I /J /K 
/L /M /N /O /P /.notdef /R /S 
/T /.notdef /V /W /X 8{/.notdef}rp /a /b 
/c /d /e /f /g /h /i /j 
/k /l /m /n /o /p /q /r 
/s /t /u /v /w /x /y /z 
133{/.notdef}rp]
ZUSWXX+Times-Roman nf
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
36.5952 62.7365 mo
(thereversibleorelasticdeformation.Thecorrespondingde-)
[2.77388 4.989 7.81776 3.3226 4.43024 4.989 4.43024 3.3226 3.88152 2.77388 4.989 2.77389 
7.81776 4.989 6.71013 4.43024 2.77388 4.43023 3.88152 2.77388 2.77388 7.81777 4.989 4.43024 
3.3226 4.989 3.3226 7.76288 4.43024 2.77388 2.77388 4.989 4.989 5.70343 6.09648 4.989 
7.81778 4.43022 4.989 3.3226 3.3226 4.43024 3.88152 4.989 4.989 4.989 4.98901 2.77388 
4.989 8.37653 4.98901 4.43021 0 ]xsh
36.5952 74.7101 mo
(compositionoftheelastoplasticdeformationgradientintoits)
[4.43023 4.989 7.76288 4.989 4.989 3.88152 2.77389 2.77388 2.77388 4.989 7.82974 4.989 
6.16333 2.77389 4.989 7.27097 4.43023 2.77389 4.43023 3.88153 2.77386 4.98901 4.98898 2.7739 
4.43024 3.88152 2.77388 2.77388 7.27098 4.989 4.43024 3.3226 4.989 3.3226 7.76288 4.43024 
2.77388 2.77388 4.989 7.82974 4.989 3.3226 4.43024 4.989 2.77388 4.43024 4.989 5.61462 
2.77388 4.98901 2.77386 7.82974 2.7739 2.77386 0 ]xsh
36.5952 86.6837 mo
(elasticandplasticpartwasintroducedbyLee)
[4.43023 2.77388 4.43024 3.88152 2.77388 2.77389 8.46134 4.43024 4.989 9.02011 4.989 2.77389 
4.43023 3.88152 2.77388 2.77388 8.46135 4.989 4.43024 3.32259 6.80499 7.20413 4.43024 7.91263 
2.77388 4.989 2.77388 3.3226 4.989 4.989 4.989 4.43024 4.43024 9.0201 4.98901 9.0201 
6.09648 4.43024 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: AXXAAA+Universal-GreekwithMathPi Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /AXXAAA+Universal-GreekwithMathPi def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1988 Adobe Systems Incorporated.  All Rights Reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Universal-GreekwithMathPi) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /H20850 put
dup 35 /H20852 put
dup 64 /H20851 put
dup 98 /H9252 put
dup 103 /H9253 put
dup 113 /H9277 put
dup 117 /H9258 put
dup 126 /H20849 put
def
/FontBBox {-30 -240 1012 815} def
end
systemdict begin
dup /Private
8 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 712 722 425 435 640 650 815 815] def
/OtherBlues [-240 -240] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
9 dict dup begin
/H20850 <1C60D8A8C9B81F2C36CEBB889968504B54D355CFE69A068AC16A1B7
E90FABD0FEB9FFF8B52EC9C01A815FBB97D83BD011E01813E65428C17C587CB3
EDFEC65B425> |-
/H20852 <1C60D8A8C9B81F2C36CEF073587D9B5603F5DF29A870F7A8171CFC2
F08EC412E6B76233D659A5427FE99B7568624> |-
/H20851 <1C60D8A8C9B81F2C36CEF073587D9B564F36E3C2836883BAB36DF0C
FCC9B5FEB98316110B77F29D74840320E0D> |-
/H9252 <1C60D8A8C9B7D8BE969BB3E0F2E9D62C1C4F8C46ED2741DB6FF3F4B8
871487657873A5DE981ED04C17C0F892827AFC9980CF502CDAE581D54ED41C00
E523AF36DB504BE40E884D3C314BFCC70E0B923AD778949BD8DCFCE5BC2EFF63
A18B9EF6495E58F6AFC88A5E6D4E4E06D48EDACB5D5DD5467286A89E96C19ED6
E259C440EB8FEE063908F0C3AA2A1B636A068C0C5925C4E32529E0C1FC11743D
C5FFCA64A6B54C2210BF56DEC08F5B6EAC992468> |-
/H9253 <1C60D8A8C9B7EF322BE8AA660D88DB8FC89CF7CE3D57F70896436C47
204FFDF038D3D0A246A1836DAD2E43A674ECCF97B0CF84F150C63BEFFBF8635F
0064C44CF30937D2FE90E0E1FD1F15B972E389DB8CA2003129CFFC46B95F6CD9
91A6061E697DB7529861C782DE2FCDA7B37E07AB0A00B7CD78621696D24207F8
7E9464CD7BE78C7F35> |-
/H9277 <1C60D8A8C9B64EDF824E169FC3DF58AB38E8F0729C626D7B31B22D19
B693A94795AA765434E6D50A41D74E59B980D5D51F98492010B132BA233CF953
439530F3BC7F114A30B916E50796FFDC7C6D474A4B11275E76C1BF78893741E8
1E143723F716B7C79918C62726C0452719FDB4786D7CB4740EAAE47AC54B8D61
52B4027A6CF577E8ED2BE071CDDA4E31F970FFEC2227868A9AC83A472B6034D5
EF6A13BC56F8A4AFF0500D2554D04AC0F2D89CD806133C9DD5744322FF90FF1A
9BBB3AF236A5983887BCC2D64AAA1FD9FC20C8F07DF757D117FA0E4470007AC5
6956CE419CF74E2D8AFB6C23F2> |-
/H9258 <1C60D8A8C9B7A73D37F6DCD067F4EB4F3C9CEE55E9728D40ACE429DE
642C677F326CAFF72EE52F5E64C624F0C2C2F1905532582BE1146265F5DFFED5
E4579AF4AC9A2659EBC400994133126FF4918425FB03538BBEBF2EBD982383DA
3824813698F2FD29C12B> |-
/H20849 <1C60D8A8C9B81F2C36CEBB889953F289E654FCF15847DD3AFD6F08A
8308A48E3FEF9CE53FEFABFA128BC84036124B9C098EFA9621D79984E0966236
64FA28CCEC7> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWXY+Universal-GreekwithMathPi /AXXAAA+Universal-GreekwithMathPi findfont ct_VMDictPut
/ZUSWXY+Universal-GreekwithMathPi*1 
[33{/.notdef}rp /H20850 /.notdef /H20852 28{/.notdef}rp /H20851 33{/.notdef}rp /H9252 
4{/.notdef}rp /H9253 9{/.notdef}rp /H9277 3{/.notdef}rp /H9258 8{/.notdef}rp /H20849 
129{/.notdef}rp]
ZUSWXY+Universal-GreekwithMathPi nf
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
233.438 86.6837 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
236.761 86.6837 mo
(5)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
241.75 86.6837 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
245.073 86.6837 mo
(.Related)
[6.52562 6.6554 4.43024 2.77386 4.43024 2.7739 4.43024 0 ]xsh
36.5952 98.6572 mo
(earlycontributionsalsoincludeBackman)
[4.43023 4.43024 3.3226 2.77388 8.41045 4.43024 4.989 4.989 2.77389 3.3226 2.77388 4.98901 
4.989 2.77388 2.77388 4.989 4.989 7.30298 4.43024 2.77388 3.88152 8.41046 2.77388 4.989 
4.43024 2.77388 4.989 4.98901 7.85168 6.65541 4.43024 4.43022 4.989 7.76289 4.43024 0 
]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
209.448 98.6572 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
212.771 98.6572 mo
(21)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
222.749 98.6572 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
226.071 98.6572 mo
(,LeeandLiu)
[5.91595 6.09648 4.43024 7.85168 4.43024 4.98901 8.41043 6.0965 2.7739 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
36.5952 110.631 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
39.9179 110.631 mo
(22)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
49.8959 110.631 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
53.2185 110.631 mo
(,Fox)
[5.78524 5.54777 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
77.8203 110.631 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
81.143 110.631 mo
(23)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
91.121 110.631 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
94.4436 110.631 mo
(,Willis)
[5.60664 9.02211 2.77389 2.77388 2.77388 2.77388 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
127.341 110.631 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
130.664 110.631 mo
(24)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
140.642 110.631 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
143.964 110.631 mo
(,Mandel)
[5.78525 8.87051 4.43024 4.989 4.989 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
183.523 110.631 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
186.846 110.631 mo
(25,26)
[4.989 4.989 2.49451 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
209.296 110.631 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
212.619 110.631 mo
(,andKro)
[5.78525 4.43024 4.989 8.27974 7.20412 3.3226 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: SPVBAA+Times-Roman Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /SPVBAA+Times-Roman def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Roman) def
/ItalicAngle 0 def
/BaseFontName (Times-Roman) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 174 /fi put
dup 194 /acute put
dup 200 /dieresis put
def
/FontBBox {-168 -218 1000 898} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-14 -0 662 676 450 460 683 683] def
/OtherBlues [262 270 -218 -217] def
/FamilyBlues [-14 -0 450 460 662 676] def
/FamilyOtherBlues [-218 -217 262 270 394 394] def
/StdHW [28] def
/StdVW [84] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/fi <1C60D8A8C9B7EF32570AFF8232948072BEC4C50248C1208A69B28B65AAD
BCA92759C919FA1E9FEED9805553A4DA719E642BF818FA1F207BFFFA261F4684
EEDEC74D5FA21E60ACFC86CCDCCAB1F34855657DE53C09E74BC643E809747A44
90D6E2D525AF43CE58C8030D80DD7C648C3036BD5C3D4AD9A69D5D31C9A067EA
77341991BEAF0722208EC7CF6FF370325F44116B8F101A9BC9394B7572AA8CB6
FD53542F5362A92C681DCE3150EDF3158D05182681F9FAFCE92EDE83E3B17EF7
235AE203955993A0D562648749B3CC0> |-
/acute <1C60D8A8C9B81F2C353C1B5AE156DF54204A524CC73F7EC68F007110
57EA96E2B3EE2EBE6447C18B6F618F1D866397AC0A21DE9B> |-
/dieresis <1C60D8A8C9B81F2C352CEAA8487D0F5B6E652931D2A39EDDE5436
59A238B671EB25AB4047DFA3AFD30F22852C858310CFBE4CF0D655175CF60F3A
83775E7BB4842E186BA2A719D223C7610D3FCDDD6> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWXZ+Times-Roman /SPVBAA+Times-Roman findfont ct_VMDictPut
/ZUSWXZ+Times-Roman*1 
[174{/.notdef}rp /fi 19{/.notdef}rp /acute 5{/.notdef}rp /dieresis 55{/.notdef}rp]
ZUSWXZ+Times-Roman nf
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
247.464 109.522 mo
(\310)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
251.62 110.631 mo
(nerand)
[4.989 4.43024 6.61334 4.43024 4.98898 0 ]xsh
36.5952 122.604 mo
(Teodosiu)
[5.39902 4.43023 4.989 4.989 4.989 3.88152 2.77388 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
77.1228 122.604 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
80.4455 122.604 mo
(27)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
90.4235 122.604 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
93.7462 122.604 mo
(.Thedecompositionreceivedagreatdealof)
[6.40388 6.09648 4.98901 8.51822 4.989 4.43024 4.43024 4.989 7.76288 4.989 4.989 3.88153 
2.77386 2.7739 2.77388 4.989 9.07698 3.3226 4.43024 4.43024 4.43022 2.7739 4.989 4.43022 
9.077 8.51823 4.989 3.3226 4.43024 4.43022 6.86188 4.989 4.43024 4.43024 6.86188 4.98898 
0 ]xsh
36.5952 134.578 mo
(attentioninthephenomenologicaltheoryofelastoplasticity)
[4.43023 2.77388 2.77388 4.43023 4.989 2.77388 2.77388 4.98899 8.85847 2.77388 8.85847 2.77388 
4.989 8.29971 4.989 4.989 4.43024 4.989 4.989 7.76288 4.43024 4.989 4.989 2.77388 
4.989 4.989 2.7739 4.43024 4.43024 6.64334 2.7739 4.989 4.43022 4.98901 3.32259 8.85847 
4.989 7.19208 4.43024 2.77388 4.43024 3.88152 2.77388 4.989 4.989 2.77388 4.43022 3.88153 
2.77386 2.7739 4.43024 2.7739 2.77386 0 ]xsh
36.5952 146.552 mo
(duringpastthreedecades.Representativereferencesinclude)
[4.989 4.989 3.3226 2.77388 4.989 8.26578 4.989 4.43024 3.88152 6.05066 2.77388 4.989 
3.3226 4.43024 7.70702 4.989 4.43024 4.43024 4.43024 4.989 4.43024 3.88152 5.77127 6.6554 
4.43024 4.989 3.3226 4.43024 3.88152 4.43024 4.989 2.77388 4.43024 2.77388 2.77388 4.989 
7.70702 3.3226 4.43024 3.32259 4.43024 3.3226 4.43024 4.989 4.43024 4.43024 7.15828 2.7739 
4.989 4.43021 2.7739 4.98901 4.98898 0 ]xsh
36.5952 158.525 mo
(Freund)
[5.54776 3.3226 4.43023 4.989 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
71.4933 158.525 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
74.8159 158.525 mo
(28)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
84.7939 158.525 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
88.1166 158.525 mo
(,Sidoroff)
[9.12488 5.54777 2.77388 4.989 4.98901 3.32259 4.98901 3.14399 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
136.95 158.525 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
140.273 158.525 mo
(29)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
150.251 158.525 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
153.573 158.525 mo
(,Kleiber)
[9.12488 7.20412 2.77388 4.43024 2.77388 4.989 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
199.253 158.525 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
202.575 158.525 mo
(30)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
212.553 158.525 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
215.876 158.525 mo
(,Nemat-Nasser)
[9.12488 7.20412 4.43024 7.76288 4.43024 2.77388 3.3226 7.20413 4.43024 3.8815 3.88153 4.43024 
0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
36.5972 170.499 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
39.9199 170.499 mo
(31,32)
[4.989 4.989 2.4945 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
62.3704 170.499 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
65.6931 170.499 mo
(,LubardaandLee)
[5.60365 6.09648 4.989 4.989 4.43024 3.3226 4.989 7.53938 4.43024 4.989 8.09814 6.0965 
4.43022 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
143.237 170.499 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
146.56 170.499 mo
(33)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
156.538 170.499 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
159.86 170.499 mo
(,JohnsonandBammann)
[5.60364 3.88153 4.989 4.989 4.989 3.88152 4.989 8.09814 4.43024 4.989 8.09814 6.65541 
4.43022 7.76289 7.76288 4.43024 4.98898 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
262.928 170.499 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
266.251 170.499 mo
(34)
[4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
276.229 170.499 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
279.552 170.499 mo
(,)sh
36.5972 182.472 mo
(SimoandOrtiz)
[5.54776 2.77388 7.76288 7.51443 4.43024 4.989 7.51443 7.20412 3.32259 2.77389 2.77388 0 
]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
100.16 182.472 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
103.483 182.472 mo
(35)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
113.461 182.472 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
116.783 182.472 mo
(,Needleman)
[5.01994 7.20412 4.43024 4.43022 4.989 2.7739 4.43024 7.76288 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
169.769 182.472 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
173.091 182.472 mo
(36)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
183.069 182.472 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
186.392 182.472 mo
(,Dashner)
[5.01993 7.20412 4.43024 3.88152 4.989 4.989 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
227.184 182.472 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
230.507 182.472 mo
(37)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
240.485 182.472 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
243.807 182.472 mo
(,Dafalias)
[5.01993 7.20412 4.43024 3.3226 4.43024 2.77386 2.7739 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
36.5972 194.446 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
39.9199 194.446 mo
(38,39)
[4.989 4.989 2.4945 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
62.3704 194.446 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
65.6931 194.446 mo
(,Agah-Tehrani)
[5.21051 7.20412 4.989 4.43024 4.989 3.3226 5.39902 4.43023 4.98901 3.32259 4.43024 4.989 
0 ]xsh
true set_gvm
%ADOBeginSubsetFont: JWPAAA+Times-Italic Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /JWPAAA+Times-Italic def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle -15.5 def
/BaseFontName (Times-Italic) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 84 /T put
dup 97 /a put
dup 101 /e put
dup 108 /l put
dup 116 /t put
def
/FontBBox {-169 -217 1010 883} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-18 -0 653 670 428 441 676 683] def
/OtherBlues [268 271 -209 -205] def
/FamilyBlues [-14 -0 450 460 662 676] def
/FamilyOtherBlues [-218 -217 262 270 394 394] def
/StdVW [76] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
6 dict dup begin
/T <1C60D8A8C9B7EF32570BCC0CA6AD1C99EF8630A62A45D24C429B829E1F9C
143D6F432419CCC7B23595B2B435C4D09B8F8C38C9C724755D4414490A96B749
65CA7E645D8DA57037A707EC8CF2AB248AB64FB5536D4EBE19603E8FC50B8D20
A4> |-
/a <1C60D8A8C9B7A73DCF5D2D361A1FE7BACB90F7ECBC39897143FAA968C42D
E5542D7C1E50C896C16D636C2B0931374312D5A913BF97E0FFE54FA376BD3BF8
9D431B814050D3DCDC2B170275D5928C2C94909A4E7BC365B3672186E2EEAF1A
CDF76A3BB344F81AE8D8112A17EA6A2BB97B55B797F2DB5F281D8B7D8F2CA3F9
0848C1E13D8168838A5B84BC9DBCDFE6796394455983F2CD7583645744549ACA
6277D21E676C268D4BAF0D407670137FC6C8D46ADF38BC2A10298A9E9ACB7238
FD126ED0E9A8AD213C70926AAD623160> |-
/e <1C60D8A8C9B77FE2B997F32F2DB91A4F584393A1EA30FBC29D24ABE1FB5A
639719D47006341803310EC93719C9A6BB29A72A60CDB34F352CE28CA4429D27
F6E313A68FCEF9BDAFD626592A1A3BEC3764DC5E56A83ECF98D274A3DC99A147
84C4D20D2B8E00BADF9632E634A97340D3> |-
/l <1C60D8A8C9B854D083A339E80FC114EBCB07831E57AC3514F2B61918C12A
E930AECB34DAD158102A4D147ED3C2DD63EDAE3162F8663059064144C3CD5120
FF4FE660B3B147181B6070110F4B12934A834EB771C84CD3E89E8869DD320FB8
67D94183FC2D1D7C0514C682BE71D9FE3FD3887B89E760> |-
/t <1C60D8A8C9B854D083A90EFBC938A96A3D406E5A2CAF9702D718BA3D1554
4D72C81A56130620521C73D2F3B4E1FD111F0DFA9EF2C0EC96770011D0584F9E
BB0BA062CFD08BB13215B6521B5D8BF7E43412C7CBEB31C2196018424A90AC47
A0D67EEF7911A4CEE72FAAF94D9712C09FBB888DEC43DE06DA> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYA+Times-Italic /JWPAAA+Times-Italic findfont ct_VMDictPut
/ZUSWYA+Times-Italic*1 
[84{/.notdef}rp /T 12{/.notdef}rp /a 3{/.notdef}rp /e 6{/.notdef}rp /l 
7{/.notdef}rp /t 139{/.notdef}rp]
ZUSWYA+Times-Italic nf
ZUSWYA+Times-Italic*1 [9.978 0 0 -9.978 0 0 ]msf
129.435 194.446 mo
(etal)
[4.43024 5.76727 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
150.658 194.446 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
153.98 194.446 mo
(40)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
163.958 194.446 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
167.281 194.446 mo
(,VanderGiessen)
[5.5787 6.09856 4.43022 8.25182 4.989 4.43024 6.5854 7.20412 2.77388 4.43024 3.88152 3.88152 
4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
242.497 194.446 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
245.82 194.446 mo
(41)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
255.798 194.446 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
259.121 194.446 mo
(,Mo-)
[5.75729 8.87051 4.98901 0 ]xsh
36.5973 206.419 mo
(ran)
[3.3226 4.43023 0 ]xsh
ZUSWYA+Times-Italic*1 [9.978 0 0 -9.978 0 0 ]msf
53.1577 206.419 mo
(etal)
[4.43023 5.76728 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
74.9367 206.419 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
78.2594 206.419 mo
(42)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
88.2374 206.419 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
91.5601 206.419 mo
(,Naghdi)
[6.31308 7.20412 4.43024 4.989 4.989 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
131.066 206.419 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
134.389 206.419 mo
(43)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
144.367 206.419 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
147.689 206.419 mo
(,Aravas)
[5.76529 7.20412 3.3226 4.43024 4.989 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
185.531 206.419 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
188.854 206.419 mo
(44)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
198.832 206.419 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
202.154 206.419 mo
(,LubardaandShih)
[6.31308 6.09648 4.989 4.989 4.43024 3.3226 4.989 8.24881 4.43024 4.989 8.8076 5.54773 
4.98901 2.7739 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
36.5983 218.393 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
39.9209 218.393 mo
(45)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
49.8989 218.393 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
53.2216 218.393 mo
(,Xiao)
[7.31886 7.20412 2.77388 4.43024 0 ]xsh
ZUSWYA+Times-Italic*1 [9.978 0 0 -9.978 0 0 ]msf
84.7621 218.393 mo
(etal)
[4.43024 5.76728 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
107.547 218.393 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
110.87 218.393 mo
(46)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
120.848 218.393 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
124.17 218.393 mo
(,andLubardaandBenson)
[7.31886 4.43024 4.989 9.81337 6.09647 4.98901 4.989 4.43022 3.3226 4.98901 9.25459 4.43022 
4.98901 9.81335 6.6554 4.43024 4.98901 3.8815 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
242.784 218.393 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
246.106 218.393 mo
(47)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
256.084 218.393 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
259.407 218.393 mo
(.The)
[7.14026 6.09647 4.98901 0 ]xsh
36.5983 230.367 mo
(multiplicativedecompositionwasfurtherextendedandsuc-)
[7.76288 4.989 2.77388 2.77388 2.77388 4.989 2.77388 2.77389 4.43023 4.43024 2.77388 2.77388 
4.98901 8.02431 4.989 4.43024 4.43024 4.989 7.76288 4.98901 4.989 3.88152 2.77388 2.7739 
2.77386 4.98901 8.58307 7.20412 4.43024 7.47559 3.3226 4.989 3.3226 2.77388 4.98901 4.43024 
6.91669 4.43022 4.98901 2.77388 4.43024 4.989 4.989 4.43024 8.58308 4.43022 4.98903 8.58307 
3.88153 4.98898 4.43024 0 ]xsh
36.5983 242.34 mo
(cessfullyappliedtomodeltheelastoplasticdeformationof)
[4.43023 4.43024 3.88152 3.88152 3.3226 4.989 2.77388 2.77388 9.17876 4.43024 4.989 4.989 
2.77389 2.77388 4.43024 9.17876 2.77388 9.17876 7.76289 4.989 4.989 4.43024 6.96364 2.77388 
4.98901 8.62 4.43022 2.7739 4.43022 3.88153 2.77388 4.989 4.989 2.77386 4.43024 3.88152 
2.7739 2.77388 8.62 4.989 4.43024 3.3226 4.989 3.3226 7.76288 4.43024 2.77388 2.7739 
4.98898 9.17877 4.98901 0 ]xsh
36.5983 254.314 mo
(singlecrystals,inwhichthecrystallographicslipisassumed)
[3.88152 2.77388 4.989 4.989 2.77388 7.50845 4.43023 3.3226 4.989 3.88152 2.77388 4.43024 
2.77388 3.88152 5.57271 2.77388 8.06721 7.20412 4.989 2.77388 4.43024 8.06721 2.77388 4.989 
7.50845 4.43024 3.32259 4.98901 3.88152 2.77388 4.43024 2.77388 2.77388 4.989 4.98901 3.32259 
4.43024 4.989 4.989 2.77388 7.50845 3.88152 2.77388 2.77388 8.06721 2.77388 6.95975 4.43022 
3.88152 3.88153 4.98901 7.76288 4.43024 0 ]xsh
36.5983 266.287 mo
(tobetheonlymechanismofplasticdeformation.Theplastic)
[2.77388 7.86566 4.989 7.30689 2.77388 4.98901 7.30688 4.989 4.98901 2.77388 7.86565 7.76289 
4.43024 4.43024 4.989 4.43023 4.98901 2.77387 3.88153 10.6395 4.98901 6.19925 4.98898 2.7739 
4.43024 3.88152 2.77388 2.77388 7.30688 4.989 4.43024 3.3226 4.989 3.3226 7.76288 4.43024 
2.77388 2.77388 4.98901 4.989 5.19354 6.09648 4.989 7.30692 4.98898 2.7739 4.43024 3.8815 
2.7739 2.77386 0 ]xsh
36.5983 278.261 mo
(partofdeformationgradientaccountsforthecrystallo-)
[4.989 4.43024 3.3226 9.02411 4.989 9.57282 4.989 4.43023 3.3226 4.989 3.3226 7.76288 
4.43024 2.77388 2.77389 4.989 11.2392 4.98899 3.3226 4.43024 4.98901 2.77386 4.43024 4.98901 
9.02409 4.43024 4.43024 4.43024 4.989 4.989 4.989 2.77388 10.1317 3.3226 4.989 9.57283 
2.77388 4.989 10.6805 4.43024 3.3226 4.98901 3.8815 2.7739 4.43024 2.77386 2.77386 4.98901 
0 ]xsh
36.5983 290.234 mo
(graphicslip,whiletheelasticpartaccountsforthelattice)
[4.989 3.3226 4.43023 4.989 4.989 2.77388 8.8924 3.88152 2.77388 2.77388 4.98901 6.95665 
7.20412 4.98901 2.77388 2.77389 8.89239 2.77389 4.989 8.8924 4.43024 2.77388 4.43024 3.88152 
2.77388 2.77388 8.8924 4.989 4.43024 3.3226 7.23604 4.43024 4.43024 4.43024 4.989 4.989 
4.989 2.77388 8.34369 3.3226 4.989 7.78477 2.77388 4.989 8.8924 2.7739 4.43021 2.77393 
2.77386 2.77386 4.43024 0 ]xsh
36.5983 302.208 mo
(stretchingandrotation;AsaroandRice)
[3.88152 2.77388 3.3226 4.43023 2.77388 4.43023 4.989 2.77388 4.98901 8.15502 4.43023 4.989 
8.15502 3.3226 4.989 2.77388 4.43024 2.77388 2.77388 4.989 4.98901 5.3931 7.20412 3.88152 
4.43024 3.3226 8.15501 4.43024 4.989 8.15501 6.6554 2.7739 4.43022 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
199.15 302.208 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
202.473 302.208 mo
(6)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
207.462 302.208 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
210.784 302.208 mo
(,HillandHavner)
[5.66052 7.20412 2.77388 2.77388 5.93991 4.43022 4.989 8.15503 7.2041 4.43024 4.98901 4.98898 
4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
36.5982 314.182 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
39.9209 314.182 mo
(7)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
44.9099 314.182 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
48.2326 314.182 mo
(,Asaro)
[4.92913 7.20412 3.88152 4.43024 3.32259 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
79.9716 314.182 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
83.2943 314.182 mo
(8,9)
[4.989 2.4945 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
95.7668 314.182 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
99.0895 314.182 mo
(,Havner)
[5.47692 7.20412 4.43024 4.98901 4.989 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
136.913 314.182 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
140.236 314.182 mo
(10)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
150.214 314.182 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
153.536 314.182 mo
(,AravasandAifantis)
[4.92914 7.20412 3.32259 4.43024 4.989 4.43024 6.86395 4.43024 4.98898 7.42365 7.2041 2.7739 
3.3226 4.43024 4.98898 2.7739 2.77386 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
241.679 314.182 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
245.002 314.182 mo
(48)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
254.98 314.182 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
258.302 314.182 mo
(,Bas-)
[5.47693 6.6554 4.43024 3.88153 0 ]xsh
36.5983 326.155 mo
(sani)
[3.88152 4.43024 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
57.2248 326.155 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
60.5475 326.155 mo
(49)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
70.5255 326.155 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
73.8481 326.155 mo
(,Lubarda)
[7.04646 6.09648 4.989 4.98901 4.43024 3.32259 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
118.694 326.155 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
122.017 326.155 mo
(50)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
131.995 326.155 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
135.318 326.155 mo
(,andGurtin)
[7.04646 4.43024 4.989 9.54097 7.2041 4.98901 3.3226 2.77388 2.77388 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
191.93 326.155 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
195.252 326.155 mo
(51)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
205.23 326.155 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
208.553 326.155 mo
(.Theconstitutive)
[6.86885 6.09648 4.989 8.98221 4.43024 4.98898 4.98901 3.88152 2.77388 2.7739 2.77386 4.98901 
2.77386 2.7739 4.98898 0 ]xsh
36.5983 338.129 mo
(analysisofsinglecrystalplasticitywithintheframeworkof)
[4.43023 4.989 4.43023 2.77388 4.989 3.88152 2.77389 7.41074 4.989 6.85182 3.88152 2.77389 
4.989 4.989 2.77388 7.95946 4.43023 3.3226 4.989 3.88151 2.7739 4.43024 6.3031 4.98898 
2.7739 4.43024 3.8815 2.7739 2.77388 4.43024 2.77388 2.77388 8.51822 7.20412 2.77388 2.77388 
4.989 2.77388 8.51823 2.77388 4.989 7.95946 3.3226 3.3226 4.43024 7.76288 4.43024 7.2041 
4.98901 3.3226 8.51822 4.98901 0 ]xsh
36.5983 350.102 mo
(multiplicativedecompositionisalsopresentedinSection3,)
[7.76288 4.989 2.77388 2.77388 2.77388 4.989 2.77388 2.77389 4.43023 4.43024 2.77388 2.77388 
4.98901 8.02132 4.989 4.43024 4.43023 4.98901 7.76288 4.989 4.98901 3.8815 2.7739 2.77388 
2.77388 4.989 8.58008 2.77388 7.4726 4.43024 2.77388 3.88152 8.58008 4.989 3.3226 4.43024 
3.88152 4.43024 4.989 2.77388 4.43024 8.58008 2.77388 8.58008 5.54778 4.43022 4.43024 2.77388 
2.7739 4.98901 8.58008 4.98898 0 ]xsh
36.5983 362.076 mo
(withanaccentgiventoadditivedecompositionsofthestress)
[7.20412 2.77388 2.77388 7.81477 4.43024 7.81477 4.43023 4.43023 4.43024 4.43024 4.989 5.59966 
4.989 2.77388 4.989 4.43024 7.81477 2.77388 7.81477 4.43024 4.989 4.989 2.77388 2.7739 
2.77386 4.98901 7.256 4.989 4.43024 4.43024 4.989 7.76288 4.989 4.989 3.88152 2.77388 
2.77388 2.7739 4.989 4.989 6.70728 4.989 6.14836 2.77388 4.98901 7.256 3.88153 2.77386 
3.3226 4.43024 3.8815 0 ]xsh
36.5983 374.05 mo
(andstrainratesintotheirelasticandplasticparts.)
[4.43023 4.989 8.31068 3.88152 2.77388 3.3226 4.43024 2.77388 8.31168 3.3226 4.43023 2.77389 
4.43023 7.2042 2.77388 4.989 2.77389 8.31167 2.77389 4.989 4.43024 2.77388 6.64528 4.43024 
2.77388 4.43022 3.88153 2.77388 2.77388 7.75291 4.43024 4.989 8.31168 4.989 2.7739 4.43022 
3.88153 2.77388 2.77388 7.75291 4.989 4.43024 3.32259 2.7739 3.88152 0 ]xsh
48.5719 386.023 mo
(Thethirdareaofnonlinearcontinuummechanicsin)
[6.09648 4.989 10.7094 2.77389 4.989 2.77388 3.3226 11.2682 4.43023 3.3226 4.43023 10.7094 
4.989 9.60176 4.989 4.989 4.989 2.77388 2.77388 4.989 4.43024 4.43024 9.60176 4.43024 
4.989 4.989 2.77388 2.77388 4.98901 4.989 4.98898 14.042 7.76288 4.43024 4.43022 4.98901 
4.43022 4.98898 2.7739 4.43024 10.1607 2.77386 0 ]xsh
36.5983 397.997 mo
(whichthemultiplicativedecompositionofdeformationgra-)
[7.20412 4.989 2.77388 4.43023 8.58009 2.77388 4.98901 8.02131 7.76289 4.989 2.77388 2.77388 
2.77389 4.989 2.77389 2.77388 4.43024 4.43023 2.77389 2.77388 4.989 8.02132 4.98901 4.43024 
4.43022 4.989 7.76289 4.989 4.989 3.88152 2.77388 2.77388 2.77388 4.989 8.58008 4.989 
6.91368 4.989 4.43024 3.3226 4.989 3.3226 7.76288 4.43024 2.77388 2.77388 4.98901 8.58005 
4.98901 3.3226 4.43024 0 ]xsh
36.5983 409.97 mo
(dientwasappliedisbiomechanics.Thesofttissues,suchas)
[4.989 2.77388 4.43023 4.989 6.17538 7.20412 4.43024 7.28302 4.43023 4.989 4.98901 2.77388 
2.77388 4.43024 8.3905 2.77389 7.28301 4.989 2.77389 4.989 7.76289 4.43022 4.43024 4.989 
4.43024 4.989 2.77388 4.43024 3.88152 5.71739 6.09648 4.989 7.83174 3.88152 4.989 3.3226 
6.17538 2.7739 2.77388 3.88152 3.88152 4.989 4.43024 3.88152 5.89601 3.88152 4.98901 4.43024 
8.3905 4.43024 0 ]xsh
36.5983 421.944 mo
(bloodvesselsandtendons,canexperiencelargedeforma-)
[4.989 2.77388 4.989 4.989 9.72256 4.989 4.43023 3.88152 3.88152 4.43024 2.77388 8.61508 
4.43024 4.989 9.72256 2.77389 4.43023 4.98901 4.989 4.989 4.989 3.88152 7.22806 4.43024 
4.43024 9.72255 4.43024 4.989 4.989 4.43024 3.3226 2.77388 4.43024 4.989 4.43024 9.1638 
2.77388 4.43024 3.14398 4.989 9.16379 4.989 4.43024 3.3226 4.98901 3.32257 7.76288 4.43024 
0 ]xsh
36.5983 433.918 mo
(tionsduringtheirstress-modulatedgrowth.Indescribingthis)
[2.77388 2.77388 4.989 4.989 6.60551 4.989 4.989 3.3226 2.77388 4.989 7.71299 2.77388 
4.98901 4.43023 2.77389 6.04659 3.88152 2.77388 3.3226 4.43024 3.88152 3.88152 3.3226 7.76288 
4.98901 4.98898 4.98901 2.77386 4.43024 2.7739 4.43024 7.71298 4.989 3.3226 4.989 7.20412 
2.77388 4.989 5.21851 3.3226 7.713 4.989 4.43024 3.88152 4.43024 3.3226 2.77388 4.989 
2.7739 4.98898 7.71301 2.77386 4.98901 2.77386 0 ]xsh
36.5983 445.891 mo
(process,Rodrigez)
[4.989 3.3226 4.989 4.43024 4.43023 3.88152 3.88152 6.34701 6.6554 4.989 4.98901 3.32259 
2.77389 4.989 4.43023 0 ]xsh
ZUSWYA+Times-Italic*1 [9.978 0 0 -9.978 0 0 ]msf
113.3 445.891 mo
(etal)
[4.43024 5.76728 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
135.113 445.891 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
138.436 445.891 mo
(11)
[4.62082 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
148.046 445.891 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
155.221 445.891 mo
(decomposedthecorresponding)
[4.989 4.43024 4.43024 4.989 7.76288 4.989 4.989 3.88152 4.43024 8.84151 2.77388 4.989 
8.28275 4.43022 4.98901 3.3226 3.3226 4.43024 3.8815 4.98901 4.98898 4.98901 4.98901 2.77386 
4.98901 0 ]xsh
36.5993 457.865 mo
(deformationgradientintoitselasticandgrowthparts.Such)
[4.989 4.43024 3.3226 4.989 3.3226 7.76288 4.43024 2.77388 2.77389 4.989 8.62 4.989 
3.3226 4.43023 4.98901 2.77388 4.43024 4.989 6.40488 2.77388 4.98901 2.77386 8.62 2.7739 
2.77388 7.51251 4.43024 2.77388 4.43024 3.8815 2.7739 2.7739 8.06122 4.43024 4.98898 8.62003 
4.98898 3.3226 4.98901 7.2041 2.7739 8.61996 4.98901 4.43024 3.3226 2.77386 3.88153 6.12549 
5.54776 4.98901 4.43021 0 ]xsh
36.5993 469.838 mo
(decompositionwasfurtherutilizedbyTaberandEggers)
[4.989 4.43024 4.43023 4.989 7.76288 4.98901 4.989 3.88152 2.77388 2.77388 2.77389 4.989 
7.55135 7.20412 4.43024 6.44386 3.3226 4.989 3.3226 2.7739 4.98898 4.43024 5.88495 4.989 
2.77388 2.7739 2.77386 2.7739 4.43024 4.43024 7.55133 4.98901 7.37274 5.39902 4.43024 4.98901 
4.43024 5.88495 4.43024 4.98898 7.55136 6.09647 4.98901 4.98901 4.43021 3.3226 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
262.946 469.838 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
266.269 469.838 mo
(12)
[4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
276.247 469.838 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
279.57 469.838 mo
(,)sh
36.5993 481.812 mo
(ChenandHoger)
[6.6554 4.989 4.43024 9.00614 4.43024 4.989 9.00614 7.20412 4.98901 4.989 4.43024 0 
]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
109.056 481.812 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
112.378 481.812 mo
(13)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
122.356 481.812 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
125.679 481.812 mo
(,KlischandVanDyke)
[6.51165 7.20412 2.77388 2.77388 3.88152 4.43024 9.00613 4.43024 4.98901 8.82753 6.09856 4.43022 
9.00615 7.20412 4.989 4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
225.668 481.812 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
228.991 481.812 mo
(14)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
238.969 481.812 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
242.292 481.812 mo
(,Lubarda)
[6.51164 6.09648 4.989 4.98901 4.43024 3.3226 4.98898 0 ]xsh
36.5993 493.786 mo
(andHoger)
[4.43023 4.989 8.7537 7.20412 4.989 4.989 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
83.471 493.786 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
86.7936 493.786 mo
(15)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
96.7716 493.786 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
100.094 493.786 mo
(,TaberandPerucchio)
[6.0806 5.39902 4.43023 4.98901 4.43023 7.0873 4.43024 4.989 8.75371 5.54776 4.43024 3.3226 
4.989 4.43022 4.43024 4.98901 2.77386 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
194.348 493.786 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
197.671 493.786 mo
(52)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
207.649 493.786 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
210.972 493.786 mo
(,andHoger)
[6.2592 4.43024 4.989 8.75369 7.20412 4.989 4.989 4.43024 0 ]xsh
ZUSWYA+Times-Italic*1 [9.978 0 0 -9.978 0 0 ]msf
264.103 493.786 mo
(etal)
[4.43024 5.76727 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
36.5993 505.759 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
39.922 505.759 mo
(53)
[4.989 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
49.9 505.759 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
53.2226 505.759 mo
(.InSection4,wepresentananalysisofthestress-)
[7.7559 3.3226 10.2504 5.54777 4.43024 4.43023 2.77388 2.77388 4.98901 10.2504 4.98901 7.75589 
7.20412 9.69164 4.989 3.3226 4.43024 3.88152 4.43024 4.989 8.03528 4.43024 10.2504 4.43024 
4.98898 4.43024 2.7739 4.98898 3.88153 2.7739 9.14291 4.98898 8.58401 2.77386 4.98901 9.69162 
3.88153 2.77386 3.3226 4.43024 3.88153 3.8815 0 ]xsh
36.5993 517.733 mo
(modulatedgrowthofisotropicpseudo-elasticsofttissuesby)
[7.76288 4.989 4.989 4.989 2.77388 4.43023 2.77389 4.43023 8.30869 4.989 3.3226 4.989 
7.20412 2.77388 8.30869 4.989 6.64227 2.77388 3.88152 4.989 2.7739 3.3226 4.989 4.989 
2.77388 7.74991 4.989 3.88153 4.43022 4.98901 4.989 4.989 3.3226 4.43022 2.7739 4.43022 
3.88153 2.77388 2.77388 7.74992 3.88152 4.989 3.3226 6.09357 2.77388 2.7739 3.88152 3.88152 
4.98898 4.43024 7.2012 4.98901 0 ]xsh
36.5993 529.706 mo
(usingthisdecomposition.Therate-typebiomechanictheory)
[4.989 3.88152 2.77388 4.989 8.47232 2.77388 4.989 2.77389 7.36484 4.989 4.43024 4.43023 
4.989 7.76289 4.989 4.989 3.88152 2.77388 2.7739 2.77388 4.989 4.989 5.79921 6.09648 
4.989 7.91356 3.3226 4.43024 2.77388 4.43024 3.3226 2.77388 4.989 4.989 7.91356 4.989 
2.77388 4.989 7.76288 4.43024 4.43024 4.989 4.43024 4.989 2.77388 7.91354 2.7739 4.98898 
4.43024 4.98901 3.3226 0 ]xsh
36.5993 541.68 mo
(isconstructed,basedonadditivedecompositionoftherateof)
[2.77388 6.43289 4.43023 4.989 4.989 3.88152 2.77389 3.32259 4.989 4.43024 2.77388 4.43024 
4.989 5.04588 4.989 4.43024 3.88152 4.43024 7.54037 4.989 7.54037 4.43024 4.989 4.989 
2.77388 2.77388 2.77388 4.989 6.98163 4.989 4.43022 4.43024 4.989 7.76289 4.98898 4.989 
3.88152 2.77388 2.7739 2.77388 4.989 7.54036 4.989 5.87398 2.77388 4.989 6.9816 3.3226 
4.43024 2.77386 6.9816 4.98901 0 ]xsh
36.5993 553.654 mo
(deformationintoitselasticandgrowthparts,andanappeal-)
[4.989 4.43024 3.3226 4.989 3.3226 7.76289 4.43024 2.77388 2.77388 4.989 8.15501 2.77389 
4.989 2.77389 8.15501 2.77388 2.77388 7.04755 4.43022 2.7739 4.43022 3.88153 2.77388 2.77388 
7.59625 4.43024 4.989 8.15501 4.989 3.3226 4.989 7.20412 2.7739 8.15501 4.989 4.43024 
3.3226 2.77388 3.88152 5.66052 4.43024 4.989 8.15503 4.43024 8.15503 4.43022 4.98901 4.98898 
4.43024 4.43024 2.7739 0 ]xsh
36.5993 565.627 mo
(ingstructureoftheevolutionequationforthegrowth-)
[2.77388 4.989 11.2163 3.88152 2.77388 3.3226 4.98901 4.43023 2.77388 4.98901 3.32259 10.6575 
4.98901 9.54987 2.77388 4.989 10.6575 4.43024 4.989 4.989 2.77388 4.989 2.77388 2.7739 
4.989 11.2163 4.43024 4.989 4.989 4.43024 2.77388 2.77388 4.98901 11.2163 3.3226 4.989 
9.54987 2.77388 4.989 10.6575 4.989 3.3226 4.98898 7.20413 2.77386 4.98901 0 ]xsh
36.5993 577.601 mo
(inducedstretchratio.Theconcludingremarksonthemulti-)
[2.77388 4.989 4.989 4.989 4.43023 4.43024 8.50424 3.88152 2.77388 3.32259 4.43024 2.77388 
4.43024 8.50426 3.3226 4.43022 2.7739 2.77388 4.989 5.83115 6.09648 4.989 7.94548 4.43024 
4.989 4.989 4.43024 2.77388 4.989 4.989 2.77388 4.989 8.50426 3.3226 4.43022 7.76289 
4.43024 3.32259 4.98901 7.39676 4.98901 8.50424 2.7739 4.989 7.94547 7.76291 4.98898 2.7739 
2.77386 2.7739 0 ]xsh
36.5993 589.574 mo
(plicativedecompositionofdeformationgradientanditsrole)
[4.989 2.77388 2.77388 4.43023 4.43024 2.77388 2.77388 4.98899 7.74693 4.989 4.43024 4.43023 
4.989 7.76289 4.989 4.989 3.88152 2.77388 2.77388 2.77388 4.989 8.30569 4.989 6.6393 
4.989 4.43022 3.3226 4.98901 3.3226 7.76288 4.43024 2.77388 2.77388 4.989 8.30568 4.989 
3.3226 4.43024 4.989 2.77388 4.43024 4.989 6.09056 4.43024 4.989 8.30568 2.77388 2.7739 
7.19818 3.3226 4.98901 2.77386 0 ]xsh
36.5993 601.548 mo
(innonlinearcontinuummechanicsaregiveninSection5.)
[2.77388 8.31068 4.989 4.989 4.989 2.77388 2.77388 4.989 4.43024 4.43024 6.64527 4.43024 
4.989 4.98901 2.77388 2.77388 4.989 4.989 4.989 11.0846 7.76288 4.43024 4.43024 4.989 
4.43024 4.989 2.77388 4.43024 7.2032 4.43022 3.3226 7.75291 4.989 2.77388 4.989 4.43024 
8.31168 2.77388 8.31168 5.54776 4.43024 4.43024 2.77388 2.77388 4.98898 8.31067 4.98901 0 
]xsh
true set_gvm
%ADOBeginSubsetFont: FNEAAA+Times-Bold Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /FNEAAA+Times-Bold def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All Rights Reserved.Times is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Bold) def
/ItalicAngle 0 def
/BaseFontName (Times-Bold) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 50 /two put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 89 /Y put
dup 109 /m put
dup 110 /n put
dup 199 /dotaccent put
def
/FontBBox {-168 -218 1000 935} def
end
systemdict begin
dup /Private
13 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 676 691 461 473] def
/OtherBlues [268 275 -206 -203] def
/FamilyBlues [-14 -0 450 460 662 676] def
/FamilyOtherBlues [-218 -217 262 270 394 394] def
/BlueScale 0.0437917 def
/StdVW [139] def
/ForceBold true def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
18 dict dup begin
/two <1C60D8A8C9B7A73DC524371C3B3C004F1EF6620B304256306A6A0A5762
AA367899428B22F6ADE68CCEC2617F59BF043E4548840711CC53517BD14FA803
630325F009B30B4A682500C565CA868D7DDB8125D7D9977D8201205236C2E89C
14D5F5C6C3F38345C8> |-
/A <1C60D8A8C9B6079F1E726295E14B9D3F70CD5E0B99FB5C54189240A279B5
8B7B919A72788E79254835EEB6479A6759338847EC952AA1E22C8ADF4C1F9F19
082442820F5919D1A62E8EA10491F24180442849C5A953C3F1A51FFC70622AE7
7990B1AF30131DC78F155E8B9BB9DB5DFF67> |-
/C <1C60D8A8C9B6079FED7B811C9CB98FDD2CBB73B75B81400446779C1C292B
57E4F38E889FF7DAA4021ADF960236F2D2B95CAC0CC87161AEA0313D48BD8794
18C174C71B8E91186A8512D49BC05F2B41E15EBF686BAC4F3CC821D2E1F5D5E6
6103A08A00F7850F41D613A30A79C535BD9C41E4F9> |-
/E <1C60D8A8C9B64EDF881B97E2E5D84D264D6FA01EE653ED7374EAF044D90D
37BE338DF407FB75C867794D4250D63DD220700516034551C05226939AD33EAB
118BE54C951D70812429005575ECFF05541440BECE916398DB5BA7CCC10B886E
BE237CFF27E89773D8F53D685F0DD9A9D4FDE9844BDB0B654A2D862A3C5D70E0
2B926992800D51D9642E12EFA31D87D569B5E07B0A18F53783795CFB> |-
/F <1C60D8A8C9B7D8BE6A7B5A60358C2DC2D79B6881B9E8729C635D034953D9
AE32C33BC20E465CDDA43CDD5B6BB11E71F9212EE89209E9AB22209D5B6268B8
35F894FBB0C3D92F4F794C3C2774531B0AE94F1E7A660A47AEC3D57CE0C2C73E
D2217BC2A9C5E28B9F336865F77910279857836A4C72E712012A681B487DB5E8
4596D50C51D5B358B68F92096E875ABB32> |-
/H <1C60D8A8C9B6FF86897C29919E38C6A18551382CF78CE4A010663E2999C7
43ADB761C8CADE7A18136FDBC415C678F6F975920C613F8B525E14AFDCF9F298
763D811536A386FB66AA7F90ADE26E76B9968335C44ADCFC247D6192B412CC18
280DA85F96DD68AAFC728584EADC71B7C50DEF0C89E3F104D6CF61B3A9E58684
CA55BB4BEFDAE20E0D736BEB5047> |-
/I <1C60D8A8C9B7361F7E0A3182AF0840CF1C57BBC49E9A8C6B0AA7B6E46758
7CBB397231CD7BC1746C8C5839DD306946786BBAF8E2E1FB3B41CA7009BD13B8
07FD9CB9BFA9E93CCC74> |-
/L <1C60D8A8C9B64EDF8815C1AD7B5B26AB26BCBC091C6DF6670E573A3698A4
87FA937A76353FC8A27E3EC6331795AB1229A5461F60BB5E5612255C1FB1246C
71D14F65C2F7FA78B27A3178021FAADA0B0D5CF511ECD1587461B88F5173C1FF
2AE3AD6C2F10522891F194F1CB> |-
/M <1C60D8A8C9B5D6EF3EDF823525D67884CFE5E6E2D79F52892B22C59192C6
7F5DEF9E1F59692734C5E28E690694B86BA043552E81597F5C327F556A87519C
201F1435046B041B408282F8CD2F7FADC86A16BFFB3122049E16FCA02A50E3ED
385B618F10E51BF8613B3CAB6E1C4029324276609CF836991DAEBC23DD803866
8A2EC8CA28> |-
/O <1C60D8A8C9B6FF867A6C34F63CFBA483F20348D2DAD0C454E283655C995D
5D5CF5D377DE69CD8137822B1BF27586C2738DBEFFB5BB1B1A732FF2D1463935
01E2A62338C9B42B1491A6EFD4FCFADFB4D3F538B177BA9C6FD9E278A31D958B
A09D74E78DDC> |-
/R <1C60D8A8C9B6079F1E72629575480DC45EFF6E4AB64B66A7652CD7E16EAC
91449245DD3CBA37D2A604CF72E29588675CFDFE01E4A88B3F48C83BCCA7256E
85D1ED04A24E78F3B0E49702EE55B1A71A005E9BFB7D60AD519F80EDCD2ADF5C
0C427374C26DC43CA4BD3A71528CB3166942BEAEF2FD3B0D1F3387D886927B8E
A602B7357C09308F1DBC79BF3317FED3F200041EAB4FF32714D1A7764237CCB5
F518A1E2> |-
/S <1C60D8A8C9B7EF32A40B3F7CFC1EB7E9ED1A9879448E6DF4EAA6E621EE51
7E47285391CFFAB191F3C3BA03401452E59BC25F9E3497798374417C4A14EF12
2C2CAA1114DA8FC0A0D1D558EC4482CC1438E830AB88C11785887BF6F10CA423
D0D695D2834E800725F16D76030FA546B077643DB9B71AF606A8C0D63F39360E
8C11419A3BB5960B3110224661DA080E88EA9BA00998137D89CD24E8CA496A72
DD45E1DBE8DB88BC7D540073C6F33375EFC2786BF4863C1BB8F76B0A79DB18F5
C17A743C7DD53BBCA6A3AA> |-
/T <1C60D8A8C9B64EDF881B97EC50FCD54D95614FAE97315393E038408DEB0F
C34B6632349ABCF295707D380009BD30C7C11FAEB3B0C7AEC827287BACA47306
BA963CDF5360E7104135707DE18EBEBCCE79213152E5DEAA2822B4> |-
/Y <1C60D8A8C9B6079F1E72629B90E3BF53CB958F24A30EE6A0747471E7B35D
0A62BDAA2128C219D439B858CBF59E0C8010B67A3CB1876D4114C18253E54CCC
3BD4130E73F23C39F89C1B537F5DC98039E731F9F1FD781B38DCF5E335B35A56
293CF9CF41A0A126E010DDE3B4B52B91D825512CA3515398197FBEB57D45E927> |-
/m <1C60D8A8C9B6B41C9EF86D4D6709D4B4B598121ABB5312D265CF235A8DF8
71F947DD83CAEC145FFBDAC2ACD58A94C733AE766077D3CED781B2D343AD55DF
DDB8D67A9086862F8EFE2574B6FFA6EC83AC9C357A9D9807A1FF78CD8BA52757
00FCF3D844938953EC2A50B770F36645E5AA8DCB80EFD2F2006585B2B8C533C2
8E0BEBAD08309F295A06E90F2028AA4FD3445A8F950F8DBF4741CC99024C4E65
71BC4D2D7EABC29C569C3F3026BD485268134B6B652756116C0C33210E033B3C
FE7A43ABCA048A4EB46257DA833BC574EA942EFC1A2B38284B3EF3E16B1D1744
19935953EC4A9FB849488346E0B030999551E986> |-
/n <1C60D8A8C9B7EF3257330F56C94494157A7EF7FFCBD73F84D262F8E7D019
59AC25EC004852A9D2EE4AC35B0916692F432F5CC4BA24475C1585C14E0905AC
F072D8A88A9283F858EDF4B1C6BED04E509F9B3592B943768FA40BBE472F197C
351FA9B31E247A2F6126072E89ED92526AAFBE6B29CBD01535D22319B495F8DE
9EC03DE5FC3D1D349F08180CDD8EC5F746CB90B201AAB7B408BF78D5D20442C8
7E190839C6924F5E937788F15A694C0C87> |-
/dotaccent <1C60D8A8C9B81F2C351E4CC6669D589F8C9D980825A8034DACB5
200CD024A6B8C46A30D5BCF2BBBE681F9F> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYB+Times-Bold /FNEAAA+Times-Bold findfont ct_VMDictPut
/ZUSWYB+Times-Bold*1 
[50{/.notdef}rp /two 14{/.notdef}rp /A /.notdef /C /.notdef /E 
/F /.notdef /H /I 2{/.notdef}rp /L /M /.notdef 
/O 2{/.notdef}rp /R /S /T 4{/.notdef}rp /Y 19{/.notdef}rp 
/m /n 88{/.notdef}rp /dotaccent 56{/.notdef}rp]
ZUSWYB+Times-Bold nf
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
36.5993 642.455 mo
(2THERMOELASTICITY)
[14.967 6.6554 7.76288 6.6554 7.20412 9.41924 7.76288 6.6554 6.65541 7.20412 5.54776 6.6554 
3.88153 7.20412 3.88152 6.6554 0 ]xsh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
36.5993 657.422 mo
(Intheconstitutivetheoryofthermoelasticmaterialresponse)
[3.3226 8.30868 2.77388 4.989 7.74992 4.43024 4.989 4.989 3.88152 2.77388 2.77389 2.77389 
4.989 2.77388 2.77388 4.989 7.74992 2.77388 4.989 4.43024 4.989 3.3226 8.30867 4.98901 
6.64227 2.77388 4.989 4.43024 3.3226 7.76288 4.989 4.43024 2.77388 4.43024 3.88152 2.7739 
2.77388 7.74992 7.76288 4.43024 2.77388 4.43024 3.3226 2.77388 4.43024 6.09357 3.3226 4.43024 
3.88152 4.98898 4.98901 4.98898 3.88153 0 ]xsh
36.5993 669.395 mo
(theintermediatecon)
[2.77388 4.989 7.02352 2.77388 4.989 2.77388 4.43023 3.3226 7.76289 4.43023 4.989 2.77389 
4.43024 2.77388 7.02351 4.43024 4.989 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
118.267 669.395 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
123.815 669.395 mo
(guration)
[4.989 4.989 3.3226 4.43024 2.77388 2.77388 4.989 0 ]xsh
true set_gvm
%ADOBeginSubsetFont: RMABAA+CMSY10 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RMABAA+CMSY10 def
/FontInfo 8 dict dup begin
/Notice (Computer Modern fonts were designed by Donald E. Knuth) def
/Weight (Medium) def
/ItalicAngle -14.035 def
/BaseFontName (CMSY10) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 66 /B put
def
/FontBBox {-29 -960 1116 775} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-22 -0 683 705] def
/OtherBlues [-124 -119] def
/BlueScale 0.04379 def
/StdHW [40] def
/StdVW [85] def
/StemSnapH [40 55] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/B <1C60D8A8C9B644CF6185C611C12303BBC6BC1A40DE9A54AD3260DF7445A0
C3658C74921950AEE7FE98E2BAE4C9606CAD534FF4CB598D20C9C6DD2892A652
DB24794C6C3A1ED31B7CB70D8CECA99470FD76C3154BD949509F0ED2A934D970
780A56FB7A9086D804F2746424036FC161C5A27644189B32E6079FF9CEC77291
6D64D18796C71D526B392461CD8058167377B590751D0A105E4C8C96B1575E86
6DF0B02F8359B8C86F8C3EA6B99749F33D69EEE11393F5CC76D7F07D3F88E8E9
D77210BE817ACFF78A9CBFB20C50644A4F65C064944EB2CBFE7C53A11DFEF908> |-
/.notdef <1C60D8A8C9B81F2CC3> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYC+CMSY10 /RMABAA+CMSY10 findfont ct_VMDictPut
/ZUSWYC+CMSY10*1 
[66{/.notdef}rp /B 189{/.notdef}rp]
ZUSWYC+CMSY10 nf
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
159.665 669.395 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
166.214 671.477 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
172.859 669.393 mo
(isintroducedbyisothermal)
[2.77388 6.47481 2.77388 4.989 2.77388 3.3226 4.989 4.989 4.989 4.43024 4.43024 7.58229 
4.98898 7.58229 2.77388 3.88153 4.98898 2.7739 4.98898 4.43024 3.3226 7.76288 4.43024 0 
]xsh
36.595 681.367 mo
(elasticdestressingofthecurrentmaterialcon)
[4.43023 2.77388 4.43023 3.88152 2.77388 2.77388 7.76389 4.989 4.43024 3.88152 2.77388 3.3226 
4.43024 3.88152 3.88152 2.77388 4.989 8.32265 4.989 6.65625 2.77388 4.989 7.76389 4.43024 
4.989 3.3226 3.3226 4.43024 4.989 6.10753 7.76288 4.43024 2.77388 4.43024 3.3226 2.77388 
4.43024 6.10753 4.43024 4.989 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
222.3 681.367 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
227.847 681.367 mo
(guration)
[4.989 4.989 3.3226 4.43024 2.77388 2.77388 4.989 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
264.438 681.367 mo
(B)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
274.325 681.367 mo
(to)
[2.7739 0 ]xsh
36.5951 693.34 mo
(zerostress)
[4.43023 4.43024 3.3226 7.7589 3.88152 2.77388 3.3226 4.43024 3.88152 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
81.4771 693.34 mo
(~)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
84.7998 693.34 mo
(Fig.1)
[5.54777 2.77388 4.989 5.2644 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
108.363 693.34 mo
(!)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
111.686 693.34 mo
(.Iftheisothermalelasticdeformationgra-)
[5.2644 3.32259 6.09249 2.7739 4.98898 7.20013 2.77388 3.88152 4.989 2.77388 4.98901 4.43024 
3.32259 7.76289 4.43024 5.54376 4.43024 2.7739 4.43024 3.8815 2.7739 2.77388 7.20012 4.98901 
4.43024 3.3226 4.98898 3.3226 7.76288 4.43024 2.7739 2.77386 4.98901 7.7579 4.98898 3.3226 
4.43024 0 ]xsh
36.5951 705.314 mo
(dientfrom)
[4.989 2.77388 4.43024 4.989 6.28614 3.3226 3.3226 4.989 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
82.9718 705.314 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
89.5258 707.397 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
97.0886 705.314 mo
(to)
[2.77388 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
108.364 705.314 mo
(B)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
118.43 705.314 mo
(is)
[2.77388 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
128.597 705.314 mo
(F)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
134.693 707.397 mo
(e)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
139.291 705.314 mo
(,andthethermaldeformationgra-)
[6.806 4.43022 4.989 8.50127 2.77388 4.989 7.94249 2.77388 4.989 4.43024 3.3226 7.76288 
4.43024 6.28613 4.98901 4.43024 3.3226 4.98898 3.3226 7.76288 4.43024 2.7739 2.77388 4.989 
8.50125 4.98901 3.3226 4.43024 0 ]xsh
36.5943 717.287 mo
(dientfrom)
[4.989 2.77388 4.43024 4.989 6.28315 3.3226 3.3226 4.989 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
82.9661 717.287 mo
(B)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
89.5201 719.371 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
96.5217 717.287 mo
(to)
[2.77388 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
107.794 717.287 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
114.347 719.371 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
121.907 717.287 mo
(is)
[2.77388 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
132.072 717.287 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
138.168 719.371 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
143.716 717.287 mo
(,thetotaldeformationgradient)
[6.80299 2.7739 4.989 7.93948 2.7739 4.989 2.77388 4.43024 6.28314 4.989 4.43024 3.3226 
4.989 3.3226 7.76288 4.43024 2.77388 2.77388 4.98901 8.49826 4.989 3.32259 4.43024 4.98901 
2.77386 4.43024 4.98901 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
275.959 717.287 mo
(F)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
36.5939 729.261 mo
(canbedecomposedas)
[4.43023 4.43024 8.31067 4.989 7.7529 4.98901 4.43023 4.43024 4.989 7.76289 4.98901 4.989 
3.88152 4.43023 8.31168 4.43024 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
48.5675 748.077 mo
(F)sh
true set_gvm
%ADOBeginSubsetFont: NTYAAA+MathematicalPi-One Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /NTYAAA+MathematicalPi-One def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1990 Adobe Systems Incorporated.  All Rights Reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (MathematicalPi-One) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /H11001 put
dup 50 /H11002 put
dup 51 /H11003 put
dup 53 /H11005 put
def
/FontBBox {-30 -210 1000 779} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0 782 782 712 712] def
/OtherBlues [-210 -210] def
/StdHW [30] def
/StdVW [46] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
5 dict dup begin
/H11001 <1C60D8A8C9B6B41CBBB109243EF2BD8240C0141321F717C4D8C56EC
95865D7185CC4D73381C580E24E9D0233DADCB90AA2B3E9> |-
/H11002 <1C60D8A8C9B6B41CBBB10924317E5B8D860CD0178176E8574188B30
7FD44CE> |-
/H11003 <1C60D8A8C9B6B41CEBDDFC030A160CC332EA90A1FD6D65BF5F44FD2
71D4B61DB2DE50BEBC7259350A40741C63C076A072CC30D5C5DAFA7C2C2A4D0F
B803B4DC7C06490EDF191E9> |-
/H11005 <1C60D8A8C9B6B41CBB160DE0FE30019A563D33685704504839F084F
CE8710617F6F55CF333D825CB3BA8673A8274934B> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYD+MathematicalPi-One /NTYAAA+MathematicalPi-One findfont ct_VMDictPut
/ZUSWYD+MathematicalPi-One*1 
[49{/.notdef}rp /H11001 /H11002 /H11003 /.notdef /H11005 202{/.notdef}rp]
ZUSWYD+MathematicalPi-One nf
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
54.664 748.077 mo
(5)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
63.7749 748.077 mo
(F)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
69.8727 750.161 mo
(e)sh
true set_gvm
%ADOBeginSubsetFont: RNABAA+Aip1 Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2013 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /RNABAA+Aip1 def
/FontInfo 8 dict dup begin
/Notice (Generated by Fontographer 3.5) def
/Weight (Normal) def
/ItalicAngle 0 def
/BaseFontName (Aip1) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 149 /bullet put
def
/FontBBox {-31 -526 1905 1578} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-10 -0 400 405 800 810 813 814] def
/BlueScale 0.0454545 def
/StdHW [50] def
/StdVW [50] def
/StemSnapH [50] def
/StemSnapV [50] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/bullet <1C60D8A8C9B7015BA9A1398BA5856C811FF8D335A4EDEC18DDA46BB
AE420CF817692D79A76AA397C729B8EDBD5> |-
/.notdef <1C60D8A8C9B8524C50> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYE+Aip1 /RNABAA+Aip1 findfont ct_VMDictPut
/ZUSWYE+Aip1*1 
[149{/.notdef}rp /bullet 106{/.notdef}rp]
ZUSWYE+Aip1 nf
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
72.9738 748.077 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
77.864 748.077 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
83.9606 750.161 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
262.937 748.077 mo
(\(2.1\))
[3.3226 4.98901 2.49448 4.98901 0 ]xsh
294.027 62.7333 mo
(Thisdecompositionwasintroducedin)
[6.0965 4.98898 2.7739 10.2794 4.98901 4.43024 4.43024 4.98898 7.76288 4.98901 4.98901 3.8815 
2.7739 2.77386 2.7739 4.98898 11.3869 7.20413 4.43021 10.2794 2.7739 4.98898 2.7739 3.3226 
4.98901 4.98898 4.98898 4.43024 4.43024 11.3869 2.7739 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
468.471 62.7333 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
474.019 62.7333 mo
(nite-strainther-)
[4.98901 2.77386 2.7739 4.43024 3.3226 3.8815 2.7739 3.3226 4.43024 2.77386 11.3869 2.77393 
4.98901 4.43018 3.12408 0 ]xsh
294.027 74.7068 mo
(moelasticitybyStojanovic)
[7.76288 4.98901 4.43024 2.77386 4.43024 3.88153 2.77386 2.7739 4.43024 2.77386 2.7739 7.77786 
4.98898 7.77786 5.54776 2.7739 4.98898 2.7739 4.43024 4.98898 4.98901 4.98898 2.7739 0 
]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
397.176 73.5983 mo
(\302)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
403.841 74.7068 mo
(andhisassociates)
[4.43024 4.98898 7.77786 4.98901 2.77386 6.67038 4.43024 3.8815 3.88153 4.98898 4.43024 2.7739 
4.43024 2.77386 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
478.163 74.7068 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
481.485 74.7068 mo
(4,16)
[4.98901 2.49448 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
498.947 74.7068 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
502.27 74.7068 mo
(,andfur-)
[5.28336 4.43024 4.98901 7.77783 3.32257 4.98901 3.12402 0 ]xsh
294.027 86.6804 mo
(theremployedbyStojanovic)
[2.7739 4.98898 4.43024 7.19507 4.43024 7.76288 4.98901 2.77386 4.98901 4.98898 4.43024 8.86148 
4.98898 8.86148 5.54776 2.77386 4.98901 2.7739 4.43024 4.98898 4.98898 4.98901 2.7739 0 
]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
409.301 85.5718 mo
(\302)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
417.048 86.6804 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
420.371 86.6804 mo
(54)
[4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
430.349 86.6804 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
433.672 86.6804 mo
(,Mic)
[6.36697 8.87051 2.77386 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
452.238 85.5718 mo
(\302)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
456.113 86.6804 mo
(unovic)
[4.98901 4.98898 4.98901 4.98898 2.7739 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
479.398 85.5718 mo
(\302)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
487.146 86.6804 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
490.469 86.6804 mo
(55)
[4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
500.447 86.6804 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
503.769 86.6804 mo
(,andLu)
[6.36697 4.43024 4.98901 8.86145 6.09644 0 ]xsh
294.028 98.654 mo
(andPister)
[4.43024 4.98898 10.2444 5.54779 2.77386 3.88153 2.77386 4.43024 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
341.677 98.654 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
344.999 98.654 mo
(56)
[4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
354.977 98.654 mo
(#)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
358.3 98.654 mo
(.Fortheinhomogeneousdeformationand)
[7.74991 5.54776 4.98901 8.578 2.7739 4.98898 9.68567 2.77386 4.98901 4.98898 4.98901 7.76288 
4.98898 4.98901 4.43024 4.98901 4.43024 4.98898 4.98898 9.13696 4.98898 4.43024 3.3226 4.98901 
3.32257 7.76288 4.43024 2.7739 2.7739 4.98901 10.2444 4.43024 4.98895 0 ]xsh
294.028 110.628 mo
(temperature)
[2.7739 4.43021 7.76291 4.98898 4.43024 3.3226 4.43024 2.7739 4.98898 3.3226 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
344.344 110.628 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
349.891 110.628 mo
(elds,only)
[4.43024 2.77386 4.98901 3.88153 5.15662 4.98901 4.98898 2.7739 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
391.525 110.628 mo
(F)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
400.283 110.628 mo
(isatruedeformationgradient.The)
[2.7739 6.54364 7.09235 2.7739 3.3226 4.98898 7.09238 4.98901 4.43021 3.32263 4.98898 3.3226 
7.76288 4.43024 2.77386 2.7739 4.98901 7.65112 4.98898 3.32263 4.43021 4.98901 2.7739 4.43024 
4.98895 2.77393 4.97803 6.09644 4.98901 0 ]xsh
294.028 122.601 mo
(mappingsfrom)
[7.76288 4.43024 4.98901 4.98898 2.7739 4.98898 4.98901 8.26984 3.3226 3.3226 4.98901 0 
]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
361.005 122.601 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
367.557 124.688 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
375.996 122.604 mo
(to)
[2.7739 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
388.147 122.604 mo
(B)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
399.089 122.604 mo
(andfrom)
[4.43024 4.98898 9.37735 3.3226 3.32257 4.98901 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
441.67 122.604 mo
(B)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
448.223 124.688 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
456.103 122.604 mo
(to)
[2.7739 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
468.254 122.604 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
474.807 124.688 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
480.355 122.604 mo
(,ontheother)
[7.68207 4.98898 9.37735 2.77386 4.98901 8.81857 4.98895 2.77393 4.98895 4.43024 0 ]xsh
294.026 134.578 mo
(hand,aregenerallynotcontinuousone-to-onemappings,so)
[4.98901 4.43021 4.98901 4.98901 5.96982 4.43024 3.3226 7.90558 4.98898 4.43024 4.98901 4.43024 
3.3226 4.43024 2.77386 2.7739 8.46432 4.98901 4.98898 6.24924 4.43024 4.98898 4.98901 2.77386 
2.7739 4.98901 4.98898 4.98898 4.98901 7.35687 4.98898 4.98898 4.43024 3.32263 2.77386 4.98901 
3.3226 4.98898 4.98901 7.90558 7.76288 4.43024 4.98901 4.98898 2.7739 4.98901 4.98895 3.88153 
5.96985 3.88153 0 ]xsh
294.026 146.551 mo
(that)
[2.7739 4.98898 4.43024 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
312.04 146.551 mo
(F)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
318.137 148.635 mo
(e)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
324.844 146.551 mo
(and)
[4.43024 4.98898 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
342.299 146.551 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
348.396 148.635 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
355.493 146.551 mo
(arede)
[4.43024 3.3226 7.47751 4.98901 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
380.143 146.551 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
385.691 146.551 mo
(nedasthepointfunctionsorthelocal)
[4.98901 4.43021 8.03629 4.43024 6.9288 2.7739 4.98898 7.47751 4.98901 4.98901 2.77386 4.98901 
5.82117 3.32257 4.98901 4.98901 4.43024 2.77386 2.77386 4.98901 4.98901 6.92877 4.98901 6.36987 
2.7739 4.98898 7.47754 2.77386 4.98901 4.43024 4.43024 0 ]xsh
294.026 158.525 mo
(deformationgradients.Thedecomposition)
[4.98901 4.43021 3.3226 4.98901 3.3226 7.76288 4.43024 2.77386 2.7739 4.98901 7.54037 4.98898 
3.3226 4.43024 4.98901 2.77386 4.43024 4.98901 2.77386 3.88153 4.86725 6.0965 4.98901 6.9816 
4.98898 4.43024 4.43024 4.98901 7.76288 4.98901 4.98898 3.8815 2.7739 2.7739 2.77386 4.98901 
0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
466.173 158.525 mo
(~)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
469.496 158.525 mo
(2.1)
[4.98901 2.49448 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
481.969 158.525 mo
(!)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
487.843 158.525 mo
(isnotunique)
[2.7739 6.43289 4.98898 4.98901 5.32526 4.98901 4.98895 2.77393 4.98901 4.98895 0 ]xsh
294.026 170.498 mo
(becauseanarbitraryrigid-bodyrotationcanbesuperposedto)
[4.98901 4.43021 4.43024 4.43024 4.98901 3.8815 7.05844 4.43024 7.61621 4.43024 3.3226 4.98898 
2.7739 2.7739 3.3226 4.43021 3.32263 7.61621 3.32257 2.7739 4.98898 2.7739 4.98898 3.32263 
4.98898 4.98901 4.98898 7.61621 3.3226 4.98898 2.7739 4.43024 2.7739 2.77386 4.98901 7.61621 
4.43024 4.43024 7.61621 4.98898 7.05746 3.8815 4.98898 4.98901 4.43024 3.3226 4.98898 4.98901 
3.88153 4.43024 7.61621 2.77386 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
294.026 182.472 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
300.58 184.555 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
307.539 182.472 mo
(preservingitunstressed.However,thegradient)
[4.98901 3.32257 4.43024 3.88153 4.43024 3.3226 4.98898 2.7739 4.98898 7.89761 2.77386 5.68246 
4.98901 4.98901 3.8815 2.7739 3.3226 4.43021 3.88153 3.88153 4.43024 4.98898 5.40311 7.2041 
4.98901 7.2041 4.43024 4.98901 4.43024 2.92548 5.40308 2.77386 4.98901 7.33881 4.98901 3.32263 
4.43024 4.98898 2.7739 4.43024 4.98898 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
500.274 182.472 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
506.369 184.555 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
513.328 182.472 mo
(canbe)
[4.43024 4.43024 7.89758 4.98901 0 ]xsh
294.026 194.445 mo
(speci)
[3.88153 4.98898 4.43024 4.43024 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
314.531 194.445 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
320.078 194.445 mo
(eduniquelyineachconsideredcase,dependingonthe)
[4.43024 7.78983 4.98898 4.98901 2.7739 4.98898 4.98901 4.43024 2.77386 7.78983 2.77386 7.78983 
4.43024 4.43024 4.43024 7.78983 4.43024 4.98901 4.98898 3.8815 2.7739 4.98901 4.43024 3.3226 
4.43024 7.78979 4.43024 4.43024 3.88153 4.43024 5.29532 4.98898 4.43024 4.98901 4.43024 4.98901 
4.98898 2.7739 4.98898 7.78983 4.98901 7.78986 2.77386 4.98895 0 ]xsh
294.026 206.419 mo
(typeofmaterialanisotropy.Forexample,foranorthotropic)
[2.7739 4.98898 4.98901 7.89957 4.98901 6.79193 7.76291 4.43024 2.77386 4.43024 3.3226 2.7739 
4.43021 6.24326 4.43024 4.98898 2.7739 3.8815 4.98901 2.77386 3.32263 4.98898 4.98898 4.34244 
5.96384 5.54779 4.98898 6.79196 4.43024 4.98901 4.43024 7.76288 4.98898 2.7739 4.43024 5.96384 
3.3226 4.98901 6.79193 4.43024 8.45837 4.98898 3.3226 2.77386 4.98901 4.98901 2.77386 3.32257 
4.98901 4.98901 2.77393 0 ]xsh
294.026 218.393 mo
(materialwiththeprincipalaxesoforthotropyparalleltounit)
[7.76288 4.43024 2.7739 4.43024 3.32257 2.7739 4.43024 5.66251 7.20413 2.77386 2.7739 7.87762 
2.7739 4.98898 7.31888 4.98901 3.3226 2.77386 4.98901 4.43024 2.77386 4.98901 4.43024 5.66251 
4.43024 4.98898 4.43024 6.77014 4.98901 6.21124 4.98901 3.32257 2.7739 4.98898 4.98901 2.77386 
3.32263 4.98898 4.98898 7.87762 4.98901 4.43024 3.3226 4.43024 2.7739 2.77386 4.43024 5.66248 
2.77393 7.87762 4.98895 4.98901 2.77393 0 ]xsh
294.026 230.366 mo
(vectors)
[4.98901 4.43021 4.43024 2.7739 4.98898 3.3226 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
327.805 230.366 mo
(m)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
336.118 226.398 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
339.61 230.366 mo
(,)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
347.868 230.366 mo
(n)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
353.415 226.398 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
356.907 230.366 mo
(,and)
[8.25778 4.43024 4.98901 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
384.536 230.366 mo
(m)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
392.848 226.398 mo
(o)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
396.34 230.366 mo
(3)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
405.451 230.366 mo
(n)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
410.998 226.398 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
419.454 230.366 mo
(inthecon)
[2.7739 9.95206 2.77386 4.98901 9.39328 4.43024 4.98901 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
463.746 230.366 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
469.293 230.366 mo
(guration)
[4.98901 4.98898 3.3226 4.43024 2.7739 2.77386 4.98901 0 ]xsh
ZUSWYC+CMSY10*1 [9.978 0 0 -9.978 0 0 ]msf
507.513 230.366 mo
(B)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
514.066 232.45 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
519.055 230.366 mo
(,the)
[8.25781 2.77386 4.98901 0 ]xsh
294.025 242.34 mo
(gradient)
[4.98901 3.32257 4.43024 4.98901 2.7739 4.43021 4.98901 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
330.045 242.34 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
336.143 244.423 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
343.516 242.34 mo
(isspeci)
[2.7739 7.20419 3.8815 4.98901 4.43024 4.43021 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
373.997 242.34 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
379.545 242.34 mo
(edby)
[4.43024 8.31168 4.98898 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
405.587 242.34 mo
(@)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
408.909 242.34 mo
(57)
[4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
418.887 242.34 mo
(#)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
305.999 259.966 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
312.096 262.049 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
316.147 259.965 mo
(5)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 1.8822 -9.978 0 0 ]msf
325.258 259.965 mo
(q)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
334.507 259.965 mo
(I)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
338.388 259.965 mo
(1)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
347.383 260.158 mo
(~)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
351.622 259.965 mo
(b)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
358.518 259.965 mo
(2)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 1.8822 -9.978 0 0 ]msf
367.629 259.965 mo
(q)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
375.316 260.062 mo
(!)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
379.207 259.965 mo
(m)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
387.519 255.997 mo
(o)sh
true set_gvm
%ADOBeginSubsetFont: TBFBAA+MathematicalPi-Six Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /TBFBAA+MathematicalPi-Six def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1990 Adobe Systems Incorporated.  All Rights Reserved.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (MathematicalPi-Six) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 94 /H20002 put
def
/FontBBox {0 -188 990 742} def
end
systemdict begin
dup /Private
10 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-18 -0 713 731] def
/OtherBlues [-188 -188] def
/StdHW [42] def
/StdVW [42] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
2 dict dup begin
/H20002 <1C60D8A8C9B6B41C2BE7617FCB3EEF21D17ED9AD10DE219ABEF3095
A24696D352FE4F5A4965DAE0FB7D1CA7EBC12764179AB6A073E901E5D79EBB98
C01E8727684F93F4672E9D1705993152A490D517B557F77E9C85FA80D39A7DC7
4ADC56E38F3E922E97125E0EBFBC176BAAA7AC325A5F4B3C8E0C67682742431F
72D64D311AB29B5BCCEF5A3E3F0A272801AC18D2B72A6D167CD8F38A2CCDB712
B1DBB74D28DE18506> |-
/.notdef <1C60D8A8C9B8707C25> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYF+MathematicalPi-Six /TBFBAA+MathematicalPi-Six findfont ct_VMDictPut
/ZUSWYF+MathematicalPi-Six*1 
[94{/.notdef}rp /H20002 161{/.notdef}rp]
ZUSWYF+MathematicalPi-Six nf
ZUSWYF+MathematicalPi-Six*1 [7.9824 0 0 -7.9824 0 0 ]msf
391.649 259.965 mo
(^)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
399.735 259.965 mo
(m)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
408.047 255.997 mo
(o)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
411.539 259.965 mo
(1)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
420.534 260.158 mo
(~)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
424.773 259.965 mo
(g)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
431.12 259.965 mo
(2)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 1.8822 -9.978 0 0 ]msf
440.231 259.965 mo
(q)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
447.918 260.062 mo
(!)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
451.809 259.965 mo
(n)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
457.357 255.997 mo
(o)sh
ZUSWYF+MathematicalPi-Six*1 [7.9824 0 0 -7.9824 0 0 ]msf
461.487 259.965 mo
(^)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
469.573 259.965 mo
(n)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
475.121 255.997 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
520.404 259.965 mo
(\(2.2\))
[3.32257 4.98901 2.49451 4.98901 0 ]xsh
294.026 277.328 mo
(Thestretchratiosduetothermalexpansionintheorthogonal)
[6.0965 4.98898 7.19415 3.8815 2.7739 3.3226 4.43024 2.77386 4.43024 7.7529 3.3226 4.43024 
2.7739 2.77386 4.98901 6.64542 4.98901 4.98898 7.19415 2.7739 7.7529 2.77386 4.98901 4.43024 
3.3226 7.76288 4.43024 5.53778 4.43024 4.98901 4.98898 4.43024 4.98898 3.88153 2.7739 4.98898 
7.75293 2.77386 7.75293 2.77386 4.98901 7.19415 4.98898 3.3226 2.77386 4.98901 4.98901 4.98901 
4.98901 4.98895 4.43024 0 ]xsh
294.026 289.302 mo
(directions)
[4.98901 2.77386 3.3226 4.43024 4.43024 2.7739 2.77386 4.98901 4.98898 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
337.664 289.302 mo
(m)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
345.977 285.333 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
353.755 289.301 mo
(and)
[4.43024 4.98898 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
372.449 289.301 mo
(n)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
377.997 285.333 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
385.775 289.301 mo
(are)
[4.43024 3.3226 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
402.244 289.301 mo
(b)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
409.14 289.301 mo
(5)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
418.251 289.301 mo
(b)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
425.147 289.301 mo
(\()sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
429.269 289.301 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
435.057 289.301 mo
(\)and)
[8.40839 4.43024 4.98901 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
462.159 289.301 mo
(g)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
468.506 289.301 mo
(5)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
477.617 289.301 mo
(g)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
483.964 289.301 mo
(\()sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
488.086 289.301 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
493.874 289.301 mo
(\),while)
[4.12183 7.58029 7.2041 4.98901 2.77386 2.77393 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 1.8822 -9.978 0 0 ]msf
532.033 289.301 mo
(q)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
294.026 301.275 mo
(5)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 1.8822 -9.978 0 0 ]msf
303.137 301.275 mo
(q)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
310.592 301.275 mo
(\()sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 2.7694 -9.978 0 0 ]msf
314.714 301.275 mo
(u)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
320.502 301.275 mo
(\)isthestretchratiointhedirection)
[9.3573 2.77386 9.11697 2.7739 4.98898 9.66571 3.8815 2.7739 3.3226 4.43024 2.77386 4.43024 
10.2245 3.3226 4.43024 2.7739 2.77386 10.2245 2.77386 10.2245 2.7739 4.98898 9.66568 4.98901 
2.77386 3.32263 4.43024 4.43024 2.77386 2.77386 4.98901 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
485.675 301.275 mo
(m)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
493.986 297.306 mo
(o)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
497.479 301.275 mo
(3)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
506.59 301.275 mo
(n)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
512.137 297.306 mo
(o)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
515.63 301.275 mo
(.The)
[8.35059 6.0965 4.98901 0 ]xsh
294.025 313.248 mo
(second-orderunittensorisdenotedby)
[3.88153 4.43021 4.43024 4.98901 4.98898 4.98901 3.3226 4.98898 3.32263 4.98898 4.43024 6.07452 
4.98901 4.98898 2.7739 5.52579 2.7739 4.43024 4.98901 3.8815 4.98901 6.07452 2.77386 6.63446 
4.98901 4.43024 4.98898 4.98898 2.7739 4.43024 7.74094 4.98901 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
450.76 313.248 mo
(I)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
454.641 313.248 mo
(.Themodi)
[5.06882 6.0965 4.98898 7.18219 7.76288 4.98898 4.98901 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
498.492 313.248 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
504.04 313.248 mo
(cationof)
[4.43024 4.43024 2.77386 2.77393 4.98895 7.74097 4.98895 0 ]xsh
294.025 325.222 mo
(therepresentation)
[2.7739 4.98898 7.23605 3.3226 4.43024 4.98898 3.3226 4.43024 3.88153 4.43024 4.98898 2.7739 
4.43024 2.77386 2.7739 4.98898 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
368.355 325.222 mo
(~)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
371.678 325.222 mo
(2.2)
[4.98901 2.49448 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [9.978 0 0 -9.978 0 0 ]msf
384.15 325.222 mo
(!)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
390.28 325.222 mo
(fortransverselyisotropicmaterialsis)
[3.3226 4.98898 6.12842 2.7739 3.3226 4.43024 4.98898 3.88153 4.98898 4.43024 3.3226 3.88153 
4.43024 2.77386 7.79581 2.7739 3.88153 4.98898 2.7739 3.3226 4.98898 4.98901 2.7739 7.23602 
7.76288 4.43024 2.7739 4.43021 3.32263 2.77386 4.43024 2.77393 6.68732 2.77386 0 ]xsh
294.025 337.195 mo
(straightforward.)
[3.88153 2.77386 3.3226 4.43024 2.7739 4.98898 4.98901 2.77386 3.3226 4.98901 3.3226 7.2041 
4.43024 3.3226 4.98901 0 ]xsh
305.999 349.169 mo
(TheelasticLagrangianstrainanditsrateare)
[6.0965 4.98898 7.7529 4.43024 2.7739 4.43024 3.8815 2.7739 2.77386 7.75293 6.09647 4.43024 
4.98901 3.3226 4.43024 4.98898 4.98901 2.7739 4.43024 8.31067 3.8815 2.7739 3.3226 4.43024 
2.77386 8.31168 4.43024 4.98901 8.31165 2.77393 2.77386 7.20419 3.3226 4.43024 2.77386 7.75293 
4.43024 3.3226 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
305.999 367.26 mo
(E)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
312.655 369.343 mo
(e)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
315.756 367.26 mo
(5)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
324.867 367.26 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
330.964 369.808 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [6.9846 0 0 -6.9846 0 0 ]msf
330.964 362.826 mo
(2)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
337.34 362.826 mo
(T)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
341.782 367.26 mo
(\225)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
346.556 367.452 mo
(~)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
350.796 367.26 mo
(E)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
357.451 367.26 mo
(2)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
366.562 367.26 mo
(E)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
373.217 369.343 mo
(u)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
377.5 367.356 mo
(!)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
381.391 367.26 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
386.281 367.26 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
392.378 369.808 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [6.9846 0 0 -6.9846 0 0 ]msf
392.378 362.826 mo
(2)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
398.754 362.826 mo
(1)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
520.389 367.26 mo
(\(2.3\))
[3.32257 4.98901 2.49451 4.98901 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
305.999 388.942 mo
(E)sh
307.665 386.748 mo
(\307)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
312.656 391.025 mo
(e)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
315.757 388.942 mo
(5)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
324.868 388.942 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
330.964 391.49 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [6.9846 0 0 -6.9846 0 0 ]msf
330.964 384.508 mo
(2)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
337.34 384.508 mo
(T)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
341.783 388.942 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
346.673 388.942 mo
(E)sh
348.339 386.748 mo
(\307)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
353.328 388.942 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
358.218 388.942 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
364.315 391.49 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [6.9846 0 0 -6.9846 0 0 ]msf
364.315 384.508 mo
(2)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
370.692 384.508 mo
(1)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
374.743 388.942 mo
(2)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
383.854 388.942 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
390.509 391.49 mo
(u)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
390.509 384.508 mo
(s)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
394.561 388.942 mo
(2)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
403.672 388.942 mo
(E)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
410.327 391.025 mo
(e)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
413.428 388.942 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
418.319 388.942 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
424.974 391.025 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
429.025 388.942 mo
(2)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
438.135 388.942 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
444.791 391.49 mo
(u)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
444.791 384.508 mo
(T)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
449.233 388.942 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
454.123 388.942 mo
(E)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
460.778 391.025 mo
(e)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
520.408 388.942 mo
(\(2.4\))
[3.32257 4.98901 2.49451 4.98901 0 ]xsh
294.025 407.067 mo
(where)
[7.20413 4.98898 4.43024 3.3226 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
321.465 407.067 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
328.122 409.15 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
332.173 407.066 mo
(5)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
341.284 407.066 mo
(F)sh
342.668 404.473 mo
(\307)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
347.38 409.15 mo
(u)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
351.431 407.066 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
356.321 407.066 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
362.418 409.615 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [6.9846 0 0 -6.9846 0 0 ]msf
362.418 402.633 mo
(2)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
368.794 402.633 mo
(1)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
375.909 407.066 mo
(isthevelocitygradientintheintermedi-)
[2.7739 6.94574 2.7739 4.98898 7.49451 4.98898 4.43024 2.7739 4.98898 4.43024 2.7739 2.77386 
8.05325 4.98898 3.3226 4.43024 4.98901 2.7739 4.43021 4.98901 5.83813 2.77386 8.05325 2.77386 
4.98901 7.49448 2.7739 4.98901 2.77386 4.43024 3.32263 7.76282 4.4303 4.98895 2.77393 0 
]xsh
294.026 419.171 mo
(atecon)
[4.43024 2.77386 8.86346 4.43024 4.98901 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
324.502 419.171 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
330.049 419.171 mo
(guration,and)
[4.98901 4.98898 3.3226 4.43024 2.7739 2.77386 4.98901 4.98898 6.92773 4.43024 4.98901 0 
]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
389.075 419.171 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
395.731 421.719 mo
(u)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
395.731 414.737 mo
(s)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
399.783 419.17 mo
(5)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
408.894 419.17 mo
(\()sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
413.016 419.17 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
419.671 421.254 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
423.722 419.17 mo
(1)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
432.832 419.17 mo
(L)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
439.488 421.719 mo
(u)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
439.488 414.737 mo
(T)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
443.93 419.17 mo
(\)/2standsforitssym-)
[4.12183 2.7739 9.42221 3.88153 2.7739 4.43024 4.98898 4.98901 8.31473 3.3226 4.98898 7.75586 
2.77386 2.7739 8.31473 3.88153 4.98901 7.76288 0 ]xsh
294.026 431.144 mo
(metricpart.Theelasticandthermalstrainsarede)
[7.76288 4.43024 2.7739 3.3226 2.77386 7.7529 4.98901 4.43024 3.3226 2.77386 5.63858 6.0965 
4.98898 7.75293 4.43024 2.77386 4.43024 3.88153 2.77386 2.77386 7.75293 4.43024 4.98901 8.31165 
2.7739 4.98898 4.43024 3.32263 7.76288 4.43024 6.09656 3.8815 2.7739 3.32257 4.43024 2.7739 
4.98898 7.20422 4.43024 3.32257 7.75293 4.98901 0 ]xsh
ZUSWXZ+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
497.484 431.144 mo
(\256)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
503.031 431.144 mo
(nedby)
[4.98901 4.43021 8.31171 4.98895 0 ]xsh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
306 457.002 mo
(E)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
312.655 459.085 mo
(e)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
315.756 457.002 mo
(5)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
324.867 448.77 mo
(1)sh
.499 lw
0 lc
0 lj
10 ml
[] 0 dsh
false sadj
324.865 453.909 mo
330.653 453.909 li
@
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
324.865 463.303 mo
(2)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
332.033 457.194 mo
(~)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
336.273 457.002 mo
(F)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
342.369 459.55 mo
(e)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
342.369 452.568 mo
(T)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
346.811 457.002 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
351.701 457.002 mo
(F)sh
ZUSWXX+Times-Roman*1 [6.9846 0 0 -6.9846 0 0 ]msf
357.798 459.085 mo
(e)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
360.899 457.002 mo
(2)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
370.01 457.002 mo
(I)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
374.124 457.098 mo
(!)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
378.014 457.002 mo
(,)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
392.885 457.002 mo
(E)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
399.54 459.085 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
403.591 457.002 mo
(5)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
412.702 448.77 mo
(1)sh
412.688 453.909 mo
418.476 453.909 li
@
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
412.688 463.303 mo
(2)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
419.856 457.194 mo
(~)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
424.096 457.002 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
430.192 459.55 mo
(u)sh
ZUSWYA+Times-Italic*1 [6.9846 0 0 -6.9846 0 0 ]msf
430.192 452.568 mo
(T)sh
ZUSWYE+Aip1*1 [9.978 0 0 -9.978 0 0 ]msf
434.634 457.002 mo
(\225)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
439.524 457.002 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.9846 0 1.9389 -6.9846 0 0 ]msf
445.621 459.085 mo
(u)sh
ZUSWYD+MathematicalPi-One*1 [9.978 0 0 -9.978 0 0 ]msf
449.671 457.002 mo
(2)sh
ZUSWYB+Times-Bold*1 [9.978 0 0 -9.978 0 0 ]msf
458.782 457.002 mo
(I)sh
ZUSWXY+Universal-GreekwithMathPi*1 [9.7767 0 0 -9.7767 0 0 ]msf
462.896 457.098 mo
(!)sh
ZUSWXX+Times-Roman*1 [9.978 0 0 -9.978 0 0 ]msf
520.379 457.002 mo
(\(2.5\))
[3.32257 4.98901 2.49451 4.98901 0 ]xsh
310.107 689.148 mo
523.407 689.148 li
523.407 489.168 li
310.107 489.168 li
cp
false sop
/0 
<<
/Name (Black)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0 0 0 1 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
gsave
clp
[1 0 0 -1 113.979 1009.99 ]ct
[213.3 0 0 199.98 196.128 320.839 ]ct
<<
/T 1
/W 3555 
/H 3333 
/M[3555 0 0 -3333 0 3333 ]
/BC 1 
/D[0 1 ]
/DS cf /ASCII85Decode fl /FlateDecode filter
/O 1
>>
%%BeginBinary: 1
sepimg
Gb"-6]<:KcQf$D-%PUDh=N>po/,14oE1kS#,f#"8&)`3[^k#Db8gY,!1a[0N?lhV;T[8gVJ-.l3C'+Z.
@tMfbPatV^LNN,o,ccf<X]f7@\Gj=tBCB_E\ppf]FfVOF'>[Y]If$j5SP%cu&<3^Alh/a$9l)-FJGT/H
?6A(6Z&uhS.3I1Gf(9(d8BkpJk5.nQ#s==?);YNT91qHHi'C>gls@I%cM99rH]H?RhuV=[ls;odcC)FH
d7u4]!329eq873h^MWthCF@8M"l?dnoh0`qT<?mhRtX%i^cPW"I`%TFktLI5j/KgUf@X&O[k-[=Z/$"\
[D4k*0f?M)!FBV/L[I/+hRUAiarXk^lJ"5>mHfpO:Z.coJ,LdNYI4DqSH<?`)*?X<"l?f\fC*I)kF,L4
7JG=S,L.\+c;hM@,J8K@U3l,P_qhC&IR\m4Y2X(Q_J>\"_:W0i,(Xs@o%+#JFb*UZiPD]?nBP%I-[;0a
]Fr?s@F,?DO=#34)'4AM4O,DF5cVkC[.!i^a1#]o2M++8!Y6PXGkmKK]6JO`j)M:jhlsEo4HLQA*<Vc!
c0P7]$#Fnh&#9M<8V;6ZnG[J.Q6![Mke$s-,WBsP0Esc0YDYUnDZZJ2i.3`$X!lQ]^/+[ZY(@Sb"<L)d
n?rGUIq*h@^:Xmh65=_f:%2m!]PYR0lu11CD]C%l5]VBV.-Q*q-Z<<_6^jU^",RM+@qiYQhd4THKj7.+
JOG9KA#C<.S\J1_J[E9]-=`M[*Uq,grcWht&fDaZh)anN:>[Pj5bc+o)Vt^F9Eh:Fn3E_b6TT,>KAL6Z
'R1`4iRNU9[l2jeH3f',dL$Lb\%+CZeCC5KK"qJF#&e@'\2rpk86k)([)0^g=P.'*X=G-.JHleohJ-eS
OI'`k7ZP7dBn_ni&,HN1G"^:GH'c;KW?/gq)D`%;)=cX?X;Xg(bl/r?#LWaY_R(NPJ2aE[*%LGC,/@DP
4R**r4'[=AdKHaATR]PC[!DcL9n<Pt!Y:k7RN6M0<8%CmYeU?TJlfbB;<u5>l8S+VMSK=.JHqeM6?X"h
jl_r0^]UPWgHYdX8-NPNZDfjn2[(6n'>,:n!udc<khOr*GT\U-hS94C#9Rl*MN?j>!Y;(5*de7:*Cmb[
DS3E,>2Xrg_J@!D@,p>.9e+F`+n.`8iAG!],sA9=W]D(V"Wg2Z]G`neEAY>-q.AbJ#X"2<Gi5,--4fu,
*NrY:fK93GU_-o>ob7B92FQ(eO@A)Y1rK3@hVC0gGj9RuY7!IS7X-qT8'*LFFktQ!1\5bEYOD[Sn:3W)
f>uU=df'd`4HKbl/J)75e8%hXVKpN%GT[Gu"fS=q!O=^Nfu#WJ&#?pcXG&"aEir_il8O]8&pPOIiVbJj
Zc^nh`dZB]<IkBQNCX[=VZC@^XNuI5")4pSKY4d9c6k"iD!)FU+O0C2^jC,L-Z?]&l)FdqU_t5HhrNHP
@rjQW<<XF79Bl9Xpt#'2!G*5B"<L+W&le$gmj'B7Q#4k]GTa-SLOIJ)b3.gpZ42*]&#9qHG4NqBL_a<_
&QI\>[)+oj2bUA>#ZP7#K`rMg4hQ7IMO`b?^#nrD(g^[a9Yr:V_%,IQ1[ObAP@`)SGT`:M_`u/ShUXVh
SSF<ko:RK#5T8QH]#9KVaW$H`#<dVCdKm$=O.@!/[\i_^!Y;(=?@>#1Yn)+YDlpc)h@$0[&RKO9L4@;1
`WtM*]dr4Q-)u!WBQ?#qb&#\Y<L=g5JHo(5:Tcg2B/V@^<12IP^]S;&=.Yg)(CYST%5S//8EJKqWfpbo
\RNW!+,Q'HY1TqBUaC?Z$,#QYMl4WQkQsA5-@!dl$_Hs:H+cn(T"kGBK%HU0]4Au=%se9fU^<W4oGMf!
O>f?Z]"?t:</R.'jjl0RCe,hpnB;/#OC7QQ4UJ+s(5os1Bnf\kiT6tWC\$Sp-PgqLQ'34dg>KBj3""J$
Qtc[]!Y;(E?=gH6bi+%al2+tA#LX$a[_Xc>+Pg%2*t*W)&dVf`eW;^R([pBi?$!:#"G18F7@g6hY.t-R
L=]PcR9XG92;1MOn3DT@1M1MAe8!6&JHlej?@ABX13Ud[]=R9BBaFjel:/:`ciqJn*_8*"ecP&%Hc>Jb
#X"1KnCe8*]Wk6r==aLa,QKs?6-(D/J1C%RRc/C$GaAnc_k;3ef)cI.!'G&@g0Ku`g_=uU!T<)5$40ea
RV,"GJHULI7CfNEh.S>.5Z6RS[I7e4FO@!:n*M9L#LYUpS,:L*r:k4:4HRkIl'"$,[rCPs"Wg3g!q0WD
a(6]R;:X&q&9o=g_oo6BYOniU:PZ^fC"]f?#k)MTAJeBjQPOfgWUR95\2ZH+>rpa>7Gr`=$L`"^AJeEk
D-PqL<%*<3m2O2`j"&S)G,)(Q"%e'A2bT$Dj"%g'(5os1knIHQq2dPNqeZ6Un3G,tGhN@6bHQ&e4Ue@m
&#;"+)E[qUS(P,dJHq>>:[?9iZ>Jqh"NU]e8Fr5#QrZVc3kj&.&0MX2+=ZfeG0(35VT.C*GT`Qn]0&&2
?$n`<$9XD^GdZD,]YiCOR%"-f,R*%/o5\o#E3.[j&J971'iT$Rkojch2:pX&[aQ":+=ZeDR[7qI2M]Il
7TP'FdL<>/_`J)#02]-`Ba#PKo9`VC]>kj7S%\)m!uH2)jU41VpNVb(Gt^a84HO0"H=-RsA+NNM+n.b>
Q\FIAA(s_tk0Q9+Q!X\98GUnD)?MHK)4Lk<6/[;N2(_1Gjd*u"YA2h_"Wg4`?t8[?DDF,*LIZbb"<L*4
i&TDMD)W?%LFN^`#L^+G:8@8!gH3jIbC(d?&pOrsM];WA:"8FXggt<ibtW`odCArHbKrE?"!8=oCMjJA
LmeM(>OuTP:Lpe5.Ib\fiTX\)B50'K2Dd#T+KB'tg?p]1.6,lf:Q]Z*!Y;"/T%4^mce.$,V?J#/b;SUr
mdWbVF8)=54G\$I]i*`&*1QA,]a')n:h^s@p;I?)WXsDG("OPs7UpN'^pE,=JHsO':CAVd/$dj/(3i@b
[YB"(Z+8%+$9WiNG]2Dr`gP-(8:?-o*^GF]iAL?u2LDE+.=h_#Bc6I/ob<,ckqi?HhuQfjrk%IgLVGa\
Gb_/j4@n/rru8/2VTLu[c/Df.H2rNZWZ/k(]kXC;$TqMHl7$Ns<XV#[)-:F\mWse>,k)db-q_'Gb/5Fm
*-JTcYS;$M&pTGJfi-N_H32Di2gYn$Wbm=MW*=<M]p*7$!ma`@GkGXJ"Wj"Jc7*jfH(.P.'mOW-3N(45
O38Lb'6nE+h9G7IC4XF#qJK);SKBNS>ZKT_I5EE\g:G(@e*V%E\t"SlF&R's:1:f2^uJ:@\#1o:pA'2^
?TKptmO8R^m.<Mnk9SMkmoQMqH>8#o,h%A((LQbsr_MH4WP77gkZ`Blr_MH4ab-K6n@7Pq;c)I`!maFZ
49[#p-LdOihsW!B4#%()-[G1qqLNg9@K`9\9`%.^.tP_be*]'EC'h-N4;SkN:VHb-j*q3'M^gCLRb9n;
GV1K7/fblVn5rZdnBlS=kriAPrbEmW_M=3/4"0RVVndA9(E^?*Cc;2*GV8RHUC01"q=2jt4iMeR4;I\^
d<drhHtEMQKDbN.!fod)*Fpg)2%?qpcU!:[82"%-)7]gp6)>Y^D[C:g49t-FZ+OCaHq`HY./2ca#s8]C
Eq>UTVSJt-p#P9.:JKF?&9r<)T%pt)4sod_C-9%P!foX]I.SK:csI/C\ghXfMU><7G]`c'UQ8IlG`M>0
@-OjW31'c./l+nIh%H+kG]\3\K'8NA[(rFepCq!IGRX-Y@/5,9!maU?!\AbET`62)aRU-Tl(=IELVP.8
p?(N1nG5cc4L-GTSq=b!<oqS)Qj_aS*a,=0Ge(V2;rO\]U6iZ:PckF[?H(j!#X#Ej"]to!Z[A#[obs`s
#X#-bPok.^YpAgDj=r^H].&0/(O/o)N/l-h4b6+ga66WTEIm9sO3o\5k:1rr/DZhU'mN^RRNaSe&U7(A
)''B8Nq+&.S$K:#O"-b&(4kWsT)k8Wl5tRIQIc+p^iP^k!)#Q9IKU]proSD6)R?ULO!q3ZZ//?'$Tt`-
7`PY'Rs`eIF]0bqi"8uco[3QZB*+-q_P`GYV:#Mg;2&'nrS))q4M#Qa(U*`@=9P4R>/*8tf?O4>n>HtE
&ZbF@?kIW9ndVeeh+WAi;scM)-Lb:$3BHjSF+4HXW[bd20nJL3c_8UgLdg7Lj>jU##71MS<Bb%r%MF#.
$+u)U3A)oQ>i[mt4kBT=4ISBf2TON9JO`W(3BB(LrWt]M)UHecJ`e05U!9k9:Z.Ar41%#6NsRq3I"sT`
SqDEG2?f\)9&BZ8T`RgDOlSYX/b%up>]SR*49su^ULO@dY2"5CCa^A=GU.QqNX7hZ]E_OA*a,UpG^\tO
^n\u#>[$'JeT_UA$9YV/s6s3C8!O%LK"rVSIo9]'R21#]$+u)U5H,dpa:`_0bC<![lNA8+r\Hl.KMLH&
<-Z^pona-/8!<moT"lSoIl_MHG8GK<H(V(_#s>6ccW'+_eh?Lu$3FNWn4<,`K$GKi7oKDu=FitB!9q-[
6mqIP$3XZ^n-B@D,:)cW$3FN[n43m/,:)cW&pP"h$m6c?n;%Dp,LfL&&pONo!Q:f<*`4(kKEN>nGlXP_
Xql7-Kb0UM_@qQUU-RX.bG-J=Uk6B,9&R[h!9V7D!fs8[VH.jAO!oPqZ,2%C]RC/L]]p'VGlj&(+EF^g
O/=C[FIp:C.1CIgl_hP9WsU!d/+@3Z,*=MIBIZA?V"^)$"WgtO04G)^_BSJ_$DN2Bi6`6,$&cTo.>SV&
IN]JXLK>&O4Fp"#(qEb"7oC9o7d/TR$Tu')?Gm0q(G";g8PKc\4Fp"#(l<?c8!:ZG=9:-beNkJ/qcJEb
6S"*F#_>L/^l)<'Pd'fMEIimG(aU^7O/+J0+9W`W@8oMu4HdR[Je3/P$+u'/8/9);+VK$5K`gd>IG[A=
&pP!=&#4eHi)(1ZrK4mj.$,naJO`Nbog](ETRbu!"5gR!SHN9;C'1Ge&9n>3;Y_^0#SM@oWsPR/6JrFi
9(A:a,:F[ZJV8=nP/)uXTiD"_[n0CEQ%*'gnB_LHT!UVm67LY'GQ`^u[OL\O$DhQ;i"77(,$$+'Rf\Wn
JJYQo?Gm1\c+d#DFG`Da\J9>l$+u'/`3trE"<Lmc,[plt?32ch"Ttq8k"ao50OL6`6S"BiM?P%e_,S#S
4M4!`kI--n"q+<104G7#L_\-5"bDGq^l)<g/5e%g#SM@o.jTB!k91Sa4;3:$="s5>"<Lmc9N;XKGR;$=
-1E*Z3:KOkLR#Z5=B-d@9VdCHY@+6j#s>lC:o`=T*aSn$@KePZ8DrH,KMq1inF-biT$5MJ9Ai7?E8X<s
M,lV*Uue9bbhPgALR5f7=Q)Z#"WghK04KV;:JsMmL%C914LE!$`WR>d_+YIS-QTC0i/,:%QGAD[iClfZ
G\@8e!LpmB.k#XOD;l6@4L$fL$>3DGFIQqM]SIm',*p$&=M\f7.e)p?GS*T[c%m\8,$$\HYR!@uJqE`p
^2G/MKsQM/QO>pO"CB"ZGS-tdAhaRBLR,`6=9:-b$+u'?n01mmX&fTiZij^R&pP!]i'j`?i0D#p+YjA:
LaDO7<]J9>Ft\E%Pe`2Z!\\!h]SIm',$#lVig%<;=Q-=l0(@3pB74`MLR,`6=Q.&2?U"Z7:'*(X$+u'?
n0416McerRCBP\Z+i4%)n8NE%Qa8!t"Wgj-nELfob8#883Pm:QD"IN,*a4Tn?8&b+<WsOJDYl[V?[,h6
A-tH+gu-^G4I6^0&pS*#_(0kW):+iZ4LEo%'g4Z+B;'eQ&pQCH_971M9WRXg4LEo%p$B349nA(c'>.B(
Gu`g4kms?eQ`hP$cuOj71["<D"<L`AnG:4<aVEX5?bZac:/:;YDl]qL*'Jk.<pg1\7rPbF/9`<-cuO_>
p-)e8n9i=ihXA2=jU&1k!Y6e/Gf)'IY$(,n%kU:r+26:K"<L`AnF@/4:G0<pGZZuClhL0A.:8LY_b&cT
/15[09Y(s`^*N1lQ;^OdK#a(7'mOE&_<\@G_(/i1JVTH)Mc_V$>(Pj<!\\#n^oIX1?TGo;?NSQW*8o@#
<`^GoI0:TdFEm1Gi-?(Y?7GAkM[hBVGeQVL\nk^]4J(3&^dF"g0;"0!\PbaIJVOsThHK.rn@XT=k)J^e
b94NC,4KOq_ODHM?g5j94XT[F,/S[5]Dt?P=3^6?WUcA<:';V5Ub[aLB%M*6.X,gGIYY_VM$.a7G^45.
0MOA9G^,A/NBZ4bBDMMC)lEFV!Y6pk]R"=;_u)X"ad(-:VnbZW@^$R<GZQKBT">+H?3GNEM"d=,i.p>^
"<LkPGZ2NW_7LV=^r$OEk08?Aa1Dh>^r$NjDsAj.,i8A^B@R%o/Tdng1d'?s`rmGiBR!In)`%f>qHm=s
aU*NR'=upt)rA*]-;S;Ri8KBDf=]UQXqGtCKnMCGGb=M-`at#2*aVB^p#>#6^[g/N-1K8J_V6u]!?T]>
`<$Q'*5$SRif1^fH#?%.iItM/DeaOcq=g=r:Q3#V6K$gUK"#ZC]sX7_h+0!acpGR<)IBlMTjlbJW*`=c
i$!f*fBg]r^>bn_i),/Y=!#e6-!RQ%n-D?3c/3De]^b3Emmc.8%k.XoC1h:)!me1an;[tHlQs:@DFEDk
"c##o]T%W^[f;f3UBh?JP7(Rn`cr^0%kB?H9%.RaN:?[DEs3U[@!KZ,:Cqcb<C5[3,@eD*[`G>]UBh41
fLNr-eQa%8G,+FLn8JGH[GC,l'nPON5^7ud1U`)o/hQPu.REQIV(8m^Ai08I>ID8a#o6^q3TqK!;F04Q
"G<%V9[/STZmkJM!l:p[VIg&S0Ho^/`X4i(5k$VHPsIE;BN*h$"G*Jm"cX.>IKb:((`FH.>[$%t"G#+h
9hjKkAg?g7!l-VcR[g(rIU]Co6`N2&B/3Q.0:YVA^r,IX?=iU>p_IWbcR&)-3es'f6ILL2iVaC6=Im<E
N"(h*/hQPu3e`o96dgTH6^s@V_s8j.d-<CMPBc'b(3irP_)msmX0;'0.g6u#B3WlT*;!R-8HjZ8cj@A=
jIl8,KpN*.XA7[gjq3Z^fNmE4A;Adj)BNNh6/YUNLK>B7oNmJrBn8d:4\Cn'C;sk*-5?Y)794Z!kXme1
i4(UC<!YUVXRN;#O#8.-n0kTYCFfsAa'12[:3[@q38*4ieqV56<#@2gJVTGCJ?f#\&nenb^n\sPcPG(O
?Pds9AV"JO2*9AX==0Y;i8J4L6TNumJhsb_n0g'0/*nK%CU(Le,KU5;*nK\s$#aq\"WgE.Gbm!a0ShM;
/at/D_TPa!("O+A"<L,]GdTE$0ShM;/at/D_6[`^#I,Tj)M(D?+hBdi2/Vk:etdo5UW<G]33,\8OteRp
$Ts"LmH;\Zn(?Ul-PL_al/A2o'*b]g'a,RHHF"h\F3m#*R0qE,+Rj?u_?90/bF0$C"<Kj4Gh&dccnT0d
"<L,qG`Z6q2lRqh.+5N9qV4m1R,O%L=Pt@!JTmOk)T5eF0(<O8H?0O+`++RhFTN)U,J4Z=n5tk];]dR[
O?,(/@1A8TW?C\D3i#_*=MnWC.L8/*%e*6:+%EL^'u"mSFTN)U4Zo+(^cYO]i6eph'r*lCIi--c;dhFe
"WgS=)DF]aZPRCT@;>fD&#gS^&s*M?`0sYmCgM[Je.,f6SqS3()OI&n%Y9Db(1%)[GeENLJOe-(*n4G'
N_9aBRPsZ\CYY381;94hGVj:2UOgpt9O`uS2Zf&9%D2btCN@<34FVj:PWD7=KfXK"F&G<^dA4WHoU7?^
]NX6UUmh2b]\t`L8VL?f4H^D'/\L$sa/&q\9hP4m"ZKMMj3j4.,>!Fk9EkscKi\UDP#chC'`.`>??fq`
:pe(i^sSFMs114S$3H9c,qfLlTWj52WDJQ@=Pt@1^dCLk3du=k9aEkWB$18i?0Ra:dTnKp8=Cp9ed*Y,
j+fS#@tBEb$kHpP0ZU$%WOipj8BpXC]d>DFG'[m+*`<Y66qhn<F&G<^OYd4j$Y\MH,hBJI1L4/A+Z7+=
:?u*%4&_ggGVkD$%^<VnmnAEa/hQRs)V\)KZSd#0ck1M%%IdOp9Y)$a;IOC^!Y;=Q?A14;QtImBThU)n
<Y#_)aW&/[;aK>=onD"*HVNAYO64fd^dIGB>p;XG*WIs[nSA7;X8MWdOa]X;*LE?R;$%9/d7]"&ncj*[
<#Eq.n?<i.9Vg.^4]>cOS%upVJqk;_=Q.d3O/`h\$l[&hlopt7i*fV0A(&'#B.=0LU2YfVUNht0F(eM1
Tp=XW*qM4PEk]3%6OGW]A.e8e'7iYR9e]Y9P7#;,lj,_LE^IZR?iFa0;Zn.:%Dc<.?iEUSO]2t;(%.m7
o'coIS;(AAGCr#8HhjH2FBZDB5!`\^q8U=q=RY3)SX/`?:XBqbl"]9fX;a#)4IV]fU#6Yl]m)".&#4DE
ir=fsNcUuXYOs\uquRD(Jrn.@-1Li5V;u'3Z,0_>@fd19M@,D%,IFUJ+Rfr2P3D*<!V_<c!Y;K^f)-0g
4O0aS^nYT,21H1+&bh"sF1=]t_,ZF#"oJA?Rh8iaiW9Xl3MCu,"QR`4#s<g>a]QBsA'G:]EG9t/f@4RK
i3=UDf$L;0"07j'"FQm5U83CV")CKGio./f<)>'l"<LP<>i\Y2LHWMK>2Z)S0/K$dm>)M6)OD4a:sJ,0
AHZL<.P+>i^k8UlX2[9>.g6tp9!']%n@pA(/b"9gV?Z#FpmC"lQPXlhe]NP;FM-[l?+'tE4HN/]$&aPY
RoFV=4J^I5Q091gn%rSW)Bo4nU8c^equmOj2'\nlZ5%Tq<NE5nBLo5:R5=sUWBsnj!Bl+@Aq\Z*[K6u4
<p_b-_lK''$Trt)9u.p_LkTu'=!d?T>2u'bd-t.YYtB+3huU4P2=ZU)Yi]Bu*_t7g9H";"2'\oM2?b-e
qe>8=Ge!KPPq.9e^cPQ&UgYWZ/!*jh637[oIBQ4ma*9OX+!C&JohmsF?<DGR`MEapW>[WN2CQUKO/s4m
<aFH`i16k&pR9_AV"Uh8VSG:DU"@6"A'G9rediI>-`ZpLk,&[j,$&r'BN*i[WDM$IPE=`Uei?'^^dDcS
)B4><1p\MD8q@6!dFL_7?qi*bC+g_!m&DrML&#Yc6&[ZR/as=o&%3gr-A<>/E\ddC.dbrg29tN"9e'r\
"9QoLUPI^"f4nrPpC_^Yl$?&T4P$WJ2O:P^ZV%jf&K9M]m=&5i#?H9FcoZ=]$g5B:gCapGB2brf=0V0r
(ER>p*`S-E>j7>eM%s@13LR[hW774c*HDj(:$6B,'S0moIZ/&;J(OVG,h<9.Q,!LE\8;d,Q-K`?gmCk=
c`CuWo]Ci9IMUK@?H)&U"J/c-d+BI?2O64k\%T)_1TJh`H+d&-=OqS#0(<8sAV3I;(`odC4Fma%hF$ac
K#]oBBR<)JcQld+I8Yp,5rb5/CBYbQ[B\?%V:%B_2-[Ogi0dO]Hd/+^Hm6jpco/6[n4Xb\RW%S/W)Pf*
]PV=\i0e,5C\Fb_Z"D:'hQFs.4G.[L\Ur&FEi/F2*_<Ed>X?8;\Y2;N1KWN!<EjcDe<0m7l+ER>.IcsZ
%b"'MU#7XP'afKsOWfLo]_[ASLina)2EE2SoJ-ZJ#78&)Ab",o+gSAS)55kL#s>?6EQpe@i3g040CX)3
f5%NU`%*i(6B/b_W3A8h*@d?"%.Btj0(<sDc9pIrOjN-Yi3a*=#s=2BCeYU+cA[k#"/rTG`d/d@HCXIS
JTn9'?5&M9ilh[n]?:PoUM>.#V*i,s38`)aIJJT446j3)`5(EW#SdF0<$r`5LWKk--5C]DBn:J-HY.&&
E^HksEe/E]CFX8P5#,[9-Y#VZIp3!C+F>SVPV$X`&a(.-G(3MC[hk^h7)@p,#T_X2^tYnFbc'=\XC#8O
3PfJQQPOfNfuh=!2hBrXAVB>sD_CO&C/7"b?@/I'.*`-*LN67C[o3SNnhBS.1.(lbVSLs04L%NoGb,Ho
]R=Hli9f$cLKAeQdgDVOo*U%]QXsXXp2*(hNADB_%rDZdSOu_^M1PDE\fXrLka90?$.`n/,L`/EGTE;I
J[a$0g"7i04O/'*Th>rA)jQNS8r#qf0Z#o)2?hr<3Q+;R&F^Mm6H<&[^f/e!Cs<GR>CdCC+g`]f2M1Xk
n?`6A]L-@2i,+^rb`rYXRHD`4<W^SsR$6,0=RaTEDtb'!Vl0XWcmJi=e!u9e6YKEVW@D9sH7r[B4(fc9
&02F/Wdl.:047tW@8,kG!mdV']PMBrE!7c;7/G;f&U:A7NWL%=@lgeV5$.l)'f<SO$b1dg`Kq0O"J/'O
n4InpUhUHN3j1_n0`l8*VUs>9WXS'DT(#_0nVRBd&Nm_Sq1)NfgUb1iAR-c\p[/IZ2TC^eMrQ39n7L5?
fN9eo;o+jHb6=J?M""$?6U?Rf?0(n994J89]LfV>;\uO`M(p6N)3>$Y,\4(bN0!MJV-D3>-1E7Hn;P6V
IK12(N0)%L(O38?iK[`im$^D&8VKdc0*o3fR%X)E@o7jOXDDn@;WCjd]M[<fo6,A4k'@)I'XlVHKif0J
65hdYi/MKV]d>;K_?[9p4^.u+:lPcRO+P1-9BS/6cR?m**BQPj.P&0,i@=>C_'Ymp"c8<1V=SHXZQemb
@DaV/NqGY-n\N\bGlhmqU"9DN2u-KHe[]r,D\+B/3scNAj%JS"gcU/>$h#KcYkT'm]NB_t;FTe,5p7#X
>\pQYk5qhSk@$lsi0!Ft,AjnBn2aO:q^P-aN")@2Rj[]O2$?DM(*@$ZV!G=3!j>[ZpX"6fC`KlgXObW0
Ghk@?&H^&:#Os+g[;MSOlS.p=2`d"\[;:\AXf!<2VV'N+J)#=*Ks(hMQd$1g*A+qPlTE,&QUo`>Glhmm
Y@N:gcU072\QJgj-1IkHVIjP%j#`XVH&^Z?&pP_I;&H7HmI+G8Vp4?1]Q)";okr#gDp&>\n)aqh%UZn)
8K[V%`AX\un)ap=`54Mrl/Rc'fFmFp2c&@oLHLb,\2j;QG36L1DP"X2cKnGO>/e@E82iY<:PX^sUS-hT
<;uCsDq^V'C(5%Xl0p/p*d1G,FsIkdK:DU[Gf5QXTMmM7WsZ`%jujcW6a*In).b<fGa\!g%u8aroU=qd
(9U':_9I<f]TSXZ(j$[*iQB+Xgq9Q&F)Vi#lgX:JB7ac8o,\C&0XFF"3BX0DX?N-JFEjY*OEVUP@8!Dc
Y4HISL!,QjD@r)B''[CYlEfH[3!u4"/N6[gnFS[8BR'0._C3YYMVHVOV"9OGmA&W#A/#6=Gj.(!4JP.:
BR&S`qBT##@sOIIT(*\D1-@KcTf^MqF!]7o^%7HH&a(RD3m"4>_(u6s*Y$HC;)%1d-?3$OQi\h"L6iRS
D-,Cp/lrd@nL>'(f/br"SY]$h@`lZYg\6?Z3=gD$d:djVnfh>94Ski3\N1)RR?u2UWS-X"4;T&aJr([=
-1`B/Gihi<F5`84n(>`]>V[el8`uM2pN,:R-.+*.LSJ0L\QEqJqml4O*JG.sO"6?1:-:ZT*eU67fc<5Y
7(W14O+lbc;&EkcoU+Q>>5)Oc0fTN2h9f`T`EL:3Vo$>h*Ft82U9YRK4GuZ*<-V0g[]=5)*n,-2QDEJ<
iKYr'cg'^Kj^Kh+qPV3Rh+E`?fc3.%Ga8or6fIPp$?eq#$(dt]m@j"f(.Y()3dOJ86!1d^LVg*:H;3^,
b>\XRGs!,TO!?P@W%a\S4Rd001=(X*]%2im.P4sDb8"h.C<qQ71Lq1h<L3Cb$Tsn+q+Q#Zf8uofTP5*9
$&^Bio1XB4=0JU\f5A=DLZ&<Ckijn^EB+BdW=6!"^rlo<<])*ao9[X!_I?/!4VAf7?uo.^m!sB>fcIIi
_IN3.\m\8fS;Ll$%r7lX'B*p72@#Wj4dM\m>+bLVGSQ^7f+$W?r`hSY8#<>KGTsePc-,D]gF2gUJS4D9
]4\ujMiICE9tg[)rK5bSl5g8XFW#b$9MY`5.P.^p<Z_UN@WW;FF2u9%YI7Kc4:iR3UX5FR9pXeDar4!!
*^!InTekjH=Gk-+X'PWcG^SbKja>e2Z';KFmGd<F.sZJ9UT_I1_U@0,om-%I:.M"ETbljA=533:EU^Jn
4JOFH;8Q5bn+C\ifS]YD)12UJ<EO9g:&a22EMeAS1MSkXF75XRP6^Jpn<go%DX\CJgIf&pCJG;uVnqCD
qHHqbRg2=Zd912Qe)54H5YNqdVAW!.cK_3s#*48T1PM\Di11b*:P2`Q%sc&HW]?pQ?8Q<gb2_FM%sc%p
Tc'9RiAG8]6r`[TQX=Us2I\E(nj\mJS'\inX?,YnJqs*ln%HHkdQdd->4cttS',u#[ZbHt./3%teoc`X
YB_.Q3Lm8Ho):i)^!1<!XkDO/4ak[DLKCh!CThDrqUiQ0rR&/Wo.5.A\\(Kp?eW3mW'%cHB>M3sbNjo!
l#9\t&shN&^(NUlhD$[u^ru&`B4Cm"GBi;j=m5?Y:3bA!H(tiGhYk^0rWqH4KFUf,oJ3=c>qk=KI=$/4
Rj1&2p`)E/j/A<,:W9bma%ic!][$1?k<iPYn.&/G,G47q+`A3hp?g)7KEZ>$iPRa9H5ZBLQc-lJ'uqB@
)'7^J_hU05K"[lJs1A^uGSfH3->C[ufD6^_X\Arf7V'DXlirMrP/?Y2TDbB;k>Ru.C]s6""dp%:ii4/?
BI:>I]>?'!``6R=:9u3(>rLd.bY?^c,KQ&a!PD$UVg64s@To1%X.rJQ#S.VFL^[VQ!:RKBDeLL_p4%A"
S.JX=*"BRTpe*o.='dfGl0?\;l]5f%P85*"qn?36jd-F%\euZOn3BcQ"Rp.@hT>3:(7j#c\YqMj/<93b
:KhT()DXEO7mp@(34W8l&M0Lb)n_IF&)oRrQ1)J(2g@@H8W+&7pL@dAdp+ooNGdG3lqTVa[P-!k(*1&>
$Lc+\:Ldcl>n"6DAd%T]eg>[fibA4nRgp[C;q<m_4_`<[US_4t*V+rFDM-+9h@L%r*$61`C52T=+n&5N
lW![=6urCb6j3"f@pVNTGH$q\CDTNZ*W"tSr=&Ig:OuSSgM7iSV_5qugCJ*t"RrkUAkQWQARKT+Y1Uo$
?L\*Z5Fqq[\1SdYC:Cp86fm4XCI3d"VnfojaP3o"j8cB:%XCj$GHmLdX4Vg[(&`0j`s)/+&]!.\h^!HX
RV$/sS%anhq)9$+Iit('?K+Fo^cR2jq6`p"d,Btt-E)ud!8b0=luL7XErD(YL.0tjDrfo_WB_HQkro4+
<AR<,g5K!AGSRmCN"B;]J9SP^hJ6W+<7Lc>*8YI##d;JAV^Ppb$TDo\8tf;beSn_K$@"XbV'Imkr;%RT
2iiY"mtGG"0u2PQ4?U8dKukW=RnQC0DC9K/p^nSKmfkGK=/#8U`8\$VX9f?s70>34IjMl\YP7VMbKSj*
%GioX&S`.Q"7P(G\,MKI'mC(3e)6b@Q_^.F7.m"2_5f=(]K<d=DHl^$X8I;fS@gI4GeKSsLNb:^^.A'7
(m3`bU+<o$J60A"dk-c(M2Kj+-hYplY2MeTY<p,Wm]fij4+.Y>V8-kck"9abIZNM1:'fn7:$p[!;;d_,
kfRiErYfurfCJ28H2K6kku%9)Dc3`oD0V2Zl\!XQLN%X\I8bHWo:8e%2N`GT(F)&LDK=-OeT8Js.GK6D
U+<nu!&)+-7ISdPr>kt\^>V3ThI.29Q'tEqI+dYp52I5u9`"7I]=bd_`FLU\lah/E\aflJR\cj`;`,#1
BR'.&L8`!6J>\(@ndL"mEL3$DCDc\m&EY`B_%ka8Q9MtZ`Z]9crB=S5)="H:iSj2]!dI>H8at>Lb+d33
a*n\+4B>>u?Ma//FOB9pI2QGO;9Y:1^anjno&a2%L7C7gq[(>p1'2^dR+Du/'t<n*;]GRe/0<")d?S%[
_olsj`6P@gcLu(W@%X_1i70IL[$rmX.8$Chf^RmPfAJ[=GIm"O>!0INa$]S4;8FJ.j)M,X4pWrCACQOu
-ZnUj]@TL?eR1tm4rtjLLd'gAXmkg9(2nBD#@ZT9%?F=ZN'?6EXmesT#J@2(:JlZ^o4Dcl;Y5Q*jDKtH
ZE>E')L#sh6+J>4`Nmf)TnA.*hRfO6f3$lnj=U)f)t`98S#[)!8r:I/miV,Oc&X!9XVFa17TAm(X5)S"
U(=799lF`j)<!nZ_*`^jqK=NqfBfC;hHJ.i8=b*$nF.s?QhM5TWQLo/Y?DhcD)FGu62,,FLYl#RpL(1H
/!I=6Xk$*6\kWCtQE3E0rfArEgf_F-U6Qb(H\_u7JVE9mkEhCpU!3M=I"D$h>p^nCBG@pMbhEMi)-:u:
-=/#CGkcG]GVM*<Ko:YV_N):K*:^NX22B3Z1d"S-M@.B$SmmD?&MFe,]O)u]A*WcZ^IJ9&A49!!^.&3c
n;JDI[C])S/aMXYeBbL!b4'eS'Lo(2XRfFkFq19fAFNF/@,WKIde1*Ia0p>t<-J;'I[S:8AXEQ/O8TNf
?GG+(5!2*"G3<<E-Oe<s8mtOR)93YAs*(_6k;4S7%.Eni^K!G0<m,1*@t+)p>ja:SGbqkmDk&)[CLWpN
qKM<Whm%6D6PG2UGT64n'rKa;\_Jg$0KeFN3E8hnDJ/eRa3/GWla7qJ$GB1.\a63[.];S0'=ijI,(l6@
%_M)!:,K(,?.dgja'GHkpT$Qr.ssd^]606F41pX?AYObMHcTK)nA>T_p<!GTmhg$;R9`5M1@4@Jgq.j>
/.Z&nf^>JcLVqLYlL1ckktDIIZb);R>UCA6De'<8^Q_'o=^bLkp3s;pmkMYZ:ohBXZr]0/K59`AjG7;t
LFTke4PD;kY/]Q[o`!^:jYAR,CGAU9gZ)#U2Q3'Odd4QTi,sk%mB6Yef.J8]BmW)?U?,7gbMhr:Hf_hC
3n$9`nV>`^cUN#k3!\HAi"^3U?L8L+_YcE@B+Pe?`16JTkE+<\'8\Sj7iiC-`+fiiLHN_rr"MR(0*<9E
qK1*ghC<X[SIBa:jf\f]'6oB_.j4Yq=7?UhdhENZpmUGRm1k2]M?<8.0cree,E8Lti.9M7oNArW#s:X+
4Q)Rcf3U`[<c3d%?3c2I25MGb'Whb`J`6F4=85-3"sjT%itR\CQ,&lCLZc!SZ^8I3KHKeJgFF:b<sAGC
DRkXgn1Dtm]curH.4m3._=MKH#eX/NG[=$$H^-NY#U4e#@GuL%&j**)GdGaKcaUS3/T2AMce-[P]curH
.FogSSo8sE]$47-QKR(1&U:@\/[+[a?P.O?Yjf<[/":f2="5hI,m9f`HUZkp;T:g14R`!dG*:4+8e@S<
HUZkp;W(OTGb45&H3q5Q._P-GmJcJfrB-8O'GnFYIK"Eip56XiV8._^n8>E8]N%LIT'KI4>I^Z^4umig
fII#A<J?%f]D/>jK<$p?]$\=:JFBYSc4:g=n5e'fGQAYN!cJe`?3&!B^fuMFk<CpQn._SSKj\^(]N$A)
[K#/%@Lf?3;M/'H[oW^(+r%],Isg@dM6Y1=$Xh$hG`"3E>6",Xq^0=[#-S?K?4hF>0^o,LNaYuAg8I8@
>)C''+?2iEfAND3M89S9fHe<YbQpoO?3nOtD+]+mC12n`[,;*rYL"W9%\N<E]Fb&tG7+F)#^_70Y<pcc
9GbQQk&)@#<W;SU*H?C3fmcQRc)1`K%)H8D_9;]dM6pC5JsZ@1k&j(:_hUYRq+8Eo]<_('Je4Up\,/Kq
>7nZ'(EiOG<]Ps;Dq\P6G>M3,arieM'"i/Wnh./;IK]-E3t,YU&V:]uL]XdVNd%F-b'HJY%mhQQ_G_RO
N%Oo;LqWb_huuq;er'TJfHr%;FrV+0/"fpb+N>aBDIqZhG%H!hEi9]n^bga2'WW\O+1hmEkX>Ji1nk"f
WX9rU8V8raFuAj3nDR(_&ASi-_m!2jnCdnLKBtV8LK@4>c9GAARFmNV4g,`R-O4SG-9aM<CEW<X"^X>3
diq"AnF5uPhUr-L_hbLXi)PE#fcj^md,D)9n+;6dObopZ1E#.oaF6?qG`;bXZbJAV9IpY0Zl<nS(;(Oq
08rRU%:1ckC5@67&qUoh-IrbMlHmo:WSQ^kqT^4\.J0A$>FDAtmuMpAq;;"<]e]q@Ka@/'s!Vk/+`qs7
SO)-MLqQ-D>PUl)*a#,g.k^<@S>Vec]HWI4$>",:**RV=]MRr0(O.h*1F*&UR,Aeb?Lr,\_&/Z+M6RE#
&)sg(i7278Nce<Go?Rs,Y[lZlTbs75GkJu5Q%9(Y8/#JJG]1N/ahZ(enIu*I>2^<f'R807iItcX;C9E/
c?Y<e\5Rqp_Lcck#k5uL_[C"D68*nF<"m>0KjKFhZ,Jh5iuZ$)i0D,H2Mpq#!W*;^heoWN]hXrH9kLn*
DX\&ZGQ*@^HQ=HgU]IZM9d@5>KH4Ro'6m6Ve:OXFBH$C:b1oh[(!=JI1O)M8O*^@Bi3e)uh#$.::Y1/^
.Dr1d`UNVY0JW8(hCE/^q[_di"F)RM]Qs\KZbDM&]Ol)9q%X4mYPD;Fk9s8`2gi,3Jn#V4b>X-SI&:;1
:!.b`$G>E8m42UiFlMnZPi7T3D!(UQ((k"=<d7W]n>9M<o6h^=\D\//_j_^k\*s2r6nj"jn@%]3o(.aV
"6il=*aWW7f-Up04an`mEe7@45=gtl]IJ&KFi*Y=nKS4$c(iKt[_f)nKf=3*iC(]ln/<7Y10o-9o'hNY
iD%!t5bUniGkmY26CIIc2#ic$i"=NR=Q,OCn.Ma0)10VX)H(74)r:eThg_[[71O6`(u):Q;'s;S^jD+]
PVq3^ieBC\dD$!W5$fVjXQJc7,J81@d5;GJh!i>R+@FFG]N,/[[0lB/I;SJ-qS-aq-&W\u'H6ikVfH,p
ApEub@?ubd.jt3%\VS,1U<RFZa1TaW[IM6$BF%$9DsT>GbM:#Yj9k@hIB=UBZggbF5X`iclIk\n/f\u8
SDY,cGb=t"c1+0@%'Q%./'.D7XqbeG\e/9E>3G>@O,Fn4A?MSlWOu8bNOIHhZ1A(167L"3T/^;)9<X`b
]H>*Ss5u&[*77*pZ=gf0,)0/mZ%r<gKbIjfb\H"q>B`RRM]6YXo\tSVX?lQAU1<!Jnte&.fY>?4YFNiP
lnnWuFW%ie=V`SOV-F\G&]h@(b\B=mpRY0npD'EV=0K;L:n^Sj]M3rZ[XIPNI(3Z7,$K6QqFQ<sNa2nY
(r;1IT$kX^'cjmdhXnSZkeL-b0*&+LSo-7O.:.8A<ZfAQ\7:4o-m(:EkSRkWNt&brjs=Rr_kU'L/%kD)
IYRk-'k!`Nlar:O?aK=d&RMep[rZ1,L"@`d-?ejYMa`:Xr\)m=>Ip(eNEi:Ke6Xr4kSRl'qBi94ft<Ol
]QSGg3qRl^([F\<]<OLoGkD[flU$Mi&`G=Xk9IX9\K*$c`<i_EmBWAls/q#V,QY)Kc'?)=A!FqT/F_p6
]\RW@-+n!Qbm%2C7tkRoo?r7M3dL=8@7A3hCjBS!nEN`O)-6.W"n39lW8,-),J8DSVgPA'U19F!=<7T@
WIGa!)EdrRCuC^fdT#9s#]JbaFeOLIq;Eotm]]PkK^c!In3*l:(_N?R>-lrRdXen,I]R2S.Ddhk$DBS)
GkJMse5R(X'EqeFL:?P[@YL.#^P5`MFsXd^'mT&JD--fS_FbjTGh[:0#d;qTRS?lb(4g*u]<)eRX721U
P/h1V7Z4=/$9[G%^d=Llc`Z(B:18i7"eK"FaREqfGY*m?4*X1rU!3u(2(?<k_M3gVeia>r2DpYQ'pkf5
Z`NTOCuK6'dhq%D4*[0s)psKahCn!jn\a*VQO0_^Y9PU9ngJaP>/.j>RuZtJFgW[8bLBl_hX3cV,.qJ-
QIOl1VTXVsO0AW4$+unArssu!hIc#4^d=LlmnBar'3O38%A%jGm5?tLlLPl7]Joh_`Q3E,]HZ.J58q2o
61EC8n'Ku)(-pThgU[)@Gk$R02H*6MX4lWhVrkbBJ>[_XJV?!rnE.*DAtGq&08Yq?jtd4Lia52ZL'7T2
JMBsjdK>ufbR[K@&uF"H'Vd4dcmBLa84YO(45W_"9EF#8kQNjfS[8gK>"!K?07e">EV,9lWHf7<4CuN=
+t[_e<s9A+rn\RP+;haH%="q?*a$r>BdJhjERgjUPSo`t!co);[Cl`Epu_oYZ`o-=Y:C30[/r"_kSRko
J[N*po36]%^U/]]D%;I;hE!QJ(*.IK[giK).Pl-e/(/sW3jYMKa'@U%R/cYkI;/\!,4O0V=D6):1;'^g
=j;Ra]aX",GjimcOht<@>T3+oSn&_TfD\^j$)I]AY&Ot)Zq4CfVd#b/;R6S\)O\ka=@B(=m%jq'*@&GE
B6`_Ng%Y&8C@Ed:>gK.T0%2T/K`WpnQN,7.:1<+kDY;E[>HY5PL6mn7/+AiG[!h=GFl`%DMiLY8o&uCU
/t`"QARW4t5'EkhMAY3^ru#'`N!O@m&RGgW?cu)@,<V3p6jta7Ig-1>'JucN>oZ)hmg?]R`,\sI-WYK`
#753M//d:]e81E/m20:m/3Ob']\sM-(YU.O)fn<gH9eU<P4.D,++3]_iQW)<JM#JE>KNY0?(No%VCobK
HO,D/C1;luL:GcP0-\%`;H0(BIFOmi,)')Ln1r=6Z4e88D`'PS_OH\pc+uo2'jgm.8,1=&X_cN!]7OH"
?UC7\k?H0oWH=stpuo!"HbJPRrpBS`[\CVX,+.[%Y/76Z#IQ\hk`N_tVcBT]S't&df.Sc4DNa/Ir0%&c
jp)tk;L$Fh0=3aaFEi3Fm,)[^RL?dUDl?u4j"*rMe[/4oB[^FICZom3WoqPJYSlB=9gE%*nNBWljg:jU
M"!1ZELSiO2]79XLA0@A'IUP&>2[($/NQ@U\)4'Z.[C%[nFd++$#f#uI]Bi!.&+QtG:$6P9sqj->33#U
M%X,VlqI@&^sFDK?N/Y^,RV2-Jp7!k;8VW$m6`$bE1oue]L'#-\dc=*@QBr=8pGbNBZR"T[Tm>*!,o>N
6rth4H)\8Sie5qHd>."PhuYI:"d"&<]0T/F\$os]71&G[,_#U2=E&>MM/2;`g@^B#C.FWE+YQT8;_0@*
CaYZXFEmWT_ee8]4)8GW&+NP(e[l-9+>C$jBR3\>a(\V8;lK38bdr*+nPVP./r'B(-bRg'"2(eh*4^XP
2*_(FF$tuV`YHhkf?`Aia+u6kk`c03fGNS,AQ6Y77rYkG!q0)u%<;3l%g7@#"qM>qL_3rJ%!@ilI.f*T
GT#FK4I<WZj.n&Tq<V6hnCgk#NP/oWn/@+t(a6P+gS@:XX7`TXaa'j!KfACY1`%<h-.;'Y)M.h*#iSJk
0%,IZl@'t2=&-uH=VBWOJd4>4K^ePTi^J+]81SuLcBBZh3GDW08ohS&$Q^_o&0JQ].^%:_-[gmZ*c.9P
I.3GIonQOo6P'nn=@,28Gfq#gLR%-l&/.1YmL8X%Z`K/uJ=,9V+B'gTGbm1]5$<+a;_1+WKehsX\BlRB
l*98_5Qa?#n8`+"G.R0.T.E$Jb5.=\Q/(rHb9682%\@.,jPbeNM5s\u"T)`W_:pN.rUtLa3cW"5+$o@Q
%UQ+e<WDT6,?b[\nfTDCG_J3QfB8-,79mN`W9E1$Ws_l7]Z?o:j;;3.>2\)00)+(Q(YTRJ2Q83][c.&G
!md`9X]tToDms/<^pC!GYk14YHY^PP2L'LtV%8FdSkUAo4t*-X4[r@\n:JmC.2$k@2'JiJ'F?m[l2[_0
W"O=j<<6.1X.lcL85j'g!r!Dm$QtQG)8$N=Uf@^`Z];YZ"X\e5eo;M3^dMLTN23uA*B1829ENPAj$m(#
8`6":#4<p"X;aZ,>k%="4U$CL;<Z"HE-;cHeS`$cZeEcc9n?qXkW&ftB2K>RZ$CC2E)c>ld#CbNB3#n]
Ypo1d.KU,RpNQDCnS1q;b<u"<"J/c4HO9i#W$%FVfLk(i'RWYAi0dRLn)gl,q?Kqmn;?/[4Fq-Ei2,kT
"J/3$k7iHiA?mX:GbKHk!mdYbQ`JhsCTUR',(^V[:-meU'mcj+07db4pc/M/B2nXd"h&R6J;OV="NDd-
SP1Y)"YY+1;rAN-qP;b0!`-#H-cHQ.G^@?e.0r%gap<r#JS.dfSjIX>W]qPLiE%,W^%>DhnA6i$mf]4R
;0WEL:TkUU$3JPHnE26B!mdYZEXFb/bT@A.-p.ZaVcO#O7fq#0n7OTP\p)Q:B])><.0r&LU<"bh4M@K1
.GVSkAi0"Oa=.BW]o!Ycc'qdNN!<T0K<ZlpoSOfi+Ro#\+tP>8oSOhD/b&Ci"Q$gB2T>g%MBSl?nFVUU
;\41W`Si9$]OGA%nD`pO"J/A.j:h`g<l$H25O%#>)rlMDp3dG_#s=4,a=.BWXWm9L"J/@CbZ!^On2-#s
qPY'P3^kdFUt<<'D8lT0(,o%IBbX-66/_!,7H,cO]]`]Bn7(o%"J/)fGR=N@W&WogoFcBR7Be';,_:/9
/3*lbVbn.l@L(`$gh%8iU6lWV8DkL&NNjr%Nf(j/]Qp4*(uWB;,l]-@[oXjH'RJTj777,/R]s074";:I
6/WatO/F,i%Z8;*&9nFKZ1cS<<oE?Z:JO46*>D3KMnhD(NjXoP$,!qqEq9Fj?BNHFmNqArMIhrBf+61/
Dl\]L4FstC/>_d*^cNs=KTO"(.j?q@CD]].DkhPL`rt6bANXk%^tUB6K[@2p&9o-_ZM)\=]4Wo'%kf,&
6/_,Ec&CdkG6`aEJ=$)G#I*V;T0nCc6tC*@]U^7h.J1WF^f+7Q':'DYHUT_2]iTZ(2\A*`R,#?X>9iW:
722%'GWS@U.1!Sgg6b!V<o@g/;<aI`gFFa4Y7Z!u78u<+F;"^O;,hG)^tU=g2m3j=WZmlTe.$i=^fqOP
l'T9@.A@\Hh2i53m:]P>ZBND/>i;T=BH`1,i9_5DVpN+`s%)(MMTXTLhX/&hG`1SP'Y\cqa_o@]ipmcd
hF;L1$I.ml^fqP?VpN)*asQk`ipmfKf.V]a.]U'EJ[\WY3JDB!s1?"s^^:ud9Tr-QhGuA5-.)=UHm\=u
7C9RHY:mOXi6@.ZFK?"k$G9A]<1^rChHSniMIscK;>KN&n.s!.&F/5^!cM+EDVj!Mq:`luqDKM7Mp'@\
"eMI0gq<@8aU>aaOh#`=:K:X+Tg#"pn.s!.&/l>='R6rn=u*6"1-u%\;.Q7boeipj?J[hQG]A!9h,(j1
n4(As3[X>SMCb[p[BJG2D]0QI]Vq^&G8%W9pY$)n?<#D$]A>OH#eX<&jV7QeK#!ijRA\C@*JM9J'q(sB
n.\<W;]+NB!cLtI3<au3.Q05h&U:?#X$2tqn1"QIYLqXCHA$M.9a;%Z2E.f\N+7Dt.&uOq?/Nm7]NJ*K
6dr(S4<&k'.lK?T4%B5krk7unG?t]Of\F,gRRnmr7`FNP/atq_?8GQ*Z"<O<I!F9H?E`!D"bER"[Y3"p
c4bGT@e1;FZ(%q7*N?r1(RM$RVXjpsYLr.>L'_1W^`+!>P&]<Jc4bH9,+B`4Vt1$tYLjIS;`[_4onq&>
)`'e^Y?)=*RlA0qGM0_riT7>TH"0<7i:VuP;\42Sin>lj=#o.,^!$D/$*T31;\42S,$Qh*RjN@d]O%iX
D,(bWqCY.n`O.IGY?^#1MU"`l_Adq0]_I@BQc\Fm0>=1*3N4.j,0]1$X60c$pp,0d;W7NEc7U>4GgY(?
9lksj?5I$.Djk:dh7Rc5ORV9$'Em9ek__9rBdNnbMm-l9N_9bm#i3.-RRq_pJt!q#Mf*jmYSGFXT?"j-
ccqs>dK6WH']-Rm!@`RYX,,%kmp6'6;BDBuf.BjRa2<fg+k-k38J-7U!cM+e$))X58U'b5iF0UHI,>$(
c-kNf?1op:GgWYQZ"AXl?@:G=H(%;PnD^MG>;AMH0=i#f)gHS(OTU7QT<Yr&o,\Dq^)96e]Na!($kHZl
1PF=am,R'D2a_9'`<s9A9#m0$m*jonnTbIW3cCVTFcXCl=%8NT:ssVbLKDFWjsfe;?*dDd0kef;4WRj^
5'jgNe'EabUQ=7;]MUE[kSnd8qlUkX]GQ(h2'[53b&P86Mf0=@26$(aGS+QZPdpA'iC14XA(TVE^`*tr
.TYKPMU9WF5&f3QhabSBd8QF@U)ET:GVOLOh+QZ8MD:UP.M(=0iPi9``u\Q1hh=FM(SdnT..D+[A3)Pl
0mX2,OnEC4nP/Hji%7[lam`b5#k^[<En=*A(T!VQ_u$_:5J-C$iPGEd^'D#kGk6>J).&7.U&LpU[Wh&k
r.2\BdES0=NBYXi9AKdW0>;7/s26L+n&b'.o[+J"rNQ%WDDOa@DsfMjrQRPD?5mB4:P&9:=l&oGK`s-H
-!7`5_X^T.he`].?A+4op<!PF(Z>kYUDe^8%<gLHpH;@&$G8oXoNm5\ZeTcTYi*L0Tu*m7i5M(@SWl>Z
?CYoiUo2+gE3[D_e\g?7lK4'=GYu%tU[!WPMq1hjolPHKH4&Ji$u4@PqCN$_?A."E=afs8qd=[=m@1"e
-p;=:$STY%m&[I0XF2S234!n:k4q<hKpVVL#J+MlIs'Wp6\6-9`6(NXcHI4B'"fVCDAPGU?IWka(#E;?
s.O56S9n3@$!u,QJd,QWb5^]*qU_oXCSI-J*X`9\I/E'*3l64a`9[d6">@W?o2Hag[82Aj\#8_LpY#O3
"-:!*#make#pIPKWDA0@nU1oX3j*K",^==@GoCqhKAa`9k%W`oqos3lQ3ari=/B%<]R!>rMqcM*_)jKe
ADos_[+X]QJBFJc060!I$Z@q+rpHgZ)d_TCSedp'a@DZ*_%P]:gDfD8eOk0])I=;jRs,4C9H.<fSq7_a
UO%-0_XO9Pg?\h/b(S_B4?%3*.D.]MG`fU`>'R.VY=TO:Pfol&.PsNd"s/9"3>d!</sE:b5D.!`&0;7m
aKp.'GjN'$"p6OLC`W^#q^1==^l.$nlZDm9Ki]Q.06T:Xe(t$>?C`X[f\JXi]I%'3EP$KlL)7Om#CtF'
$86]a%ffE&()I,Wn)O9dS>:"&4*Z%Fn7(2FE2+euMr)^2^ag%O(O=!%(#EChV[G.u+2-5#W=OOrpY<FL
l0onkd4Oic+7iqpQ\N=,dtANa\TIiX*XaXpEbQXYArA\iGTYi;i2-asMa!4$A9cK,=S,fumbh)Z_M^Un
!eZi:_%QLb<P>bD<iYYpADouGk+0A)I]!N+r]GM)h;)Cg=8tl0hV7cf39goYokO]OWA*7!T1=Ad]]etN
5^5l'[ol/g.=g>68]"u@ikJh3Gb*tK/d_\%qtulZ"bOdr0]5B,0&?:"RHC\g-9YXZn[j(mKbo6LZsdNp
V1tg?'jgg;==_#b>I*a-?b*2gA)W^CqrjsIMH&OLBu:n0]S,64+(3JJFPEeGB!Upc:W5L7?M(Ynh)W,1
;0_Vt96XE]"1D1f`Et7RS\r(6EsW!+a7h_Vl`'@d8B%1;e':=#^*`k/dAdlL'_LnKo\h*X8%6A$XYFZM
]^n#V:Pi*RH1X;In2^L<!Up`CUKc^MT<:p(?35Cor=[RObH"NpQ\(]>K@aT`'8>&8i9$TH]4>R\!+(k@
S#9Pg=Fk\<EhWTM9>X1`K6KoR4TK^u\9TIkpc$.T'`boAV_n.R_rKX3VH3ceU0i([O;?[cgFQ9W(]De?
KC&*u<8j[8MUcXGYeY$]M8Dnn8olWn]V!*uYt;f*U"6n5^f*0a:D-t@[I0Sojn@coV,6L74V_91[I0U$
Md"G[QU7g$pKVql"BZ]P0855iSY7\-!Us!CNYtId;MUT.J48BbXN/2)qn<4<l0C*g+7mndY\7)e:**^[
[:<6^5PdW5P46nu*AbL#;aPW4n<+']fNR.X@D.R5i?^4nbHO2*$Em&8?Bn!176cn[p$/eTAmjCI)n_f\
Io:r$-;f56"u"A]kotraMfm6:GG7\.%!ZJ]nOb#eFp]nIad$QC=AIg$3NY<(kh'D(H+jA%BijFui$GoP
6mA=!_rC*@_b279Fp]nE'p.];U1:+jP$Bt!Om&/5T"=4E"V7SNG_ni/cJdjk_Fl.8p.T^f7)tl*09PJN
3P6P-GTY7U^nXhD1I68b7*!#r=/Pe/g@.uHYWNV+)?H-W]XR%,l7QE-_+Q)injn"^e;c[*hBg\Q5#e&g
X3uW%,SD+ZDg;C;>Wo@RV%Oeq,eR*N@h4:fnTt@CH6Bk2U1=$/9iQ@[Eq#6KN]dt\.cj/IG[9%m&dbf+
2`+)F?8Bn_"$EF7Cm(h?9-u^n7!QfV=M"D=?@0L9oa<F@!6[C8.jXV/oK[ZC7)p>S0:`*$^l)@lXb9T,
QVMWri5Me\_+Q/_q*92h7)p>S0:h<o!FD*H]QBlX%tp9EJE;@OdL!-[a1UfT?LqH%i:.']O4-8_#qqtP
Mdae2%D83N'+gf*'(XGPn:'d(_WDs9KU7d]%YiRgda-M%pk2]p&+=1KQMho^9Gd@00:;eJ\E2iN+#9^O
qLk23J-?9uqu^#6_C*!L!\B)&`=DAU<j1=,]S$>;/J)6jn_36u#qq9T%gPDZI;Q@^`Fc"S4;Jgc69W-M
L\VaUHg;8MRo"4N$;YB#rHsi]c-c+gY=U-'Aq8M"iUnA@P3nt9$d[_LR:R6,%e+ea(#*]d&RM">]Z(.o
[85N53GR1d4cf)1MN/S4eN8"MhrYh88'`Em183p!@G?GIhFm\C4]jF4+5A*R96MWQ,Qk\oK_JW!Is8Sa
PQJL>U14CPjTt<<s'?-So*""5l,,#@GhN"A3V8t)f3n%^?KU_9bVHsQfrY^c*2jSY^e6)k@b<#UZ<,Tf
>,23QV=Gi5]OHUSJ'o2UPCr03?:rU"4hRWM/RJ6T+BTrkceGk\V1k8>n>6e;gt!_OGU_1'l/B>"n3/C)
o`m.Hkh$aHg+-TV.7M;L>K//^VKVd(%@.OJ<W0a,.6=?`XB?G4ZJc=26L`D0Yit'=TC=N5kg)H;^RY;m
oo@1=o7pEFn59Ut(j=X4O1X<(^#/!$J++(#5;L(0.j]FYDqAUQ_r)gU*<X/o&q]<4dMM+Un<2HbDpZD[
V6`()0.]5WWsUs)))c9eBn7(I5-IR-^]K0jpD.rLl2I4;Wnu[!.0Whhn9E!!Dt&pINe-0Z%M^&DA\KdF
JY;LWLC.thOpZ&$e[/sEe<lB[%:2r[Z0/t#pq$)$ddQqB="<^f$>k7NI/r_."^Y*7A']do;J6^L0,87Y
XlpT=?5e9!>1#'U(UFNS`pT&u]Ta1kl^e;6XjEqZ^YbS[#u%6R/[g!E]VGo7Sd4`Ol,o@VC%+<XY'c(f
nFi^.7!XBN=D/?RDi"dd+-rsRJsTSQo4d]W$>mZ=IE&aG=K^oq?=KU&_e./?/^)&O%55!M(`$HW@C`DR
A!(3s]Udd0]8[b9>#h&*G]D&08?;4j!H3?tj.<<5V\NTj_tu=jjLM9<G_nl0i:$pq]87Qba3TGm&e&*5
"ME6Y@rQYp[Q<\&?>7YumP+,oh]GkJn5>1)6/gqc=C4P2`cPtC0uN^1#N__k=[]s,_GfD.j,E-12oS=%
\(EucGi(fJ/N2et?=JV<@!H7tH=Ioi?:(WF2PKVp*DZV*aER/H/[U@dpPO@u][T9;:_RAGn,:.F<BotN
$Z/5h2/0l'Ge*6B1@.&JcjZ!"Z<lH8(EJ.FCKX`BncLPQ_ET`e/cg2gm>''s%'LN+ECD8Y*f%Q#8p-%#
B6f&p>]^A_Y>VjNE0e<"&/\^e5J6&DRp^KCZG27.4MaZAZjDK=ECS"H^e6;e$")C7BCsUM^e6;eWS_ht
Vh3=@'6l'[_lFV;"[DKS$Z.*G[>ag:06f[`HD09dqE^20Z9I1m(RN.Wj.+oe#@:le0ap0>q1+f:amG;M
-!.LRhlQX"q1+gcSE>UC9.W+.gr,+V52[_'g3aOGj?f=;04m?Q??2aa-c&G.[.thha\><]m_Hgp&+Ga_
g(\d/lT*d5HI9"d7sb'BX9X!l(&g?&??1aL:P+qcAgY3_">@CeU=\ZjnBq]K4:#8>55K?Y,oC"jm^14k
0CWkok1+bd]_'@-*X".,BsHKhi$B1Iq83%(\Es1`&r_i6#@<#00nC.I@,%LK?hX1D-5bHa'"mT)CL4-`
^rlm&gLY<<@WKXLG0b`+@VA]u`N5uQ9<`U+8at.9D*A/1MK.kc_+QGgq&"?*`haaZ0?)<#KA`RBg3aIE
m-[MQYG]0/0eWEYkNB-p?SK<Z>CdTuMMJu?0sp`jGY,oOT)p[f\?s&0=bWJmmG78pN(ZA??@nlqVnbrD
Xj(2J1Z0Psg3a7?'ME<c"#%Wn9n=+g*We"6P1unM9/AX&&9qmn=9MsSH3V#=ULT@9QXY('1%8)"Nchn)
8+L8:BneMf!\_gFk%!=\pKm>14Tf#R<L[:WaUAi-*-qh%,c`hq!\_g.oOHg-m_.OAH3Ckp=1R_k#^AqD
-I=mY?D=.<<oCrtB>@.sZmkJgehc51)OG>)4d5WW9=*^Q1%;JQYBQ2%!ADjIjtkpA)BESr?G(SPb=a_"
q%.dbL,L+S0@dT),N'jdg(\cdlQPb\$uLIPq$A%s$Em&X3qaT;*rmtA\F_T8,oYKb#.uco'+fCclQPcS
G@'\q24bl3>N$l30Du0$WQ(bV!AE!MVSJ*mo`O-K)VPmM1$]/8&hUYB$G82_Ru`)dC0^W4<+]I>HRHI*
j3j!=QYLV9i5Md1_#)o3[2\cAG_t!E56>/sEG9t?ZQ9*"fspYjhV64rDhOHnB_)Q"Opu78]U8?lGfb[u
"^]E!!5)k&dSGC[C<>j1i4\TkfW?Vd`Vj\-QY^@,!V"NsN]dAKU:[W%8fqB6]<Cl?GS)HSGZD%hBn7),
dYCmN)j_=b0e7ZsM(VZ\lO!'dgTG\*dYF0,B_)8odLC&j&$H^mr7AXJ63?V-leZb-JTnqQn%)?48VO>k
mH;%^O$Un*9/ro45.lR/dSGC[ChPVQGj1OL4oep+ETnjdbO2skm7JF+](OKYGb,?.gYep>b&+<e_#)o0
WS<\c\!_2c-$a_A(VBG%\Y&3E"Y\].+M&r99/eo_jbXp-WU@JY.!9b`LGf6bf3ITt$+pYQ_L$]r?$Dim
6^urk[BJ2YoMQ09HA=Gb]?VZ9GSb%F=&&0:)tjoIQhKh0/aP)/R?CjM\<l*=\$3Kg-;6EPm2'*8_RjR0
'6k=,J6/oC0'^-6N_B8'Vm*e3JYZOklPEkjROVCU9=a-70>)>rcS+o*dTp4kQVVkF"L#Bh`fbFWdjr*/
ocrpp>V#;WndFo!1%^gaH0Io@V*2`>MSW340D!W8PXCq3iI+1?j^mqEN_B7,=FTtr5%BE?.X:DTc5VMN
_A`p.cPS"@#%#_LL!H"ugV^'U'>4%Ei+CE29s=&tDM$JG#k*r*"sRCdL_\cc(Djn\4"d'`]VOki6\1S2
">B/PFRnp!N_9TYY7PpmK`SBi#[Z5)l..Z'qJ(7(a/*!IO6.3aFV29nP7#FLbH<gA+A*V[g.@":iM@Q]
:)mT_Mm.j;mumQ=4/n<"]YrjYBu<S+/hQQ:<]KTOn>6j0D5Iaqjn5I^OPj\O>U8RDF?o?P='S/O?)!hH
V&Yg3#i=`rMkhBI$jBrdn-B@+hA$hu4"fn@?8]=A`AQLodYk=8]VlPR]Shp[=.D,b"Tn.]SL`F$6^sdb
]>i)/GSb)!2D9`MGZ#[bGX&g`2W[XqW=TQP/$:&b0%-WO]Vp<Q4<sKPk:(MbK6PE^PkIe):uKmUgdU3o
Kg=Qrf*%0KO%T]XY90(QCBDRk0>c.u2BflJ-jH)a;BZTr(W@L1O%Y6/n#A'Bg;WJ'_#&,>1S&cqHQ_f1
Z3gcl<EdQg5$(Is8j+dI!kc]W#Cc`dbg2!P)aRbM'<0$K6\0GY>WV9!Agm.$Z0;GK<SG:$U4Z*%0)Ze,
1-ZT3DgqK?^I0770%(ft"lFCd8VM-A?!ssC;bn6lJq8,sX-\-1_)o;Pqa5hU0_M5.#k4_98,<&,e3f]+
_##iF5OL$I+.'^AHK8<\]_W7R6/Z#q(#CfP=!f#U%\qbu\$4r-&V5.o2Xm^sh"8PZ<9QZ"f3A>0oj[Yl
i3cWGHH@NL!e<3dO"9oE9g5Nf&j5SW:>fET/\LY+&51a#o(V\cDs/dR$UQDdB7rU&='kq\q4p>*n=!#.
I@/=tRKA&l>lZPRct6,D5-,Pk5;!rb]UU!KqOu0,i4W8H+RlP_%UQs]0DT)O&E&OVOG^a+XHO03"pOJ?
H@b_KdU.6;58V$7?L"6/!9!gEmXlHbqJkbQiM@XM$io/Qkro4k>#iH/Gg@2!r56.HgIsi2+Rii@..A-u
Gc<?Ge-WddFjXZTJ.%E&k,HDfn/dZ'$38pO/Pk;1H/\;6%'Sb&9KsXEPV0W@B.AQ7D]J@$J<tXE03rf5
a9VqLDs]H.c_#Ya+^K?707VIt%523S?\f%"?GSEu4Wp`nL%k+ZiUKF@(bF,Fn[(Q4GNFP!++&5af.>,;
B.=#fDfD^lY$%&$LeE(:oC@%J)jjW1ZRd10g'e0l1VkTOAt0.>.ka$a:uM9jJ*0BV4<^[8!5'VMf>DC7
(@"\DQgI'>_>E%_1LrMibpR%TJq7!an>b+/QGqX,6;esPGhI1#"ikTTKVUq*nG4*gj!#3K]_(74_8**@
Gkl+lpHHm#(O29QGl48Nqg<ncAk'u&/#9rX;&9qZrl;Bu/FoBi4t?0mG(2iM,=_J]\t(d_(m>9n?tNe*
ZP_70s-)i%SHA7PmGJ`.\spGr>S=^I(U$ilqY)?_'nV"'%io7<_#p2&`G;7AL&:u!YlMeVD"p#F<U.]Z
"2i;h#'s&ND0gsrol]X]@ZBu$_2C\4YCksIpEB#iSh</)R(i!#KNLt<?u\aI]:%=simIkCS(HDBG;HlM
fPGZr-9"<M?$kQ#a4+-:2m:08/+i=cLS9,_>WN"4mr%h5-?ot*?DV9np:nj>i;'tRpu=4WJD-h*imRqe
);,I[_#kGolb(,Na&-Tok,n,:VoKb0%B"M?7OSOeYCAHQFqZu/AD/`q%Jom^Ud>pfH@>WsF"f]a]Dh"a
,Sbo^2d5oJeb&b*BIg`&!q5+V&-"O[=4\nj1AeoTL=MpobWl-^VB^LR,,l+^]P3B"\H0G3#Oa^q;>L'd
^O*rFh;QI3]Qur<?/T;F@iL]hC7/nNLX.8j*L8h*>JBRb2^l<J\UVBn]b,KJ?+BoI@5gLT_HR,jqZ,cN
Y425T3'@"j[hp"S<1t2$btD!:Q-]FeJToFoqg\/gKa%ZuD0VKt8n$eLTYc4<;.r5NAo?]dpVaKrUnTR$
A`MZ[Gh2GjSSNIHDJYT[.>T]s[QA404Hm$*C[P3uDDbN"!H2j%&9pjcH^ilS5A&7mI$G'JnB.I%>Adl(
B3P@Kf@+J64f7-/$a9GDrW[%]F2P>X.BM??6LkP'.fd68R/C&]>sG1CN"$i$iQY(MrH)is(VI<11qc)Q
ZFLSS.C,7@K)C/]+jNDZnE-t;gOASa+[MF0i/OkX#d:N1kHe?-#UUPq"g9q==2LEUgd"*rgP\Ba)(_]T
J<@#QT&D6B-o?1@rhg(Ze8(ZP!4,CgHG:=4]F&=@2Qrb7'C<uBi'BHBqXpnC=J`9<&+?q;Ck+HLh6:f@
3:,0k1FX@VSDM+u#<Vk0n$oS3hHVOI.%)Z\<_,GRTmAtC>(u_IQc0?p"Z(r7%rD:?]:$#:E#)K!F6%&b
s*=9k%Ig[^VR5jNCN0h?'oMX9dgNh?:02p]*P?9@pX-WUJF@9@?sBNnkfrVf4hRg[[fP@SnRatR(N]'o
2KZQJqOV"W(EOQ=D;.FqX.\UtI!kc+b6[RhmOkDMK;\CF9/qlAKo*`"Q3!S[h16YhU($O?NBaeRJc#"\
B:H9GRlrn*_?uq$0!'acmBWC#@&&MVL7Gh\dXm<[/GX'?c#f]gLC>cI@^Ih2f,]03=Klh#a0rBMW;=B[
%sV.dHWGA0,I)dnR`c%!W=O;5Eo9HY+t^HJ=u,aVY=1QHbm_-RI*as-GM/?lKm12p395KQVd>ZRWil7"
!U,3mF\PX>Dd5N0dBp+jEAR984POIq@B-SaHX5:kB]7K/j3k_Y1#9XNr)%fTa7!<1b3?s]q-U$aX.AM<
U+>R/3%hgG+.no=dgN6m=68&iIfS1Z1?Ef]8*aM8l?BW)RVC<]p\ojR1]FQ#+-dXc*T!VDo_Wk4E(J/I
H=(],/\H)&C!@Qh"f;N3iMA[#WUBT][C,21`a7-2)rkGI!FC]K23hEaPOP6CN-LunC[Ia#g[t.-o%mG-
mYOc8qJRYlJ)R'f=\?T\I50>34[$HPD^`Yn<k004m8>]37C%Q;dd[66oC=pb??1&7/U]JA6g(D[:`<P`
=h!j(bHPUDOQJK,&`GR`bDmO11cVO;iEW3oZ0W8*dcpB5FQqc7g4ojn-u?KNA1a+DiOt4hR6/t1s4-f3
`e[F!qeLatrgO?O'"(i-aOoBRhDDnlj1i5JT"`nk2t1_C'j"P]IPnSalP!RV#=Y!&li4'HKH0P@##BNl
OR6-4.g`3DikN2.?EP/TCRieZJQF45DU&^[A44MBl8K1A$I+oCS3CF%D0@^LP;G4>(qaS4j*u:_n6/O2
6als\<\u7oRpZc>]Z=50_!<)Bp\$6LnclP7R1osrRfsL4$Q'a11;U$jVelALglOJ=&Q4*OcJ4r-RfD`e
:Ut/c1Vl/Q!-IXu1N.0>^;eXlWB%Pa/Wnhg]uJo^_o)=#]*0;*1H-*p&hk]H]VOEf_a?Hl#C&[PQ+*gk
#(VIYrW*B8&*YJ^VIl-nR@D_^O?lp".'Kj6_=2L3`HUh:eBH1f`IksAY37g<n60q?hp(S)'=1g+eaj!I
_ieBRDaND?fHK];5n&*fi$qdb%0Z-WIM3'l7QLlHGXYd:1<"A<_7QH!KYg+&2`U/B?R>r[;BfGOjf:#<
2kf^JCp/&5=!qQsk"<i##4I.m'+-D5IeAKmV'[L0F0bp($ske1VgJQ_CXGpP]nb3G&7Y.+;XFUJ"g2&!
a#AS=n-/.NTmtB%1,m`io/iauN[`Tc4WqBMIGO`bW^nMK=Y&VA(`kT5FtOn"I#G0<n.IK8a'NidJC"J:
F7)=)#-Z#C.+J?A6K[E'm5;`L9("tU#*1I=]KFt]RuFo2CjJf04SCZ)@.;NLhR)A$<lm`gGO)FuiN]S[
#D5N[n&O+0l'RsNioGMf5_0WnK,t;)6O:kLQ4-I+g`1[cPo(?EboGRC_4s]pd<MgnKVkeUN#<&-Hf9`%
Rm?I8_DO4?W^J<[nt!Z&LPL)?mAGTL.4;KG%AtNb?fAD.5]CuC.&0cbGVB!(IRkr1anQ4fC\N7mi@u./
6f:h5(Yu*4RPO4HFi`qmi"`=/$NqM^MN;@=q`%duH(G#Dmklih.+X%4Ck27Z"RfM%Y=cXYWt4`3"MBK>
9o$NZ[.RouB_Z'=No"d$7ZP:#3p8lfjb+!_P7$.8gr8_4P_\]LdIMMe4U=0-IB/(RV;NjD"-aXIXFhPo
*be7;0r`MMO5F$;O)\J74OuC^!:WTQ2F%eVLu28np6mCSXDU'!?:!iBoK.RLi%*m/D]`JnYc^M!J4Fod
oUACjmjmVQ1I8k;ZrkW425FW[*aTMnYFqA^Lk8\_=tJk+C=:Z)nCm)i6FqOo$6H+7IL_ELYNRp-RT<jV
=PC03;=HR$oQ,7;BnS?/.O'*/ZtoX"i)0&\#+`XVfdjXmcu?P:*PM%-j^I*_Un1802eR'%/NdTqpI:c+
+<?'^]jMLJAhdoH:Z9^f'l?iW4BmP(=Z@<>Ku5j1K?"g=3JBu0<t9;)-8fd)HMUX7E8;k9`Gu<h+PA:!
N)1>(UGk.>n,6UUn7^^X:8dT%;Cq5q7qblWNh0ZX&EH?]fZ_SrGf5:kobjGUE_"H[eh;@3,1jV[#*0N>
e'&Dm'Xa]K=MbFP:UcW=9kWrDodcR^,Ld1l55<S1U-`d6@(W:fCZ%F08'2&W<fL%\(UKm7mkrM^9!3aF
$sl]@:gl[)F&L)d$5E1Q@[gqT!j<o)"8'.V/oG$i1*fc&nCSL63J#cn/L)LQR!f-:@#H^kMJ)98JO_S5
p$'+q&Qf"oqCb3?fl'm41j5D)UH4Y%INad'="m?'`P\aE\t9X\e520n:qXM/AI(ofiGm+b4+WaIm#0GB
F7K)6V'31%LW;:(m0"JMa>9[a]&EI]S1t!YL<'WA*nRt?G'MNUhAS2_3a,&"<"D<G=7CSDG'HuI`0AR5
,'NU;[E\o"--qocLIYVO^m*.1,'NV&X$GW.:rW#Pf\o]&E#*]G3dTr*+oHQ&1tTt^O(`?YT.KSBZ"EXP
eI-VH/W[)CLI\b09$;H!Bh#9\QTu10-_=k['coAeC/!e"Y=/cD1<4nF05'ei:>q>\C/!f5_mf+^S^ahM
F(6B/j"WKpnAsoi):Nlei96S9$s/1*d-qYh*fmjGKh$SU2!["OC8)-A1mVlL!XBcfdg@b+"p3!dTu#07
0Z6jnVJM?k")pXeXmjCT39s<A;8TZa0VJ&g/EWf=*rYW5p'H#'nZgkIY=F.6maP4hi/s!nHaKu40L"&i
lkL-q(3@q/O),H"_2Btb@N4l/n5tk<2L+<B:t#QNl&lX)l.3NS-l?(1bnG?/I^u^MY9JX4N_4LPGV%6:
)a(DpA;=5V=N-HX^'dgDaPeXOi6dNYdfcjO9me+Mf&EErf[_Aa%,ZX?*ka'#'OF6jY;b.4,*UrM%,ZX?
*^0L7SDZ7Q_@VWR0.#&u`%buD!fuc,f\puC<O#Zn'cK2p<IZUikWo3n-;`G1`s0jd.m:X>J]CX2@t@.B
^ffA#S`iBk-Zcn6+,@[60Z.taT\#JAlE;'E]Z0qNcot4mmOO[`3D9H9JQKf++04a''CFg6eGWV1;86UF
3j4GQhT=Pjg;dVM#;O,skiU76`o2&VnZgmK*)d6/SK0jL]RkV'P>BZG(*Bm;.n"Uj.s[QA3E2n&#-U%l
]4hIBlgEu)iR*Y0Z^DVHAAQNsl+odJff^cpK]fRM_<J=paF]oCa]Cc]k?dn$K]c`Zg+u'$F<sJsa]Cc]
k?dn$K1G<lRklsb`Q(a?'e2=i8'_Ie+mNpj#^*Dg40r"Eeg?$Q@"d^)D`WRg=)dbQm6!Ela3hd1cXFp)
j'nM$7AC3pSCoDlGjZ6XNURnrfopMaCaDV"_(d]-pS<lWT$*O=Zh"C?<J"c+U(;/b53C.NSdCu]Rm+s5
7TP+_^31P<Smr"9K'+nXT#,8Qo$YjN?_bJZcKL\S\J-unV"5d_=.V;].QlnZ58-/G';))l]"$a0`TcS^
L$)_>B7f<pUefEa?!Qp);gX3,ce6]%_/gJfcTb)k+Vqj[qG_^bNh-8XlX7_9QMd5;`tMp]ca,.OYKGPG
1VdcGc3m`F/YX\?eTi6)r\1L8ScPEU4YHeA7.IPQr#9f-e8fX&%.ILOl0VD"kL3AUI^];59LFHq@`=r$
@\]qF"4W<oiK]F0\cJBil'QV,`oSeW"?0Q#E[J;e.i#U\DAqHD\9S(!n^NU#N(l>qf6"(pSr9(N>AS@Y
4S<1aA!7DK[<,=XccH8Lc,Fi<`Q-8]O*ZrI\^"1(_fL,LCb)@-MC(LkRA<B/k8:;I_fP+%:NNdHJ(Kgu
K.Oc,G?Q#>'mb+"Arpl+eFbtE^cRsP2p);qPKTbWk>Y?H"5oH,7&D-IVF.iW\/:GOSjVaEhp]56hburV
R0Ef7d/0UhWn^i+4ZoY-$4+:*P2I[#q)(2qa!I4_n6?SmrP>,T2oPh/Zm#\pT&Y,`QbY\4;\M`A'/\$p
%aT-TSednj2@meR&pUX+D@U$>><5dmc`+DU`!+Z"qA1D:joj#T9@q%%g7T!6S4*L_"LSXC!,c,S$/V/!
7[Pb?7q<OH>c\#i[upeE4=<)6ZLOW_3$QhU72;>Epb$'k(7nHN*g"\5?sso@!j:JCd!FKQdTUlj<DAR6
:aD0;i1^Pghj3#])]_&MH9t.l.$DY.E)?dbCst*hXb5e;aU?2r704"0eh>iNG9$L&nD%dB@IU!^.ff;j
E.R1/I-BM!'fDQ-cC<Z*6!=<!JsQj-V]JA6c`N]K"ttk(&9%e+2g?r"PkKb_n8,^;Y)6Z4:$>&K0(>BW
+<<SR.dYW0Z%HN,#sic@Fg*d[*b$-P[nuhp]\$OF'YM=-Rr7_c^'>*0a!;>"c]'(q"Pq&@&`/:jYQg\/
*A<@D$jH+Hj^MNR3IMDVG]"8gTL=)?3?dnK"GHq?V\"ajSsu2SR++74/bkhIGh5q3GYTCt%6QR.%gXh?
KH>BK=@[TG'+6Ykiab[^k/@f;5G8>=`QSX[970D8ccs]:b_r$pOuZe/%Y8gYF+WQf@aVu4>GD1aMiAm^
!8]K_&Y;?%`SiJ1DVjV5\!+[a#FQ\ka9eG2(!@2\j17@W7!\tr+o%A6:@MMg=L@QQLRWjko--^U^iqPX
K'*bU3Poheg;Lc74>L2p6bKSkhUH%rn/RelLSaSdJ-XuNbR'k6$.9EW>;d"ZcKfC0E-Pc#dg_nl_QcUU
Nf3);1-uSK'ln8WE.[6c@QD;H>`'!u0DNUFHm>_3i41HAH+qMiEh0\_FfnaQT,m8&cXGeb"$G2s=2>t=
E-R1!MJho'iaY#o:8&1$]ZfIu<t"FF35T_b5ruf&>g*VF&INuq!b0,G2g>frdfH'#14jIiJHn+G.uq3X
,FdKoG`M+$^tlK8i?:<12g>i*@iBSe[fXgn3n=XF0>paFDX\W4/-gE[)\YQeH(h,N0WUVO_/fmeB](n!
V\jY%V\LndR=k[gd0PE&o0Ub0@@"BHKBEeT3P]]A3B%OpR-!]UiR("DH[)^*UVYoC4k0\AMchb'*:rBe
Pu:,+4k0\,;fII]2\GfR*#B1iVt37$$,LZihs\o,*dL\Dh=$BIGCH1:2t3A(:GkH!'V+.0_]jGPXuiFE
ds6Klo\e7iSMNBSHu'>>EQMr8]XQ@dXqYUe1Il]^qQW2rgsH<oYR_TmC)8ZrGkCOd#g^cm6G^j8/p4!e
]9kUqUN]"NG`I&kGXa+JW@"RgWnlWFZm0ea>/pUN#%#A2+k6)VNpu7<cjlYJO.HV>g^<;KnAsSL*B[CF
*M1Qo7+,rhDM<16GiYci*?N)7%QC):g[Ec0*r1`H_/g'i^sdS%9bMlR6k0*g^iQSb6,F!f-\U50[r`&,
P.q9GGjm'r[Z\-:@<)_CnAntT%\D]uHmj4Vj5sr^EXEfULgTugSnikQ6?G0F:@^a5'\qZ0^PEmm`rJaV
n5)-!^:SF"*::Nn4P'Q@G[B`Y0rJem-_.*m%$-nugVS"@YTOSC+i?\/'\p;pEb'J(cdbMj/os*(gh\N^
>.uLLEcPt(cdbNUjC147ZDnt!S<iUPc^8)8%jr1Mr8tF@;$W^04"+WaR($E,Y<9(9\*tAMR3:J)Mj8/q
ZCHFGSp#qgIpXSH[5,We*?QstPdfre:S1\O\'9;'9rBR*a!j>^)[(50Yjdb2/d"5\p"GP!XZ:4V3NPn.
>n@)Kj&b"bXLIL(:RbC0c2*fggE#57ULV_tR*tbVL%TV[iTZM8eH4'E0,o/=ZV415TlAt!]j1he`t#.P
i0h@.%6V+J'K[kY;!T7.hQAXs9j45sfNC\<%6WeR9,d<(-3(-Q9jNR(D0QhSAIn7iF;OFlZ1rP#-Z$mh
-75\A1!87b'H)td_fNEt/A*Zp=Kj+O(Vgu:c/0@_c3p$!i8H`Mqh.[Y3l=#`$HHKEh:d:2%6WeR$RQZ/
C_7%9WEJf0b=?ee$[`mHXT%2t?i_o74Xs9QkbP(;]L+G$T:0##FnBkH*;_Ha,!FR)"jd_m#JBg1%mS,-
Z`MR!%6Wg-pi*orTLCEqUuiumZ8&=\+Q-gK2j"5*FR?(i]L/bLs"QMbV(KWkJ`f/O&XCWL[>4ul]?1.m
f=HjsdkarjiOR8I:BDTKG1@Vi+kBVA-@!d`n8Q]iTG:#]g/SW-a%IW83NnBnR9J8o<-T;K!-`\!=ORPZ
Ku.m@D;sNfSZ[0nnGSD04IsMS'nb2f$7\1$g+f])(h=Wi^AeK@So\u^47=OfGkadr"5`R;TC*p/_K1`t
iSe?c(VE*08(\iRY0.H&"Q@*!%X?%F5/Ab"n6BbLd#mH5McfK+Jic)cdtED;>!#3((LS^5s".IZn&KZn
OK7;%3=hZd%<4*5_RJG5:ZjRj%1c[p&0a6R'L`d^LPqnc*R90K[\>0<G_?Db#'_'8D1ZET\onJMm</lI
7!b4NYn3c\ZG8Oap,I<bMa$/6l!_FRX@0r+:Lgul%hEl9&;sWr/($&ddgR?YGjZLk?u+[e/7Kbj.^"L2
.>)TsFrjl^*F^#l+]?,V:G[OZi43d,KngIN.\0sf1VhHJ+KMPN]HIHMqeh(s.Yo55+=JQq$bShKKSAS-
XMV7K&0>DK)Zr4I!4'HthN.fbIJ[RA&/JXc$`0;B"lA2m`kon=DZO^)#eW`t5%oX_4M([@3P^5N:11`q
a6f&VU6L9!^tYJkKkJ-(HMlOj%e/s-0?Gh5J;")sjtXlmF1_b5=qJBa.q52'oij/d4+7hN4NOmAGGcqp
Ga,%R3T(p9$7:#+LsHFS4ZZ&`QT8B9>Ekt5"+]PU*Q+rg4t=&d(/dKq;L#Wh*@EuIl42GLi8l.7oudC)
pe=H@:7M!k_K.??7F"FGYDGDO<C&k!/CI-I4Ri''-?ucVX.64K8atq0Sc"@M+DJCk#J=RBcN<QP4D9H3
>d]D`UcZH*_GV[Sf;KPS`!"C)r`.pfL,SSIWZ/SYMEXUA#7%nOe`;P8Rds_B\SpGa?VJJ9HjmK("]-9!
m72`4j]Q4-pk@n:JCVd<b;>=crgMe8NfZ_TeiMps*lGGJ\&770qBYI)_ujr8j@=GqpIg57EP)>%V@%r\
<ZeZN6qKTliJ'>M*=\2ET%+*Oi40['TrT<+iN`-H[#4l6iE:L`'qX_#i6U=Z\7o<dQR:Em8f[>\3M@%V
[6ZA5guHiX7(US@L[E3hod&)(_6\U/Edb._2fV&EmR2FklA9;:#jiet0Yk#E5mogLWm)$'#)B55p12j&
P-Cu[O1Gmo4]0*&%poM!#4KfTDpl)<AV#'H#n:164^>Y8F"b)Ck@2i>mVEC3jQugl/NA4p][rSC]te\"
(#BG(AFDHk_0Hf@L[<Y0hOg<_6`fe(B5iK9?-\NWYOH_m??N[obm'd**T3t@>i7KC:MX7FSg)miHkps^
3*:I7T8<Wq]a#a/"ugeE_hl+)9siA(_:pjD#p(A/_@W'R-djG0R9;\cL=tE/IL.Rp%["UGT&na)_])X\
Vk-/#:6P:m!q0Obc0t`1k:soOC%/'&*T33q_.hn\UJ10#IE2K9Hu]C^lfIX_/<h^6X9"o8&RW2,$]_O.
4+oR/Gj"2VEP`['*MB"_-t;l0`UM0NGVLbn5hQ4i'jel5D\B)mYD.84TE%>WJ[1[Y*F:fIfs9>$`9Ki>
GWPn4GX'3=fM:%,@9AJE!eS.5fa)N[2i20,MATo6JTif\^Rm&mm=X7(O!,a$YC^_Gp[3O8g7-#l%kiPo
D8Bi^NYp_PRK.c:oEejK(hB<mHcQBZZh]#C:VCS@3\*<oPFE9OEe`11TNoc/B^j"C,g4Y>/oPl,.M1QM
jNG5lT/Buj8_n*N#N"<J.&ORM!'H:#&>A-\cgdI_[5M5--gH^E=2M"T^;:6'o`dOpZYhmU'=EAY8pDoj
*_/\U0_R39j7Ca!^+LRkWR61i0BW(Uk!=ELpGTYdWnZK\`r@l3p*S>L^'``#nV=YfRG]gD<$6Sl#'_.m
nL\m$0Fthp=#%NA_hEkQK4*7;YN-$c;[_flJN#T-Q0$\(iON9b`.8"3S"EH`\9[$"e"IGfqA^PD7Ym4c
AV"LMg^td2`Q\R)H^:WQB[5QkA;!Lk(]AEYnCW?Ae-::L]_3<d6W/JuMfkD[Vnce_(<C&L4Ri&O`>l+h
e2Qs7,D@RLi%[rhV+/M>#A3C*2o<b_p/nkRVh7On*?KGfr?f&ZM[/+QHjg,'\`J0ka4"siVjDG?g\)[E
4A2(P+$<.JQ3eVYaq3W+OK7<!8C$0KXIYa-VREbFA*Gqoq.MC*gFmN#B8JoJn/,1X,sAa0H-I:Q/H$o@
L*C&PPXbOtk[WPUfULreo@cjr<<.8^k%e=Le9L%Eq2M0EQCO#uJ[_f`K#;ZuFU0eO4#_D&jgUBr^.CN+
2=TbFPSsPJn2a[#iA&80l1:^<i9aG,@!E(t+i931?;0kbIa^#49+J0/!71>dGJe4)?a[MZ8M*/9K_JMs
"iFik#Z9PX0ALA.;<(nL7bFS`P%T"J$]blel\GpuDt77``rH$4s4_2XC@9eo&gujbD"%ce4Qgf-);YVp
etI?`GQ1J9j6.C@0.oNIRXbiR[f(>2CNB]@@=f:M-Ot^Zr9MrV]oLeek\>%aB5=k:M>YdL]^58R)?JuS
eJ`BFGcpulIJkcVGal_q%$+hWct2]="2"M_Y't\1n8^KNkKB'h+KY']r%N0?_5jqmKo8.FL'_0TK]bNh
Lq8#03JEr,a_<rdo]L]t\W+l\2U;MEQQD&&??+!QE8Z$FC$_TVq:ENRY4LKj;,2&R>VAgATWCAZ3@/<l
p\N3B3VI>1Q@QOShI5T3);af-G`gr*YP]4"XmQ=`mc>*B/-3]oDdtXGi>m+.@"Us!@F;rETf[_Tq<mnt
LGR]G&0YS9f,3KFQnG`FbVQp!?O:1oGJ^NXrVG42i+^t4bWtS-+_657)64;;qG7(H*&5<?QtA_XOSA8D
XVolSr"$QSht?Jf%D7,,)\.GVLdQiW$/R;BUVIgQj=pWo_fNOKn[%]>_pZuqhLE/On)&Qe@r/2/#6(_c
"IWqKB[(8XnB++*;JH[dM>.*NG^j45\,U2e.3W2>$Us&OnBV6@1W!?hVftS[j40^Z;*TR4cf?2G_ckZ@
G4>,5Deu\o)[QN$8,4`D;aTf/P?i`BrsqILefEWI@JK7Tq?(s29[W1XiGga3#^P@>*8^/S.R3Xenc[9!
WBa.Q0CVYBIf;:G$\$T4q`^kV%f_a\,X;:fr'jqC9MFqr/%kj#hO4!L4Qib,_UJ.'RJjpEo/WhI:T6u-
^@N:`JB-42[d[TR]PRM6m3<d%n7\GBKK!G]6+uBS/\L';p\=d'ri?&kKC=5/5)0Ce(VHm)1rGf,(@-T_
HeZ45a(5@p8T]3FcGoc0VVZ@@#2WbRr/pQ*s8B\qSFYb?*/`(0r4E\fjfjl#qMl/ZbJ(TPW)J&$=/KF#
3BqHbY;l6^s681'Xlg&n?DdXt_#*agbL^0r/H>31,LlH,;f"#`P+qtDKfH>9g$tp.b1F;'n"G6#i&R_,
LfG"tTGHlZ'jc0%GjF6eRD38[Ds;"]j/YBSD7giqB7T`R*-QGJTjth=:E-2QFJ*:ES5.%a9En/#K/`cf
Doe=G1r3+O,$t%=3Ge`W_XBjCQ^\r\_0n.gbtcGjYea81Xng/]2t/_,ie-tK*4>fa&\$.=n7jJ=!qq#O
^uKGM.P8=/UCE2X"-6k[3XOZ/*Nn:'iJi9Gg[MrWGVE@/2sO:*`s&Y)^me@kl@3Utr_N%?Xqr\rj8JC]
`JqJ;]]QTGmM__kRs#_DR1,C`]01S>FpW"(i3ANNTF]_'U]3LNk[qQed.$DZhVKg[*8faT5Bd^Phr>eK
32;hE%;qKlq`_/!`l$PYUNf^UL'QK"IbXWS=*(C6]*R9+hWCa9GpPRp$&cso9t9*iY;Gs+)f:A^j85B.
+/Uc2)e,E,ZCL:FH@klghSKI-flkjuPN6/s@pXUBicWE@bk.Ffe`PK!)lV#Q_?d>)^uMAF5f-IS*HcX1
j[>adD"QM+?-RZ+bmh=/Hm[VD<j.13l8eiEAOh\q9^iAlI`o7a[\CW=n9tg6hAi05\pZ-*lr^81E:>bk
(pV8`LMspnim/(cFk\[<$!t6!pNlek@M,!d3EJM>r7%k1:Aj#p]FoJo2.Q[Ch@f36#-l#AU&Hh51]1Pt
i%`GH8#<SWa8Zr9)`>DmGL6(6on0C$=)\>Uoa)^i+5p3)GRS@%,N/OHb1DuBo7/'uim<A(eGKDcgT-mZ
JkP&sJ",D.aoP3*i:TU0R+TFk*h$BD0jE4imIh8K\I':nEUfm&06Rb4qLtgW3^5Z\Q-jqoZeQ1D8KDfW
q2]F$"AJ;G/\L?F0u7@eOUbu"mCkV/Gj:KLd,-j,S8M]M(%A6Z/Hu2NH0g$o0F)?q3'Edb@lGG&+LcXP
(Vne[.p'Ri<l(`*k4f_tG^i2!Gb#bNSdot6f1fFT>9a=.Eej7-OW345/11Fu5:R31kj($#@fiHh?).'V
`\5@A?GQb?M=0R(@<i8QD]?fhn8sKi=*W4V?bW&X'R*dMnOe%ujU_=iFRV';bC]#?'R%YO35VG?C[8ZE
SLZh*DGs.%bj^'t?e_IUb)U$V%g]gjT\9+7e-HG1`#H&n^H_^WlUnosn;8I'?gAg1f6$N=m[$("`B)qV
f6;oBTcMo]0qMYA.Mos#rm:\s'0PAJ=9%UkccJRV>Y`>Pap%9lrHDh)a&9cpG)E]d^"#?Z_0_fgc)0$)
Gm+GVh"OY^_E2&EAM&9(pRAoZ_/j`pMnn8MQ:(3BQ.b:<7X34F4bL5)OXi(E^rpDHY$uuQ.9b9DB(fL;
n)UWFhiSR7g6%l*0D[Yuk"^0d0L*?oDtPKUcl/@*a:f4+pKk1)Hh4_a=h*DC66.^B4Sk?tb,MM@=N6Z%
Fm&mfG2QC/4dYU[DKtjfQIbVOP:()6Cg,Gus(&jQN.)D#n?/oY>.^X9H)1+r9PKm%>PL1JK'-1[iGDXe
j+1iK$Y9'VF<)WTH5%s%TM]:24dc$&R<oSl4GG<ko-n^\29mr7\n\rHE^+p^]Q_up[Tt=f/#NSS(33Qk
"RT2UJ@?B5)=dKKi/QjdGJ\-skkJbT3iTFBj/KQHfbQBl=iD[[nX-kS@2\RkqU^@M\$+;uat(-jlAq7P
^$-.qFIT<o9KTu$*aX164Hkc:H?f;<K7c[h5hlq3+H,&gK#^bOQ>-B5Hmb4-.L^QOk2J%=Km2)D8'?Eq
rbt/^H+iro1,`>O2`uLJHtB4&FhXgti;Hoq*Q"./>lNt19=VnCn#@[UQL!58U*/A'"%PB-/`D0,K=;aL
[V%T3Gl94cG4CmYh^nM1L\Kh![Oa'c?2(YtO%S67U:I6'i/LaWoGArqahr`^em&$?B#aDZdj3A.L1c8T
#e[8=6#M!-^mef&LVWO>>Bo6`cRB-$@B)A+@(1Lt(HbnfMBT%9!Ui9]q'&QpTg7PLLS+0$B?9*r_Rj=d
Y8l1""Tn-KrhlDH^&-_.1?hlU>8l@JH#dF,nCDN.B!X2.qj:aUYG$O1IaR1j:nt;dDpF@O_-g,P.a1c8
%!@.`i9<o7Y#r=DrZ-[=o$hS#V_l*ai)NjogO@eci>M)PI;9,Xp++*,RiWM29B#\XnFjhfZb$T+e3CT?
@&&D4q]\LS`Y4cu0i\/NhYqgB(0fZ8!kb/j0CYI'FXOih>QokcDcZp#ch3&6l6"m6$CJm"2uEepn1;DY
I'PZ>n6!gk2t1iUPUQ`[]2A],=DrD82p\$+i%`h*'psFtKPki9DsfUD(2)^tZLsR[Z[Y5qL&c.aN@kdu
rh)@3D3sg$J@?t9a\f`H#i4VahJ@/ETdQLN@A^RKj,#CApKmh`NV@o2[+7QoG?@835oQ9d%IiMfa0tIS
$Do\MSO5Vd)"=ie?]^k*c.-Y4i2LWCX_#'trV>/IUJkVFN-Rq^Wl>pHCb<u]s6AQ'fA+s"n1_m`hNmnS
'EUDAmG^I&N:;chQ3j-mj^5:0RYU`h$pHXIG]Su5^BU7e*dCh3!Bd3TToJD(i-dG36Zi?P^sas]mg?6q
i8s14@&WQk5r/"gYC#(8Y?^J#&fk']!M2KW;BS.2)a)<#7V@r)?Eq;@UnNEkVn7WunR:j9=)$X(:0#B%
NY:U9%18a:_@WQBi(]8H=V9s&]h5npQYX#+@T1T:hA^NX\F=*VTJJ:<ZRk6MK(jH!?Fr=l'QtY81PV:4
^>9n"`^Y4[]H>=LMB'KbJ7nYsVQT!$HA6+l2&!:K>59hULO4eh%P^7>]fY/30CALmFbD\>>DeD)VakFg
afEYT8tZ>'/\H"?q8_A'pogPio<4:3#6<(4-bfhF"H;h$o9r1]6N*B0]^O=;X_Wrk8H](?iYdAr]fTES
"E3lSQ%69UXX_lsh"^%T#^Dd!29;_?#J>Ul]8(UA[^TP[F.3hP/#*/rB6/01d-"kjB=#;C+,AI=i=-mB
TX"q-hV7rPaP^lQJbM3Q>NOPlhIdbbPpB#/=6T-gaB3m!]RJ^e]nbc1<FMgLW5)iW^"eN"S7V)65R-CG
n36^p!X$)QIQf39LCOhOlJ2NF:FPRG.n4b/$3@q(l0\RHO1[mZnR=D$g"s/XL,\M19Per^^pCa[SNB-H
_!AVV?(G3a3^%D3f+:Hb&E'+.!Ttd;)a%?6q>I2ag\d>>WU(KDnLP9fCJLAU/b$K`;=/8/F=gW:/k9io
ro'Dt!QCHYI1*^]3:q7-URi_8Gi`)W@t\L/QOD`2cO)fc(BV7UHZ.4c6asksNm5=\b_EQ)bDR/X@%pAD
(-oG7?@I-LGi6QrnfW-qf(<j2=!"qjBmGes2NtskI%:e>`UKo=NF1UpMN2b)e%5ciF*N(;iQ]q#p$O&U
=505$/b%JH]2H6&A>4il9;Jc6Xkj+dGg,;'2u<VQi5+?:eef9/r?<lH;7_4'dDH'Pq\M//_&keK>h!0:
`XVAGH(/s=JhMAO1VBU#2"`,1Z_PTn0!T9bp"8E+h$brt+5R7p^<2V'o``\7gWRWJCqT8QF]4Uq1`JP^
24-J<rc7W;Rbm#>ZWX+b1W236h%&o6!fq3O/ufJ^aP9mTo`)7A0"J8DaaN@FJUM)pf(I6*(oW!%i.7d1
Wg=pF$ZOGYOXc>sJ<uq2d*P$6/O>r3"s,ZA0OP5sP<O@Aa^dRZ,%"@?#JTZ`HObtXWaB=L6tBh=WUT0j
h?3QDjR>3SGkVN)f0_iSnq;e%-h+nk"GX&\K9aK'Ap9^J==UspYJLD:nrhqek<kIAmn6jbb#'%lF.]Z4
]1(CniDm)L6f9Q&hDHWZ._Nce,%,cn"8-oGr5t#U]NO<-*VDmgHQ+68T:RpT_lO:)q#jc'I>j*nT&3:E
.X9=,(C%(p^Y;ZFg!VrucVG"rF4u^ZDh2`MM[XMSU'">.nFV`eSHp;5e%:\93B]Sa4Pp?V#9)E4eK?/h
#@:9HQE<Ntp\em>?Es!Q3?QeGinuCsQLiFY=q_i]I2?XBI.\0IGc\Qm4fr=!Y?6#Y`m)[-So4]fj(:>s
:YbR">FJ%s#d:pf$cU!K0ug)3qG/dGWcqa\?Eru(6RK'Dal*7-5[@;Jal#`TGf[I9_t`p;8H?ik=a0rk
>MWlG//R/-?qd.)iE[JsEo@K#'E6_Hn0!k,rnR0W\a]TSGV-eUTFiS'HZmp;5')A9_nua__M=cb&:!AL
4[OBhT;t0r*j>plBdk>K4IX:lPo_!f<,R`Q!lG-+^C>YtIP#M?GB[:b_)oi5)bI=MI$d1gRc0lorJ4Cr
=tmGl8UUk?PH@Hk5<N(S"F`OV=8/uc8ZHVo7DT(+SC>9#5oTg\R="E=,UPjVlM]\l3Par\Da@iAo;W.M
#8hBbJ2assa8U9r$P)`##Erk=FV)2:L<X;\S,Y)p9i1N^nGYra&!?6dD-_&u66FSO*1Pu0S&Ff(QMPaZ
HpJ^%J2[u=cXH'k,UH$0i?^W=)<b[h*8o*%k1?h^S0Sln#P>ZEf6]e&J8qd%XsXt="fG.Hf4G&%>?e$@
gBAt>JKQ[0^YNn![aQ"-/3Hn[mlG=n>T4B*!k]fkiA%FZndF.O<9do(4M0<@(T]e+hJ<%)b,!pobC/&>
c#?]\n/<E3U!,7ui@,-R1lbm>#)c,sDOjaO&d&Z42nFV<d3(@%./GoJ*=a.cV5*,&lY*s'_Vi8EY:@1+
!tT)kY%I.gHi.H"N]MDc$/t8A,=6&3UHT3[7)=MiE`TsOH;M6LW6^+J^u8^_IU$(Ie$"MZ]fls5QP/09
W;j`)6Dph3GgIq@#C,F\3'DrpaOdi4O+d6-^$Yk2@<E+iG&m-!8Nt5808JX0i5(sA!dNN6)>cO@d-/sk
*dk^+Kpa+HN_bh[`UH!C4i;)8_si%\Vo")To:YTu(5k$V]VIP=2"2Cd4FBt`iH`0j+*b]$_Lo#4*9"<`
FWHVI<E=>tr2gg-LI_d>'#O7qX,n7V$hV"T]^B:g-+,Yg!hQ'So88,)%;\nX,MCM6&73dnP6P@>n59PG
n$@UI;o3m+?2Xus"u$+A1(F[SM@\,O?HP8=]G?qZ4Ha%?OmnsX#*9PQSO9GGn=ErfIlP(Wn<Jm.:Rl#C
]d.j\jg<7i4fB!T(nT?-?GKVlR^/kq&pSlCG\VK=jYR.t57X*sUWD1@#p/j^/+Dg)!KUnCi$VOEoV]M=
j*sj4"%_?Emm;IG4FH6D,Wsum<OH=0"Na,sP2JWMGcC2P^*?t"#*?V>cTCQ/[Wm3E]_VeJ!(flM)r;CY
k/ra8-ZamK*$kD(\5c]$J7$nA4Rh;0,gP(u_Lq843=hTedB'=kn=Bc,@X&rgJL@>G@+qlc,^A8D6S^0:
VdLP1:+q[/)'4@+ee!6=Spo"^GUQAkn9PL*RWTUeP)Z%r056D[E!`!p.sTOoAs-W&*s$<KGo[A98Um/.
Yu(5ZrpY:f-WXu,'\i4K;7Ut+ot2+-Klp_kC*GU_o*ERInA*>s%^4+XSg<k@r8G=[*XbklGU-n@BX(BV
@@sT!_ZRV,1O/k:M9Z_`#TgYXOJIFtZ8%YC*sN7iV0O3;(eZ;RGU^stKu9tK'V:rmQkUT(;0@YL3j'3;
Sk0cI(d(dp8N+RdWZZQU6ret#8s8P)!=GEs]#-lQ>RV,q)L/1b4:n\+TFZ[18j=`]@!MrkLgAr_^E"Ai
b3`#ScQh,q$^ATI6e%GDM!>:CW[N,=;/:f>W9c]%4H'R(a`iC3o!g_04S[$N>AR6N(HfHV,?)%C!$3cG
2<?bu/&,J1@X(],.p$to'>1W(p[YgT.6RCaFXt+ZiM@/.?B'YoG]="7_Fs-k_W-e8][rD8$GFKA,s7g#
MhX.uHB3WUOp@fjJd;>6);ZcrQ]jQ'64/EJ1V@YJKK2#JP6Y*4L__[,Y__5Ni%6?!?F%4B7$U-63A5*X
\4-nQ6i"RiqEu0,:1AGh@X)9(MSm.W4O<tXP%oIi5`"F(AFSN\%ABNSJNNhs.X]bT02tkdJnP'7n6Q47
$e5r\d.#EJH"kUa\]St;O[O>&+G-M.DX`a%&@oXKm<K#seaUZ8$4iOf`pgcq-]_-dD<;&KdtC@#:Ct=Z
APAF#0B!kCJCgMf&*4&BCEeo1=t"&-55,Lmcg[)'o=8f/E;T7T\Oh*mmMAP)mfe+k_]'oN72]ds@:IDJ
jYlAaR8>0X7FjOgT9gKZ<$k!&n<2mQd(i!p4Yo4!0P<Q:_^;7.<Hc9WkJiX[nDGB/_j`8S#7kn,,8Il8
.Q2Tj3Kl9iKgS61%o[DQI!Eak(a<"6Ll/$@#LB_$-%q%U&L&^Lhre#?M;c"'Wl-`^4LYYFKI>.9?3@Y!
Pn3<qVBn,D<eSPKc-kPsgRs<^_.ACW3=%*%GV>]4A\,1$R$BXc2i?SUUgi8U.V6=G4Klq>Z;WoBi*hWd
m;hgiMLgOc&UIN'Sfc'E_olrMoS/]IZN=`!Nso@Z4g.D$[0#e'^.WA5I*6"jbiWB!0Pdq(nF@JUbCPFO
c;TKmnH@_q5BqW*,h6&VhSLi,&])Y-<<3.S:#]b#nFF_1nV<G\AK%nFpU9Shg*;^dj)AFmo+(7ri4J&.
D#/UKb(j'5^it&+G_u"I1!=hNDc6E#)YdV/KBLi-M(+OI&o(M/T#6.WIdk!s?CIs"gqe1CDcEG"l74t^
aklsRGn6C#MAccZ@KRNn_EUq_Yi;?W^?q$biY4J5:s4-Q@C$1IUC7Y]e;B?&D/T+>[t+%%k=7k5lF.pi
=qT2u)h6lE-%$)F.3a/LVdA>=msk5/@!FrqqYPE\)uo=&5&u;=S%LAY!uP"9'qm.j^A@D-<G$J@e[4hW
lKRbbj9EqSc]?#uI8HW'o<*/k\3\\mG<NhG$FM("L"B:SOt:MO022W`C/Nps:JRhf55jp?#4U%dYloU/
Q4D5":arXm@\@[_19^34+6*q'n@M>Bn=Et<^C*0o"kYd)#4Rd$Z#mL2C>jI$cmCmM;(LO8nPo!]@X+*?
>!BTcfC^r4B8EE%e_mO)/%h"6DmU[s@1r\q71tNSKfAJp.35#KBJdVRKP66?29r`p_jbKXiH`anJ;9%^
_'Et#eT5Qu?/YNaT*h1iqTV=h*1#:MW'0$#_ZQn4?TC:5/`Ctn[[Z5EIh/*"cGDk']]]"WG+,jfQPJ?X
SrCFWfA],d(O43Qo3S#ja9nO5NjB=(Jinhnl!'#OhF"j2pikWbdX/cf^*Y+f;4TMUGqm:IFQbg%9<]==
,F>)NG070P@k/OjG<SVCGSTY/r=!WEkhcN7B6-Oe\BK#MHDI%^c1(FRbS^u+/('d$o?N(qi4VH6k$B(V
c"gs:qfcqd1OW3b1>=)XJerno[RJ&K(3n0u#B'[ie+XmA`Es9nOD\B)S[ol[M^O@.@^EmT5CB`Oo6^5"
_=QNd[D7+lBT#/6C7t!qlJ2&EGeP]gfti#[^0pj\/cc`\$>&*Q$u^F-pqPIDkoT$M8HmsdrfL:mL%9k_
=k,_b]XYf&(?afti;(41m-mC2apo)tfZOU2c;Th9@<;AHLVerg+-X4b]QMNsg?7`3L)52>Tgnl*5DJ'f
I^1#JkQ`=gGi!S]P/%alN[5BGRNfL*K#)4I8#@g-Ghee(o6e@W0ClD8O)so7H4+uST?7N07GjD8Fi`)q
NBS1cjCO#T\XKE.%,UI`n01B"O`$acmf:[`**D/_aP10K-8K:6UD]YI)VeQ4Mn@N8-NC7@.m2.eT,BcK
a^g,B2rS$r4IuCGH!'%E%'Nan;s[t5I3q']+Y[9N]6X?;MgDuXM%4USbJ0"g$nlA44*!4Ik*E>9DsSLn
#V#dA`"cUsnKWRRf6oEeW56`EhG\sBHP*^i+Xk"%_+eb&T13`"cbFko#4G";Qoj8)a0^/N@FI;TF+G,b
\1-XR3Q$b$H=QP0i-?]2/b#K(VWj)bO,)oq6Em\J+EUdf#e^nN15#>nIDu+S`11OX+c)V74pQVMRM@sb
"1dLh_J&GCKckJh`\t/D'bKl/"ZN]?+EW4<.V&_/^OG&A04NY;$t.aTiHZ72%k7Ns;LE]igq4/QLTFeH
UO_jHb?AE[c[S@:iVC2#WW56ZC9R]r4iuF[()U?sbtAT+k,iRWHT<l<GeU@`i-!H*@B4Y:p!N:*!1pN'
!ESdr0KfB.7Q:DYQAH))KU_]_n@WUh"l9f$0[i3>LhX65o.;-X*q56p]A44=;aA-F"DA3;JA]l;GgX1r
&>$aFb+iWphVDh"(WT1hf)*(A=B6/!-Z8t'lYloqrjot)je[`Po0+.#/2'0)C>SFqn,S<k/%dL_>'c"T
]\uTCGn3Is]KQt@0Q,_[.Oc@/G?Yc+;;Oe[2\-BOTAjA;"WMZ1Z+T]iN)dL,Hhb9*V]sRi[q11>ik,d6
`h.V\GeQ[*%gos?Q2e_2H,.l+&G&#O!%T#r]GMfX5].Y46k`*j,FAJoLMlV@KNJ;dH(PR":5C43p9*Mk
j))J.;K@?oq#"-::Wg-$4>+uZh?';C9/_$7iaW#_k"T"i5P0=@?l:;U!"8$Q]K#Gd0WTJ7BlNOC#8pO%
K/@.l(FR-6Ai9#ti'@Qu%:58197T>?l]!&XD<Fke-\$@AlM\tr:Isu)s7oXAJ]%q>GVQL+!n@+:[D;B_
#O_^I7Ylc4ADEnTLDM2R6=2Kc]CQj&FI@O75usn,GS.U\T"_<'.e0oM/Uf@"'6k,%oT$ZBhl>)Nm/4ob
I,I9t0CJ<RGj0&n2fGS?Q4+:%(#T'F[$TX&EqAFtB&c*tjKlH2YSO:T$^;.%WXe2bNiPIoT0tm4+D&92
Gel^J]0s0S4YA5b8E9pBl2@'Ln>^HVlBjO8.*Rh"mRi9UY.tD[n__iMF7[E=k`C\*q<[W<_@)T+\Z62&
jt3Fi]O1A-n/c+Wd69(NRl?Z>#K5_FJHo>9<T,g/I>*3kjtr\sU4_n902.o@70/Cm)4pla^!h'j$'^OF
^^KPno`:&sGt`[4^FCIQJBqPQ(YVprBs0ct<6SsD&1Da,KbrBCBEQs="#(B2Rr(KbL8aSCmGQY='t.aJ
8E8S4?Drh87<RNKoacT)A-3@H47<G.n8`=[X\b(jZIpRXL)4O<pnAg?b6M'+q<jn"h^Z:C.sc&/:B@DQ
i'%!FUr!MIH#?Xre5H>sS!7X6WP'doY`>:`^Y%j*:fJot+No%#GX3?5OeKIO%m5rUG^pTF"4jD%m?KV_
pRl6D<<:SJ0Zp1gY[c/mn3UtQ*YgBr&#2gW.+efEJ/>*^oCAOom?MJtU`k7)D#<!!GU4-.9]3b\=.eFT
)qqU)=0bC>,CgTWd0mQ!$We\E][(&TFG(IUdHbh3Y70)`R>(mdO7;FBlO$@X`b$jm!+g&'1V@\[J!h4E
Yb`1_5rNtYiJ#JSbLG1g-&Dg!*BM&QK71\+)On8gV,P/;jsu,?VLVPkn3G0B-[:'<!+_CRH)'4%?EeGZ
+h&nnPXuJqBK>Mi0@[Q7BGX2J]bA%D-&V7ubSug=d72caEe5*@bJ27X3;-\J!j0&a\Jgs4)4\8E"*d-3
"><T2,1*LC.*<bFJd,NuF0bscI#Od^huW`T).&E9HqfWhmY`iO#F_a>nELQs@@aO6P"?8ocs\rPP9Kcn
Q*%`_8KJ!H]JdRleE:VNA-*8YUsm+(s.#Qpj!t3g[QuIsEo$t+Lie>3?XkmU,aOl'?3jm=<b3M=@.AVR
$/"E^JLAOt9pMOr[.g@p(.g'mcfY@j4u>DtGr\t1HKC7,!\H0TJOc==;<Mc!A-!3EhYRA84qj[5351PG
"qpRp_@+#J)ID9!?5@etcm(+pn-3Vt0CL?.aPjpHB_A)M4DJpnCG0TG(t-<SSj.[X8"K3'Eq](0.-:O_
[s3TsSFYP"*0hSNaFaI/3k`BT%S^S"jlK<q"hZ#S$BNh@OBHpU=Y-D%9*&;V&P"cKem@3p_eLa4g7ecm
Bdr70l_sHSo^KZXD`$rSG@S%K:O0bH25C<B8(PI#9tZa:H[,^tA/hM`7Y(abC#X"'ULs?+4a94i&!(P"
bMC>\14TTocU%`;,7Gj\5NT^rbYedSG=hsuE_B3r?JYZWrh1"<igU//B`1c\(tj7])6=.\MsBWdeRZ?>
IkNI-m?R/jV`K'E\XQ=mp.BXUcikRU4M&rM,'tsR>5!kNn;g*FO0$E,QZr;KXOPuT&N06(nArlrOTg]4
^^@o"6C_Y]Ki\osG'2(l9K"2OLH%fd%N`_S;!%0-%ETjDL_H;cn/@`*dhL^g%*A5M8U/S5_Wtl!oK)H"
buKUe'qfi%_[X8M`+#,soZRE,UCmej_5hi?n7Vl6D&H8YlJO#K1Xa1)'U)j%JsSElL5.c6>7Zdj_P/Gg
aog4=V@r$5H9FBJK*k8>ne)0d0rN+ViUm=.aek.K06(qEF+0;o*^tM$66(^/nDL?m\*sOS@[Ta2-gi<Y
PVt9+?d63:LUUC>;Pq+FO_OT*hCZAU*FkL<'_7;W&#nMrN/JX"*I?-aVW3[*SgbaV%WB.3o[>j;mYg:e
;Sp>]H+39XUpV@=Yr.<DO_N<RTm,uOo!9u^e4c>fNB3s2%UOpK9/abV.mr$%"cSp`KSPr#l9^*NP>XlI
0lGi"]E's(M,HJ.;)4hVKilSU^_7P\YEYlr=\Zc1U->GYGS2fM(,]j($uVfp]R+n%&fd`!jiqPhR8t^p
miEN^>@^f/:jQ$+cDa+?H2$e^)j8C$CJIJ=gdJ\u#'bqq:D=K^)j1Ca;/Vs+?3BUYo;MHb[O?^T2&><9
);oYqH)iPH2E!$j?8p$O1VfIa^B`hk<Dedn!3V8V+IkB,J6)gb'P;+j,J6u_24SAgJ1#o3?86/(S*Eu(
<KA*'%Ig$S??)b&pX_7LG7Cf9Dj18Dd*nISc2;d/.;Da@V22g1UJ1/lOLJ8\XZ:NS=-<e]gk/>j@,]A1
/.[/.Qcd%BEF%E(YD#YVD.t'f!'eX3/Y&;CK\&RXPbP7hjs6bM#8bf<2o1-JLUZB5.mpTR$_ddI,U5G9
5AlA<4S2L-]Q?OJQ:XPjXgd[PO0jV#R`W3aUml"O2tnPhgGK/gRR8h`*U2^s^jC=]XtFb;9*Gjjk#pX<
:3p36ULpM;$e!;+_"1:ZX36E::.c406+V=WGb3YoB0W(L>;K98"arq?);a/6S=^o3*AtlunWDn36/d*+
:0otfETYE*a@l!+G.@e5Ci;AKZ+AF^1Jo>!/noC2_lMVl[`-`IE7>lbAcaIjQaAd*iAL&`k'UlO$OVfT
C_Xb_kZ2rrlf'47]JNqUejm3dS(C\H*jV0%`J);Y-1TEgDOqkTm5Pla*RB1GN_8<-UN>e'n63lKYUOkI
9Ebqe9Ng<`NZG,LH.5M#@_qHV)eFd`H$\$O^<Ch5AW?(L&Rn&<Gn0>64FhRo.k`6_-p`XmmH-FElWg[D
7@PgF#VZ&KY!rrPG'M3?BcI\Nm"_li-laMlcdi.\aZ.(Om9i?H*UgTZ`;\bif+ab5XbPp.r[(XmI_mKN
^%(;D"ZL\.`KK$/'l0sGf#'$+'3kCtjT9AfH?])83bXiE-]Df84*h@m^ib6A[O!kUjdI\K[OVX]':n'`
TeGf?YRR$IGJ*_?.*d!YK"#kTbm`?FljA`2c,+?;n.s!Bb&6^WhY"DVWd9S`(Z.l(#sL(&GjUOTpkrba
7F<,/^6d[ffEcBaG,+-jrS2m/Y_,-=NpPu["C9gq?FN:"hdaA"Zt**VP`.`m',[4AnC0)!GUNOD]p(gh
A-[Mq3ZH.="SR^/4I&iFrPu[S:AXfM[O$cah(.ZfNl&YSKf>N9Sb0]U,dm,7UV;f,c`tdbReLDaOHeZL
$=hO*T!@UHDQSkTlg.0"a19+b^BSp9F?@nYF-%F'B`t2r4$5m^.reqC73\b,=&BgD*q9"fG4.+u7X"EM
P2XOcT'DKRRC+e"Wh\1/I-#e7WLit@Z&@r3Ok;15n?hW#$f?ak'X[pD:%BtkGf0!QIIDl.6RI]TkR!Di
mK[[oIWJum`&AhU79gPlBg+OQG\;fj/Y%J_&N<fiXMbSKGh]n*gOJacnW2!f&N<gT"NLN3L;+W*iO<__
f<'q?7ut[B"Mjp5pWV7ejbr'MR47,:4W7fD!:Ob>EK;0'GKfQ"7C0`Wdf)]j]NrpB'otg+`I/T[Y%ZS&
,Z-7fiU*XTq$K",_Crg]'l?f=&C%?dDca;_?;sQP$u]4KSO,`,9noPqetN^Ig>=<5[k$#fYD2=&$r9`r
lp"(l_\o&?8A9\K15m'A+rSGV,[6I@G`)"@^g,AdfddJ,<Lh;\1hhH7(nRH]Rn\]>@L%X3<"sD;BI.h0
GXk3UCdOJ0a7*'In.fWF.842qWab`16tq.G(nR`E^-YQV.58De@e^9Fh4?T\V^d;%ckGQ01H\ZcG[I-h
g_@fu<:tA)d@DOk[Q25e."!)N+T-[B]S":+C[O$>RUdX!_`NZjSb,[PQUbX$0t`.[1)(--TQ;CshEc8,
2)hNaG7udFK7]S^($,N7hGJjKc'C&t_XPjN_j['Xdb&)T-NuCe"_ePQL3HU!F0hdH>f6&kC4eu7445R=
iLSI%obAB;(S0NU("QG/p$rsV73\P25[:CMiLNpQb_2Y^neg4P+ajMc46830Z^QF,-EWWTn1G&]DYDR;
/fEM;!R8lT]!s</4"Hi38K6;%(uA9O6IY#GAJs?-FIRMMlH%.01VC&GKr,g[HKkq-XC.G-26iLgn?*tj
Jot$]R<pcIiE[/]^]EH&]MT++,-%)Z-afb\8!=eH75Bh@664\u(nO3J//CN8jY=EK#ko>i$8CQr]W7uG
Y9+Keb%#Zt;=7`G,m2qfiE[`r==bX]IqEq,eH%4e&5sXfdtm;5$<87H4GKb2#]ip@YN:aQGZP&&2`pT<
]MT)5,PkM56Q_R7(nOc[I#&FZVEBU2PGC)qVbrXAUQFGK6uK9N+B'?!dtp3,,0857-8@WRW%F;baHXa7
[&Rj!9ceV2AL</0PGC&hVC=16!\_I?M)[aIJp;PL:G:E=bN(()a@Kfc3mjCc9qWqriTWer;qGG_FG>"7
RW-^@6]INC:G5<7EHe*G9noQI6TF<fJK+iJGGC2fo*uHR)]7FkHFf6A%lS/X]Gh0_8ZrH,U+hJ`kp=G\
+u5Cbame^dB<d8#UF*mj&XgVdL[rdsL3G/JO1Yo\jY=D0;->G*R%qIdDFJ*@KF=sl%.@4bjV7kY$4QB(
4\aX%'keV2'#V<pa^!@#>>Z6VnEqPM\kF,bb%#\*Op%B5]Ti/dBT>grmnOQ49,f9fEtQ=%;b->f#KpGA
`UIb6?ttL*l`cQihQ:P"`R4p4'H!E-pp4I@fMRjkh$ZI3<FJBlL1cT5Re^gY;3TrV<$V97'/[?W0KbO;
jL?'c]J;0'PE=nYqp87___XlWQ?-Thf\""/N2fb8B(1i$n4[RO?)J!GCGJ#IHH\.S#]4?44L5T5HZNjO
i;'\]__VZTl&"?\$H"YmK#c-4j1U6fF;2VKW<F6"Zag^s6Q^.6\mWRVQ6CM(V$M!T>2Zdh&&0\`!]Y2=
0NTgpAGG>#/dWLVlgPtl@"B-N?HQR#WaSnd;:>e(9O["f,X=7t)oL5`_h6]Imir/(5pFIMBnY(\!Y"Ol
%RQkK1MRie"^aqS5nL*%NacdmiJBNgaBO0;bNtll(pcp*ilo!%$Xdnml?F(h?fKO_L#ji_oQWY<X5fW+
p"r\c'4KV>>d^cWZ?3_bB"A"L2tm01pD"Imn`bFL^N@-'$.bhF#'eBPeCPcQD]T)<9bnVg:Df&[j>^u!
O7sBT@IWB)GnnZN1Vg'3Y?Uno^;=@T]6:laj$idd)rQSCgX@mihMXi<Dq$V[S$;PocRU#)7N=8pnG;Cm
epk?!^5e\#L7="]j:*G\h:r)*dMI8ZC#!N6G!#l>G(q@]?LL"9/Q]rtcqX#,JYN/=&Bd*M3Xg`.N;!V7
V"o#>^M.;)o$c4=LM\_m3*mEG9JF;PW%kr%1pdaI/%\oUfKHm$>4_:SZ!giT[g\d2a*U3gPSr=fDUF4e
6B#(W&`ZC/XmH&;1K(RIiRJ?TfAaL^!uCP:mhr*%7X.iV>)"tPj/-NK>PUaq&anV7(#Hta.u^dgOd5kX
C,s))%W;7Znbo1q1IgdbfETTVht;>@b?'K@Sp1n*0T&mh2j6e!T]=_aOfo'+C&o3sO`j).2'-lJYM\<P
8=q<Q>\$b->^ooF^O/IdP6p+<B1He7[P;W59'q-MO41;NcL1V2TXoj/"bP@EIYUnfG=&3pPJSrTAaTWg
62JBqSe._47Y`oFpRbOe2/8&Nn9SPgine.f>fs.GdSkW8q2O4I>FkAW\>+lDK+"*s0)#-Kh65teX1tYE
H:;_uh(JiGlYl-t'%Btu`?%mXn-3'@hh0,pMToju(3n6]F8(SXn4"5-fX.$kbjH(T4h'pL'qQORN?-Vo
Ro845]A>&eF7+Jh#i<'Th\PK-%)\\GoFdP<\+&J4)F<)YEJ_.T34%V1>m^s#2S<`+7%oXtW9+RrMS\?h
?G1g)Zibms9sRY;]hp`f6B\Ul%Sr18e<<$I9(`ogBrAX7R\nm=!WoS*omb]114kp<YLFl9;qHLsNgTtm
4Rm@AGOdRqeP.ud`VKq*0([ql^!\au(7t#J-esH<H0\>dn:pseZ89*\mBFL/?,Ad?B`2APDMDf8V?Dan
qu'Hf<m\W\fid6mAm&'6QbKKun[IPJH%'i3:[)%kJ@AXq0(<UWGg-;n>VCNQ+27d@;ni\YGg<2<gumD^
iFO/FGc`baam]RY$a9,OGI3n_L+DHC.p^!]Z(,?[-gcg4K&J!f$+u/S-.*aGh?.*I%W>ZAmn/U6B-[h/
%Dtg`$@'u8*nS?)&I#i$*F?_S#Xnbi0YB4dJ9P=(2EC"@4S(.-:*P44c=SoK>Gs8=)VO(,[SOIt_0asE
]#/l@\!2#t'>175(*;trD70k66j3#)=TO8Xf6q._m]Xi/GORY;GcI8-mjk.Vam_hi!,loLISNAq_t#X=
7k+RbPFM;e9!)FY$&1qn4$76C-EDJi1VCdQK(g1JI7<mF)'5X@n7i?D.DR_<`M(6*%^5NsYq0F9[jBk!
iJdl(ku*9dAIOW!#'e[*=+=fm2,@<!.-s7'F_#'.,Vm2W=so[=/Fs&=^#f`a<-WZ4(0%O\_8,P270@J=
QSfe)Ki^&m$B`,.XA!>NoQGJLF\<iLG]lT<iK4HX:Mrp]h,e!/U`tBaF*l0Tr%s-u.OTI1l_<6bDm-2k
)'5WUnG]gI_QnsCm%l][*iTS;VU,'6f"gnYT#CfaiULL`!nh(Q%e-(5?`g_HC5,5-r0!-Cn$F&b?UOG_
41..*4At.sM;?06<rL[Jc+Q1o4An295s.hb:uKk/GV-f@//!3^bmn(VQ4g][Wg=)1*f9C(Ap&Xug4,fM
a$#J[:@OjP4"0TYM.R/L[.(&E$nn#>HX;%9@?'b9_EoB"=0U'@HDNNCGDM;7][1,4"cM=S/G-C5'0HGU
0uCfs#il-WBt1tcT&KffZ-E7/%$+B;4\tb.`Y%f,r9`s&\,V-?Obs4sQh'lLrn-J#%$+A=iLRpV8/2p^
kHL&*']-XpU5Bk\3UN-kOie!%klqPLSIG#]lnQru%e'V=M^_#QBt"aM5k&HJ1At=c^bZlP$nn.g?GUYB
#g/O?E/+*B5)nMu.P<j?P>3S0]^;6])9tJ&>c9^G$nnX9iSA'`1;%.<L"H@uc5':9e^!Y*?EIaPAN92R
!,l+FI:t9e^uKa1,]\Uj*mtp*#oc"sh#>Ic89G;9mdPZ89.f.imQr/2TAMk1ju8#b.T^lf/Nbn<Ftd#T
#tPMl.AkTH]_->Pp*u!cDUPl/g\jBl7k.SbPs7B*hIaC9Hbu8r>3,hSf,.$RGus;t1;$StKsuNV1UHfP
IlBgpI,HR[_YH/0)S*Y1N;n3Q_pATJeMITeS@?Dj04TQEK(g2`SDc?_s0sKXY/38r5qosuEeGg@rD81=
*L&;*#-VZaPe)S#mI6_)-KU<CO1`#UVj[/Or&dlf_YYO3LMJb_dOi,^,+Kg6&V.TA]<[d6\&%)\@nC6`
pDEq#kIr7bo$CWd$VrSA/b!Xi:R7nri=.l]@=b=0^#'jg.0cau[^k1X&%SU#"2)`V)1sG;$VuVl*8tb(
/![oogj'o8*F_%m*hL`oe&BB$`;!gtdMrer$[ER4)'5XBi@P:9Zm1WLqKnuuO6sk\4(Dq%oC8]=oq!_A
XRIQGh=R,m`5hSVZFa=X=)L(ULuHbF*o7NbT)NELnC4^>GefN?0$NmN"2%tk]N,mlTDO=h5(%."f.]<R
h8<Infee"5-Te)#9p^9&W3qq8DjH%n:>;Sk4hLqu4YJ9I"r6!'J)).fZPCG"D_]/9>fLfI(#BW<42X-Z
!bZbWF:W;H@85.SAr19)aNe4ua)X!%$@+Ri`KD%c8TYJ]?3084n;]6I]j.'Z@=!=_f6!SF17"-liQX[L
Gl^/Oj2p+#LN=!2eCK.k5OfO0QR7h,hIGqio!ji=_L&:!I]\+);OMFCM[D9r^_=&$^/%WG]_2VL2.*Eg
OG:<poc2\]OV-I%Yabf2K/X=8g<etRj)immFGrZnGZ3\!?>TN%E.[g\0:`'m=9C,GSQZN-d)ZL]]9cL?
@aK2+LY"*>Ao/!]beY#HTgL(-][:M!HoR,%o%5U3Qf1h%llR,.:u9\q,Qk\*NSumVI;8][!T($?L%DM8
c?FKI@tj"p"2');pDR(W_[X84>$F"_@s6TCJq]KkhQWo,RGgjVcDc9DkOmRGJq]KsT%HrUj:P^JJi@$2
C]'lYs&N,PN*.bg_5k&pY@SU0%c2;9>rfE?b;TLT=Op=rGjRCPS_sr)G[#'mK*tLW%LrZc8LA]<2E`Y]
`4hge!3i<O3`(rTYE6j/YMVgZ[HF[]jH3BU_L'uYG[-A=@:Xu!-PY)YG\^XDG*crf.r96p)9Ys9W0%\K
]%Q/mo9L*U9o\b/[q7t>S*C]M#:$lu;qI3#V76RsGg!VmE-gU&5<[_%MVS+T@[Z1l="Wp+POOU@M>2&I
]1__gM;V,%jp*QE2G#+$Y40GVW`P694F%+iUH>%[c\O#/G`<Hps8MA]!g,@QWS4H]mr>r"IgE><'rX9M
+&d(Hg83NjrnS3Jo/2#lC/TVOXmP=n5/X/BZ@b74@pS'l)!:+'X$1ia]4a%07=:$<%:6NZHYbq*i3KAf
^1A6Ji9gqj*"is14i:2Ueo^??gY6W8q?>_ss1p3ZHcjj&bS^A1,\MA*"2'X1_c9DG8h>`M"cs\9H,iaf
_eVFq'W0:Mh3OJHH`d<[GcKn/V2=X(3PlGF`RI?$>:uj@[2S)1k7VEP^CKbo4"dI`[DjmUKf>Du[;sh:
-\*X\QahH['AO2VF?#8++Sm<VF3<!1'I^PZmKd_>+`t=<dka*db?B&\;ZRotNHo&,fqXQ0/?5#s\m43b
G%P_GNe967OY$T(Gl83qml!.=8[=8gj4=n"E(l)ejBNphEeekkgsa#LhCMnH-+qNOk&c;)eJsR/p\>f9
mA6P54*fo(\AE%2Cj(jma![g`K\(OG;n0\+'S,E"fMo85<_+F`dN\eD'je*#ZX\>N<O]dh0Z&Oar^Bn5
bAldQ3aP`]71.?gDr)A'\d6flZ)MJD$Yftle%JQB[55J5fbP*jp:S'eiO-u.*!["!XBVg7[jdL?)P>Mp
L54B,=9o)CDe%7E;4$8#71!m+6$")q)'3+KnAaP8g@[?4&$IjrdLkP6O/AfGYnINV01'n^UoeY0'c7uu
$9W.?IYtKmT2<Stn>ba29pV[JOh(r3Y8(C4!mgdq:S#f,kQ6KoQP7#He&u^23JijV`KSs5h$1=+%e",A
eXT%klD6:!]XEfFp[J%%(#EH3iQLK%$kG!Q]XDj6=#7M1ZGW_kiL-k%`UNAsD",$Y(#GI&m2@'VG^*BM
[3"hWhq!gM)MX%!`_>0@7\hiQMW)NSYOjq?]YftH">dr:4c5cgTsad[GAH-%#JA[(n02V&-hQmh?[.Q?
((8#Ib6kFmL=\5oaKi[H$nkh-2L)Vc]T1r>Q5-"\JN*SU33L7V4LD3Z.VF!!qQB-^3l=>.#-VZaq5Uj<
l[7Xh;#[\ViLsh8f:Ln`mr-`1]ZAgce_1PI@<hT?Kr<+$O8sNCGn:Ap/K;@Uc27/Me`=[Ice`WA"eP$\
'8D:.'>0*!%;LV6>;g`$O8_!rQ"aBAY<0dQ64=C,`WC&s1^BpN*t0g2>i<:"-QA6-`RYMplJRX&(>"t5
iPjBAkIiL_*WmtBAEQe/\7TuJjT'5u]m\r-%aT=[,_h(TUP-ZEnCl,?[hhtK$rVfr9oY>4Vh*H!lVHo.
*lEo<B$'h3IpLmHS,[*p'c:7n9nDKbg]fC#/KrJI'sQOgS*PJZ@X)Q,<XkXe?ct#9f,ejBGd6?=cgL!'
L)4!9G`/,5Fl.Wg&)uD=)TS9h$kFpO]EQW\6e0@Q'J"ps`Kg[6]otE0fhu#k?:+J';]NI[Smm<>F5CDG
&AplY%WD=)TpN1]n@7XMP6IQ1Ijc.?DVF%IG8n1^G*udkA9cM/Khr9"(Mj`]&#JRTl/5PM0=%$`.MFjf
'uS3sql2u"J_-j8B6ZGX$f5t%3Q'$+G'M/pcgBm(0*eoI1^F7kX$YK_IXS3I1;(-fK(nU#Mb-.`++5_j
5$X]'nBcd(P9[WQYPuf*>)!hpXn/',.RL8LQJoe_CJI,m/<\;%`Y67J/PGdS_ol3FT%>L^HJ;lBCi.0m
CJMHPGWG'in+pgSQa>K+h:?[Q`CiP&`UF3M_^ehqnB>UU$no'QiGnQn1blXpAZ>OHn8d(i:MZ#i5LajN
75_u@XA0(_0tbBa#Oc68'uPq]96GH$So]\]FEoXZ6`[]h]Gl+?^\e$)TDqAd-";,(V8C^"ST!J$ZH"6.
M_4Nd:o]YPk"4c7s1!GVF>:F[[5$-B3AA+IjUP(WoCepIqm?hc\lO(PF40@nGhkNqQJk8rq2frGW3jBV
2L%t-ApAPT]Rluqe'qom*q6VuBGb&,eM_Zup$\pNU9ccR/>;92iH<k!ZFVKg@X,Ft/b6^H$C'?)4g2V#
i:SS4?3@B8iUQ_hZ"/TeCkpQY;a>JQpgJ!@nCfsKWu9A.\sXC^?2H8oj]Xi(2S,?R5Nr7ph&X.:GlI=!
g4"arV_uMX#2UHrh^Y,dcL<IGF4-hah;PJ#3`^Z2;096P6Gj4-1;%:(Tf!e%?<?.&#G1>TN*-Q"YB@A1
9CErB[=,-`DJNj/d<1/pW52%IG[ds[CU_MPL.@nSK=;>JC-5E$BXS=&40?V2qf+F")CX@lKN`6R>1JS6
G"WldGSJliXo7MbDsrF?,<Wg3ib=%SU(JlO7YURjheBfYE6Ei@GSCcHP?N[L:MtMu;d/-;dk)P<=;W*5
Q;\6:4/4jQgC)1fc$*p#f/YIZ1HZ!r>7?/lDth9%c'M2pHA355$U"+S$O,Bn3_*;m_f!,oF'OW7GSF>/
KH8<WM,c.`Dn4="cZLD%iDF7uXn6i,<\M.m/Ll_Rpu/rc_!ia/8#DQX%F7*Ik/jj8`hd<P`AP$En0g*u
2jMeY#]KC\)f'P3p<W+rE\CmH"IbNUPg#>4:=ouW[K]h\GJePn3l<2i*8FLK:W+\0D#Tc?T^k6Vl;M,u
(ONQQV:S+(=oYW8n<O0N`^J(Lm7st`;7d$7(`nO2EDc)ljO(-3-Fce35\3.*c$J(6(r'+WZl7+QW-.j(
,<R]KRC1kq>IRiu5*k/)B\YkPSi(R]'-"4T3a"0rl7/^TAhcCTI1MN+O#'u<j7qs*LSu3J]K)&,/`i;W
d:bOcoX4]eWpmIak77K\j(7gL4IX@&;g[@U1,S8\[VZ<]qlQ[+]u'80e=CfB*8tbRNh5rK[I3_q_]r$.
)&//$lKU.-)K+XRQ=bA0''DRN#]H:+>]/YlpGXcg+uSP4,nCc$k<*L*M;aSq4aUg3G]V2QT$(BXn7Ydl
VQ(<Bf$W(@'>pT-4:R/qG_8N)dc7%N2uHLCle^,U0>IN?j:>gH2!Ri?cL?FAiJ!D5%<5gpnA<7,5)Blh
$R9uH;Bpo46p8F<<ulQC743g+6nQ)NV\-fSU5%Wl.nLf&e351u6U";RCCUqK$nmF,F,3Y%GTkSJYD-Q*
n3Y3AP8<^D0con*EijqG'Z1;%&]NC5GX3UL(n1peLuR&;$nmF2KV]Pm(r`a](g[cmYu_cK&H+6,A*!Y3
!9DA,`r~>

%%EndBinary
grestore
np
f
true sop
1 /0 /CSD get_res sepcs
1 sep
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
294.026 707.108 mo
(Fig.1Theintermediatecon)
[4.99298 2.49649 4.49011 6.27267 13.4703 5.48682 4.49011 8.01483 2.49649 4.49008 2.49652 3.98721 
2.99033 6.9866 3.98721 4.49008 2.49649 3.98721 2.49649 8.01483 3.98721 4.49011 0 ]xsh
ZUSWXZ+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
405.627 707.108 mo
(\256)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
410.62 707.108 mo
(guration)
[4.49011 4.49008 2.99036 3.98721 2.49649 2.49649 4.49008 0 ]xsh
ZUSWYC+CMSY10*1 [8.9802 0 0 -8.9802 0 0 ]msf
444.579 707.108 mo
(B)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.2362 0 1.732 -6.2362 0 0 ]msf
450.476 708.993 mo
(u)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
458.121 707.108 mo
(atanonuniformtem-)
[3.98721 6.52411 8.01483 4.49011 4.49008 4.49011 4.49008 4.49011 2.49649 2.99036 4.49008 2.99036 
11.0142 2.49646 3.98724 6.98657 0 ]xsh
294.026 717.885 mo
(perature)
[4.49011 3.98721 2.99033 3.98721 2.49649 4.49011 2.99033 0 ]xsh
ZUSWXY+Universal-GreekwithMathPi*1 [8.9802 0 2.4945 -8.9802 0 0 ]msf
327.005 717.885 mo
(u)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
335.055 717.885 mo
(isobtainedfromthedeformedcon)
[2.49649 7.05402 4.49011 4.49008 2.49649 3.98721 2.49649 4.49011 3.98721 8.05075 2.99036 2.99033 
4.49008 10.5464 2.49649 4.49011 7.54785 4.49011 3.98718 2.99036 4.49011 2.99033 6.9866 3.98718 
8.05078 3.98718 4.49011 0 ]xsh
ZUSWXZ+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
465.583 717.885 mo
(\256)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
470.576 717.885 mo
(guration)
[4.49011 4.49008 2.99036 3.98721 2.49649 2.49649 4.49008 0 ]xsh
ZUSWYC+CMSY10*1 [8.9802 0 0 -8.9802 0 0 ]msf
504.066 717.885 mo
(B)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
513.525 717.885 mo
(byiso-)
[4.49011 8.04987 2.49646 3.49335 4.49011 0 ]xsh
294.027 728.662 mo
(thermaldestressingtozerostress.Thedeformationgradientfrom)
[2.49649 4.49011 3.98721 2.99033 6.9866 3.98721 6.11639 4.49011 3.98721 3.49335 2.49652 2.99033 
3.98721 3.49338 3.49335 2.49649 4.49011 8.11002 2.49649 8.11002 3.98721 3.98721 2.99033 8.11005 
3.49335 2.49652 2.99033 3.98721 3.49335 3.49338 5.70334 5.48682 4.49011 7.60712 4.49011 3.98721 
2.99033 4.49011 2.99033 6.9866 3.98721 2.49649 2.49649 4.49011 8.11002 4.49008 2.99033 3.98724 
4.49008 2.49649 3.98721 4.49008 6.11646 2.9903 2.99036 4.49011 0 ]xsh
294.027 739.44 mo
(initialtodeformedcon)
[2.49649 4.49011 2.49649 2.49649 2.49649 3.98721 5.60904 2.49649 7.60263 4.49011 3.98721 2.99033 
4.49011 2.99033 6.9866 3.98721 7.60263 3.98721 4.49011 0 ]xsh
ZUSWXZ+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
378.688 739.44 mo
(\256)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
383.681 739.44 mo
(guration)
[4.49011 4.49008 2.99036 3.98721 2.49649 2.49649 4.49008 0 ]xsh
ZUSWYB+Times-Bold*1 [8.9802 0 0 -8.9802 0 0 ]msf
416.724 739.44 mo
(F)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
425.323 739.44 mo
(isdecomposedintoelasticpart)
[2.49649 6.6059 4.49011 3.98721 3.98721 4.49008 6.9866 4.49011 4.49008 3.49338 3.98721 7.60263 
2.49649 4.49011 2.49649 7.60263 3.98721 2.49649 3.98721 3.49335 2.49652 2.49646 7.09979 4.49005 
3.98724 2.99036 0 ]xsh
ZUSWYB+Times-Bold*1 [8.9802 0 0 -8.9802 0 0 ]msf
294.027 750.217 mo
(F)sh
ZUSWXX+Times-Roman*1 [6.2362 0 0 -6.2362 0 0 ]msf
299.513 752.102 mo
(e)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
305.27 750.217 mo
(andthermalpart)
[3.98721 4.49011 7.47778 2.49652 4.49008 3.98721 2.99036 6.98657 3.98721 5.48422 4.49008 3.98721 
2.99033 0 ]xsh
ZUSWYB+Times-Bold*1 [8.9802 0 0 -8.9802 0 0 ]msf
368.598 750.217 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.2362 0 1.732 -6.2362 0 0 ]msf
374.084 752.102 mo
(u)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
379.198 750.217 mo
(,suchthat)
[5.95029 3.49335 4.49011 3.98721 7.47781 2.49649 4.49011 3.98721 0 ]xsh
ZUSWYB+Times-Bold*1 [8.9802 0 0 -8.9802 0 0 ]msf
421.054 750.217 mo
(F)sh
ZUSWYD+MathematicalPi-One*1 [8.9802 0 0 -8.9802 0 0 ]msf
426.541 750.217 mo
(5)sh
ZUSWYB+Times-Bold*1 [8.9802 0 0 -8.9802 0 0 ]msf
434.738 750.217 mo
(F)sh
ZUSWXX+Times-Roman*1 [6.2362 0 0 -6.2362 0 0 ]msf
440.224 752.102 mo
(e)sh
ZUSWYE+Aip1*1 [8.9802 0 0 -8.9802 0 0 ]msf
442.993 750.217 mo
(\225)sh
ZUSWYB+Times-Bold*1 [8.9802 0 0 -8.9802 0 0 ]msf
447.392 750.217 mo
(F)sh
ZUSWXY+Universal-GreekwithMathPi*1 [6.2362 0 1.732 -6.2362 0 0 ]msf
452.879 752.102 mo
(u)sh
ZUSWXX+Times-Roman*1 [8.9802 0 0 -8.9802 0 0 ]msf
457.992 750.217 mo
(.)sh
true set_gvm
%ADOBeginSubsetFont: BRFAAA+Helvetica Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /BRFAAA+Helvetica def
/FontInfo 8 dict dup begin
/Notice (Copyright (c) 1985, 1987, 1989, 1990 Adobe Systems Incorporated.  All rights reserved.Helvetica is a trademark of Linotype AG and/or its subsidiaries.) def
/Weight (Medium) def
/ItalicAngle 0 def
/BaseFontName (Helvetica) def
/WasEmbedded true def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 48 /zero put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 76 /L put
dup 77 /M put
dup 82 /R put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
def
/FontBBox {-166 -225 1000 931} def
end
systemdict begin
dup /Private
11 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-19 -0 718 737 523 538 688 703] def
/OtherBlues [270 281 405 409 -220 -207] def
/BlueScale 0.0437917 def
/StdHW [76] def
/StdVW [88] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
32 dict dup begin
/comma <1C60D8A8C9B854D0F84ABF2F32EEB7FA8EED76E620A4479EE0E29CEB
D5D7E6591884C779204CBCAA7D477065F5> |-
/zero <1C60D8A8C9B7EF32A47D2AA10CC01BD74F486262CA3CBA2A0BB3D25A3
A094F02BD79F42A0A236349C843943C6914F47589F3954D0C018D1FE33AE62F4
AD6F7BB100F692008FA5232B949E365DCD3CA3A3EC8285D42D2BEFA> |-
/two <1C60D8A8C9B7EF32574ED2CD7E030E235A78DE7C157B301D9F714898A7
7988FEBF6D99B65383FF02504025F2F803F7AA1202974CDA083D6C42523402CE
33E90490F1E02088FC3C50E8C63A9FF243AF62D527B6BA67294C62B404FAD5C3
12D1BDBFAF8BF39048069AF835BC96F39A7275F3B466A0A5A19B9F7235EC0FB1
E4FEB02B613916D7> |-
/four <1C60D8A8C9B7EF327C102745695739194BB3002578E9A13B5CE2A74FD
48894F71187E1172491C0FAAFD20337D17EB38BB138C76C05944382F2B261170
2A5DA745406DEB5C33C> |-
/five <1C60D8A8C9B7EF32A470AE090A724FDDF392384CD70DD7F54DF5EDB5B
94F0458AC2358C0871CBF484570776DAA62CEADBBEA6E1E17511B86A0FD4826D
CDEA47E875128F93BF9268E1B1AFC37E94AD9FA810C0CD0434C2996F516FB90C
520A123E1892F92666B> |-
/six <1C60D8A8C9B7EF32A47D2AA03CEEE9DDB4E70F59B3EF1D68E8E9A23C5D
895B21005DF84DCDAD3DEA99AA84A6BB56E722B7BE0470ADA08603495E8D20C7
0508E0EED46F555AFE92330EBC2BA124D26816A87E77C3C9365D5C56A7582E9D
55AF56FFD9160B804C4E62EC754D6510790643CD8FBD09F0BA1748DD18E27797
64DBD296AF281D4117BA4D> |-
/seven <1C60D8A8C9B7EF327C10274AB025EB21CC3BB5514D7A792BCFB0F254
664FBEE7353071728231DCE5A09FB578C9A63F4547F469AB016F484730> |-
/nine <1C60D8A8C9B7EF32A4731A9DB70B9490730918F3CC8A6CEFA5DBCDDDD
5B8FF631E5F2E3BEA7592C5DB8D17DFB2B2E4B0DAC725198BC39F2911D25DCD4
3EC8F7F509D2A326D2C0725149B8BE60F05AAA125797CC4820A7DA7D1C0D4C75
51B0568D049B61E397212F1F645896D5538A3CC2354092A21562A36F8CBFBCDB
29F3C229AE1ADF1AB6DCBDBDD6D09FAAF63AB22F20FCD0B779A7600350CF149D
0F882DD3D4B9E> |-
/colon <1C60D8A8C9B854D088E8E1B4A929D159FDB3710FCCC0205705236967
6FE7E3F7F79CEEE30BD023CC5123F5DD4F72E8838E> |-
/A <1C60D8A8C9B64EDFA3F30AE40D82627F2F65ED12882A4E7BE9A365DF6DDE
A50F6F4183F6FB4A060F65336ED2B0FE4820FD52850E5F52B5883009881E15D3
A6E91B5E> |-
/C <1C60D8A8C9B6079FED21EC1DA43783C3C67A5FBA5FB885DEE16CDCDCAF1B
7E5C168D0377F501B09EEE06FA7720C35D9E5B5FBCE148C17092F43DAB7E2D94
E9FE9DCFFADEA91F9C52F49E3053420DCED72662293A521E028C39AF83F75FC5
4A> |-
/L <1C60D8A8C9B7EF3257710D8E45FDED8109BBDA794C5EEC6C4DCFCB68A628
CD21FC17F8D9EBEE> |-
/M <1C60D8A8C9B6B41CC7E91641C452E31A1FF57E5819E293AAC22FFE6A989D
D096F29F83DBBFB131D21D2F3E6C6DAB9DE434C529570BC24A625218D657C1F0
3933B1EA3B0DCFDA8AB35AF4BBEE90CCC241F177D656ECD11D47536184> |-
/R <1C60D8A8C9B6079F1E4D8C18B43D708E4867E1D5DF87FFDFDA59C87E0DAA
C2980D72F189A927C7607FB955553C4E4B82FD6E924592BF3E5BCF70BD67C10F
BFCC049000E196CAB909156B2D7E5AD89BC25B1EEB84DE135A38029C2647CF91
8DD0728B39FA4A46AD6169BF8FCD9F6EBD7C686C8458E64ED665C52AFB667727
503772603873AF92F5CB568DE59763334D0C676EEF504634735618AF2DDA86> |-
/a <1C60D8A8C9B7EF32A0B922DB529D708010F72F0E62F6CA36E98277AFD8C5
36E6814BFC8F2509E1B2B1B62A6BDA8D1A6ED67728D80620B28FE439D2F57DCE
C5483105FEA93379701773DF23A415938C688874994BCC9880105CE27AC2270A
13FA38E952045C5E8C52BEF83397E5FBEEFAB993BE33E385A5E36620F7427AB5
E4423C6A4ED6DE24A89F54E52C8FAD8A45FAD4B8F6CFD50EB7D35BF120B079B9
32E0EE2F7685462C7EC6E9B818F0F9E1F7814D04F2B9AAFA6704B8B745452B73
181F38CB34F1645F> |-
/b <1C60D8A8C9B7EF325758E57677E81C8AA433AA021E3255F2E2A0B1596320
19EEA8F6DE2A2BAC7F3B4B357F98F028325FFF3907B73C5456EB1D8FF0179B85
DD1D687E5A074ACA4745CB20001A6A3AC6F132FADF60810876C26262A98CC751
0FA38BE9723AF4B4ABB522A0D15754DB077A63E0BA57BE88E1BBA6B0CE58E658
8DE7ADAB6E41FD9D54E4EFD5A122C76C7BEBAA12F9C5DCCF6BAA6CC0815777C0
B46D695C4EB465E9932D1607B265E794EBAF8378597763D2145A376764> |-
/c <1C60D8A8C9B7A73D329D14FC5ED04B22BEF11360501EE1499496C476E815
0EC3BDD954DBEADE8E9C14890D9CD9DB76F31AE11D3417AD4A86CFF13437B5FD
BD7396F24B7F94C12C61C297C734538546A29AF94483114D66> |-
/d <1C60D8A8C9B7EF32A0BAF021E6128CBCD055133316849E00736C24057076
3FFBEAA17D20BAD0C90929E7FC98BEF078FBD21661E4465220571BF6C5785F77
9B145176EAC3F1B48024793437EC4438247E11A602434D0E7AC34F18A158BFAD
2A9FD91C0C9E4A3D67CE58D890D1A5D9362E68BDC6AD4CEE4C45C583B8E0A134
37C5A7D60D6E4A23D8A01F527509176EA8D499100624E9> |-
/e <1C60D8A8C9B7EF32A0BAF02E48E9B39AD7C7181F03C1667A89DB68F4C202
1D90AF24B2D47013ACA99B4B2D769B990015FB6EFC7E8ADB53D7F0A72F6495AC
A0439C9D372491632296F74356FA6400495EC05ABB9CD13EFC8E45D6906A6BCD
BE0AEF5EFFBE2AA37FCCB9B9808CE70A23B0C257679B730911C6BE9556BB5553
A431EECECF30F5581F5F0240E470E520EB9771> |-
/h <1C60D8A8C9B7EF327C10274A017D50D0B79D52072757441F46A9E3044975
4F52968402CD3736F71D6E09A15E2046342DF42A864D37373E0A213DE941C6F0
11296A017FBEA0AE0137A10664047E> |-
/i <1C60D8A8C9B88C082599D5E95652E4745C17562AE47DDBD30E7054F041D7
2A7354004D800853CB28271AB7834CF7A2CB132BAFF26EF4E9D89B> |-
/l <1C60D8A8C9B88C082599D5E898B54D665A852C4BD97DFF418DFF9C25960C
0EAF> |-
/m <1C60D8A8C9B6B41C803D68C39EF50D06E406D806E0103B4C2937F43F706F
E45E46BB4B168951587EB26A51BD9E5D6D15548973928DA7BD71E5C6A2EC7542
58679A8719AC099ECB167292DC3AC16D6A6399789AE1244C2D9A7EDD1242D52D
A81BBE025DB4544A719A686DB3A0393D2301EEF9A4AA3D42067FE37BAF> |-
/n <1C60D8A8C9B7EF327C10274A017D50E5277BF0D0EBCB370A96BE9DA56325
4EC441C4BC3817B6ABCAA45C3FADDF2A0C1F1BCD1456474D7370B95E3791CB07
74B8A788FAD31DAB8E43BE1DDCC8C2722C438CA874C21003F548D691EAB87ADC
2BE2D98ABE47C6EE8D76> |-
/o <1C60D8A8C9B7EF32A1EB0E906A9534468E05CEB1010836670827B7F6AFA2
CC00AD8F9832B5E57EC7BD21A33599CE96350BC4CAB33AA09D5134F6F8CF8089
D97FF4A8EED59E93E5BC94B6181F6AD989C60A6089DE02A32BD22539CE> |-
/p <1C60D8A8C9B7EF322792C3BF0D38904A73F4440F6D92D5F5AE09CC018066
468E681543C8F047ACFD615B747546B5480444F746C2E0CD698A8961C13AF2BF
3940EE05278AAEFC066B11F108A32A247BB7A1777E1A71A35D0F71427779DCE4
A1F61E27FEB716A84B084E0A293D7F37477EB4DB407CE06D6E55EF820764AC64
86> |-
/r <1C60D8A8C9B81F2C6DADD03096566F18A44C12756941A411C99A198CC8D4
3303483F8D4425C8C61A6016070C9755F215C6103A7B22F8F2C0462F4082ABD3
D08AED77838B7C426C> |-
/s <1C60D8A8C9B7A73D329D14FC63C56EEDE3F9A78253B2DBE961C83BECBAF3
B4E5B0884D0E51EEB661AACE85886254728F5E34D401120D0E6C2B208B0A6EFE
EA993E281F58443FA8AF570296DB9AE2B0FD959762404D9D39D028E903103EBA
C5E167D6A6970865F2360877231B6B2635F07AB03FB78405FFC01711DD4ECCBE
59E46BB3AA7E7E004FCD7D8551926A4D9FE5600A8EF27E924599C5> |-
/t <1C60D8A8C9B854D08798C221F1632F11AD0FAC820137C5F0FDBBEBF17E1C
0D647913022A839A37663E0CE3B897F4D89F6C2CEAC84AC3D591D5B583708835
3D9095E679DCF29A> |-
/u <1C60D8A8C9B7EF325758E576B7BAA1EFA82EFF7976BE67CE506354F22E3D
1B078EDAE7715C61BE16B3CD4B647E2C68818E308CF0BE659E73BA193580128E
99771A6AFDBFEB4E9486BE6CBE5D0A068E2F3382B692BCB6E47C62554398C9E5
6946239346863C679F19> |-
/v <1C60D8A8C9B7A73DC53FF2C839B947F31C11DB63CB8CC0B0E0518E01B2A8
090086BA063BC631F5BCB6255A1F02FF856D> |-
/.notdef <1C60D8A8C9B854D00D> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
reset_gvm
/ZUSWYG+Helvetica /BRFAAA+Helvetica findfont ct_VMDictPut
/ZUSWYG+Helvetica*1 
[44{/.notdef}rp /comma 3{/.notdef}rp /zero /.notdef /two /.notdef /four 
/five /six /seven /.notdef /nine /colon 6{/.notdef}rp /A 
/.notdef /C 8{/.notdef}rp /L /M 4{/.notdef}rp /R 14{/.notdef}rp 
/a /b /c /d /e 2{/.notdef}rp /h /i 
2{/.notdef}rp /l /m /n /o /p /.notdef /r 
/s /t /u /v 137{/.notdef}rp]
ZUSWYG+Helvetica nf
ZUSWYG+Helvetica*1 [7.9824 0 0 -7.9824 0 0 ]msf
36.5952 36.7937 mo
(96Lubarda:ConstitutivetheoriesbasedonthemultiplicativedecompositionApplMechRevvol57,no2,March2004)
[4.43821 13.4184 4.43821 4.43821 4.43822 4.43821 2.65808 4.43821 4.43822 4.87485 5.76329 4.43822 
4.43821 3.9912 2.2191 1.77209 2.21911 4.43821 2.21911 1.77209 3.9912 7.09475 2.21912 4.4382 
4.43822 4.43822 2.65808 1.77209 4.4382 6.64775 4.4382 4.43822 3.9912 4.43822 7.09396 4.4382 
7.09396 2.21912 4.4382 7.09476 6.64928 4.43822 1.77209 2.2191 1.77209 4.43822 1.77209 1.77209 
3.9912 4.43822 2.2191 1.77209 3.9912 7.09396 4.4382 4.43823 3.99121 4.4382 6.64926 4.43823 
4.43823 3.99115 1.77209 2.21912 1.77209 4.43823 82.8876 5.32434 4.43817 4.43823 4.42786 6.64923 
4.43823 3.99121 7.09479 5.76324 4.43823 6.64777 3.99121 4.43817 4.42786 4.43823 4.43817 4.87488 
4.43817 7.09399 4.43817 4.87488 6.64929 4.43817 2.65808 3.99121 7.09479 4.43817 4.43823 4.43823 
0 ]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *PageSize A4
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
