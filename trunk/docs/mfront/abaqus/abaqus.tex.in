\documentclass[rectoverso,pleiades,anti,projet]{note_technique_2010}

\usepackage{listings}
\usepackage{couleurs}
\usepackage{mecanique}
\usepackage{presentation}

\titre{Description of the mechanical behaviour interface to the Abaqus solver}
\auteurs{T.~Helfer, Kulbir Singh}
\redacteur{T.~Helfer}

\newcommand{\mfront}{\texttt{MFront}}
\newcommand{\mtest}{\texttt{MTest}}
\newcommand{\abaqus}{\texttt{Abaqus}}

\lstset{ %
  backgroundcolor=\color{white},   % choose the background color; you must add \usepackage{color} or \usepackage{xcolor}
  basicstyle=\small,       % the size of the fonts that are used for the code
  breakatwhitespace=false,         % sets if automatic breaks should only happen at whitespace
  breaklines=true,                 % sets automatic line breaking
  captionpos=b,                    % sets the caption-position to bottom
  commentstyle=\color{red},        % comment style
  deletekeywords={...},            % if you want to delete keywords from the given language
  frame=single,                    % adds a frame around the code
  keepspaces=true,                 % keeps spaces in text, useful for keeping indentation of code (possibly needs columns=flexible)
  keywordstyle=\color{blue},       % keyword style
  language=C++,                    % the language of the code
  morekeywords={Output Author Input Date},            % if you want to add more keywords to the set
  numbers=left,                    % where to put the line-numbers; possible values are (none, left, right)
  rulecolor=\color{orange},         % if not set, the frame-color may be changed on line-breaks within not-black text (e.g. comments (green here))
  showspaces=false,                % show spaces everywhere adding particular underscores; it overrides 'showstringspaces'
  showstringspaces=false,          % underline spaces within strings only
  showtabs=false,                  % show tabs within strings adding particular underscores
  stepnumber=1,                    % the step between two line-numbers. If it's 1, each line will be numbered
  stringstyle=\color{green},       % string literal style
  tabsize=2,                       % sets default tabsize to 2 spaces
}

\stylebib{@abs_top_srcdir@/docs/tex/texmf/bibtex/fr-insa}
\fichierbib{@abs_top_srcdir@/docs/tex/texmf/bibtex/bibliographie}

\begin{document}

\section{Usage of libraries generated using MFront}

The mechanisms used by \abaqus{} to incorporate external subroutines
is not suitable for mechanical behaviours generated by \mfront{}.

We propose a solution which is meant to be flexible and easy to set up
for the end-user.

This solution is based on a~:
\begin{itemize}
\item a generic {\tt umat} subroutine which aims at loading
  dynamically libraries generated by \mfront{}.
\item a naming convention of the material behaviour in the \abaqus{}
  input file which allow the user to specify both the function to
  called and the library in which this function is implemented.
\end{itemize}

This approach allows the user to build \mfront{} libraries {\em before
  the computations}. Those libraries can be shared among various
computations by setting the appropriate environment
variable\footnote{{\tt LD\_LIBRARY\_PATH} under {\tt Unix} systems,
  {\tt PATH} under {\tt Windows} systems}.

\subsection{A generic {\tt umat} subroutine}

A generic {\tt umat} subroutine is delivered with \mfront{}. It is
implemented in a file called {\tt umat.cpp}.

The aim of this subroutine is to dynamically load libraries generated
by \mfront{} using the name given to the behaviour in the input
file. This subroutine can with little modifications (under comments in
the source file) be made compatible with other user subroutines so
mixing \og~standard umat~\fg{} implementations and \mfront{}
implementations shall be feasible.

We must insist~: {\em this file is the only source that must be
  compiled along with \abaqus{}~: generation of \mfront{} libraries is
  a different process that is done independently}.

As such, {\tt abaqus} shall be called like this~:
\begin{center}
  {\tt abaqus user=umat.cpp [options] inputfile.inp}
\end{center}

\subsubsection{Setting the compiler flags}

The generic {\tt umat} subroutine is written using the {\tt C++-11}
standard. Depending on the compiler and compiler version, appropriate
flags shall be added for the compilation. Those flags are defined in
the {\tt abaqus\_v6.env} file that can be overridden by the user.

\begin{figure}[htbp]
  \centering
  \lstinputlisting[language=python]{@abs_top_srcdir@/docs/mfront/abaqus/img/abaqus_v6.env}
  \caption{Declaration of the {\tt C++} compiler flags for {\tt gcc}
    under {\tt LiNuX} in the {\tt abaqus\_v6.env} file. The {\tt
      -{}-{}std=c++11} flag was added at Line~11.}
  \label{fig:abaqus_v6.env}
\end{figure}

For {\tt gcc}, one have to add the {\tt -{}-{}std=c++11} flag. The
modification made to the {\tt abaqus\_v6.env} are reported on
Figure~\ref{fig:abaqus_v6.env} in this case.

\subsection{Name of the behaviour in the Abaqus input file}

The name of the behaviour shall define the function to be called and
the library in which this function is implemented.  It is important to
notice that the name of the behaviour is automatically converted to
upper-case by \abaqus{}.

The name of the libraries generated by \mfront{} though the \abaqus{}
interface are thus upper-cased. {\em The user shall thus be aware that
  he/she must not rename \mfront{} generated libraries using
  lower-case letters.}

By convention, this name is splitted into two parts, separed by the
underscore character ({\tt '\_'}). The first part is the name of
library, without prefix ({\tt lib}) or suffix ({\tt .dll} or {\tt
  .so}). {\tt This convention implies that the library name does not
  contain an underscore character.}

For example, on {\tt UNIX} systems, if one want to call the {\tt
  ELASTICITY} behaviour in {\tt libABAQUSBEHAVIOUR.so} library, the
name of the behaviour in the \abaqus{} input file has to be: {\tt
  ABAQUSBEHAVIOUR\_ELASTICITY}. This leads to the following
declaration of the material:
\begin{flushleft}
{\tt *Material, name=ABAQUSBEHAVIOUR\_ELASTICITY}
\end{flushleft}

\subsection{Note on libraries locations}

As explained above, \mfront{} libraries will be loaded at the runtime
time. This means that the libraries must be found by the dynamic
loader of the operating system.

\subsubsection{Under Linux}

Under Linux, the search path for dynamic libraries are specified using
the {\tt LD\_LIBRARY\_PATH} variable environment. This variable
defines a colon-separated set of directories where libraries should be
searched for first, before the standard set of directories.

Depending on the configuration of the system, the current directory
can be considered by default.

\subsubsection{Under Windows}

Under Windows, the dynamic libraries are searched:
\begin{itemize}
\item in the current directory~;
\item in the directories listed in the {\tt PATH} environment. This
  variable defines a semicolon-separated set of directories.
\end{itemize}

\section{Description of the interface functionalities}

\subsection{Supported modelling hypothesis}

\subsection{Setting the out-of-bounds policy}

\subsection{Setting parameters values}

The values of the parameters can be set in an external text file which
is automatically read. If the behaviour name is {\tt Norton}, the name
of this file must be {\tt Norton-\-parameters.txt}.  This file must be
in the current directory.

The parameters file must be formatted like this~:
\begin{flushleft}
  {\tt ParameterName      ParameterValue}\\
  {\tt OtherParameterName OtherParameterValue}\\
  {\tt ...                ...}  
\end{flushleft}

If a parameter is omitted, this parameter will have its default value.

\section{Test cases}

\subsection{Unit tests in small strain}

\paragraph{Isotropic elastic behaviour under tensile loading in small strain}

\paragraph{Isotropic elastic behaviour under shear loading in small strain}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/ShearLoading-IsotropicElasticity-sxz.pdf}
  \caption{Comparison of the results obtained by the \mfront{}
    implementation of an isotropic elastic behaviour and the results
    obtained with the \abaqus{} build-in elastic behaviour under shear
    loading.}
  \label{fig:abaqus:ShearLoading-IsotropicElasticity-sxz}
\end{figure}

\paragraph{Isotropic viscoplastic behaviour under tensile loading in
  small strain}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/IsotropicViscoplasticity-TensileLoading-szz.pdf}
  \caption{Comparison of the results obtained with \abaqus{} and
    \mtest{} using an \mfront{} implementation of an isotropic
    viscoplastic behaviour under tensile loading.}
  \label{fig:abaqus:IsotropicViscoplasticity-TensileLoading-szz}
\end{figure}

\paragraph{Isotropic plastic behaviour with isotropic hardening under shear
  loading in small strain}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/ShearLoading-Plasticity-sxz.pdf}
  \caption{Comparison of the results obtained by the \mfront{}
    implementation of an isotropic plastic behaviour with isotropic
    hardening and the results obtained with the \abaqus{} build-in
    behaviour under shear loading.}
  \label{fig:abaqus:ShearLoading-Plasticity-sxz}
\end{figure}

\subsubsection{Unit tests in finite strain}

\paragraph{Isotropic elastic behaviour under shear loading in finite strain}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/ShearLoading-IsotropicElasticity-nlgeom-sxz.pdf}
  \caption{Comparison of the results obtained by the \mfront{}
    implementation of an isotropic elastic behaviour and the results
    obtained with the \abaqus{} build-in elastic behaviour under shear
    loading when the Hughes-Winglet hypo-elastic formulation is used.}
  \label{fig:abaqus:ShearLoading-IsotropicElasticity-nlgeom-sxz}
\end{figure}

\paragraph{Saint-Venant Kirchhoff hyperelastic behaviour under tensile
  loading}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/SaintVenantKirchhoff-TensileLoading-szz.pdf}
  \caption{Comparison of the results obtained the \mfront{}
    implementation of the Saint-Venant Kirchhoff hyperelastic
    behaviour using \abaqus{} and \mtest{}.}
  \label{fig:abaqus:SaintVenantKirchhoff-TensileLoading-szz}
\end{figure}

\paragraph{Saint-Venant Kirchhoff hyperelastic behaviour under shear
  loading}

% \begin{figure}[htbp]
%   \centering
%   \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/SaintVenantKirchhoff-ShearLoading-sxz.pdf}
%   \caption{Results obtained with the \mfront{}
%     implementation of the Saint-Venant Kirchhoff hyperelastic
%     behaviour using \abaqus{}.}
%   \label{fig:abaqus:SaintVenantKirchhoff-ShearLoading-sxz}
% \end{figure}


\subsection{Isotropic plastic behaviour with isotropic hardening on a
  notched beam}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/IsotropicHardeningPlasticity-VonMisesStress.png}
  \caption{Comparison of the \nom{Von Mises} stress distribution obtained with \mfront{} and the results obtained with the \abaqus{} build-in plasticity behaviour on a notched beam.}
  \label{fig:abaqus:vmis}
\end{figure}

\begin{figure}[htbp]
  \centering
  \includegraphics[width=0.9\linewidth]{@abs_top_srcdir@/docs/mfront/abaqus/img/IsotropicHardeningPlasticity-Stress_vs_Strain.png}
  \caption{Comparison of the stress vs. strain curves obtained with
    \mfront{} and with the \abaqus{} build-in plasticity behaviour on
    a notched beam.}
  \label{fig:abaqus:sig_vs_eps}
\end{figure}


\appendix

\section{Definition of the consistent tangent operator for finite
  strain behaviours}

\abaqus{} expresses the equilibrium in the rotated frame. To our
current knowledge, the derivation of the consistent tangent operator
\(\tenseurq{C}\) is not described in any reference and the expression
defined in the \abaqus{} manuel differs from the one given in the book
of \nom{Belytschko} et al.~\cite{belytschko_nonlinear_2000}.

Let \(\delta\,\tns{F}\) a variation of the deformation gradient at the
end of the time step. This variation induces a variation of~:
\begin{minipage}[t]{0.8\linewidth}
  \begin{itemize}
  \item a variation \(\delta\,\tns{L}\) of the gradient defined by:
    \[
    \delta\,\tns{L}=\delta\,\tns{F}\,.\,\ets{\tns{F}}^{-1}
    \]
  \item a variation \(\delta\,\tenseur{D}\) of the strain rate defined
    by the symmetric part of \(\delta\,\tns{L}\).
  \item a variation \(\delta\,\tns{W}\) of the spin rate defined
    by the unsymmetric part of \(\delta\,\tns{L}\).
  \item a variation of the \(\Delta\,\tenseur{\tau}\) of the Kirchhoff
    stress tensor.
  \end{itemize}
\end{minipage}

For the sake of conciseness, \(\ets{\tns{F}}\) will be noted
\(\tns{F}\) in the rest of this section.

The abaqus manual defines the consistent tangent operator
\(\tenseurq{C}\) as the tangent moduli associated with the
\nom{Jauman} rate of the \nom{Kirchhoff} stress
\(\tenseurq{C}^{J\,\tau}\) divided by \(J\). \(\tenseurq{C}\)
satisfies:
\begin{equation}
  \label{eq:CJt}
  J\,\tenseurq{C}\,\colon\,\delta\,\tenseur{D}=\tenseurq{C}^{J\,\tau}\,\colon\,\delta\,\tenseur{D}=\delta\,\tenseur{\tau}-\delta\,\tns{W}\,.\,\tenseur{\tau}+\tenseur{\tau}\,.\,\delta\,\tns{W}  
\end{equation}

The mechanical behaviour allows us to compute
\(\delta\,\tenseur{\tau}\) as:
\[
\delta\,\tenseur{\tau}=\deriv{\tenseur{\tau}}{\tns{F}}\,\colon\,\delta\,\tns{F}
\]

The tangent operator \(\deriv{\tenseur{\tau}}{\tns{F}}\) is well
defined and given by most mechanical behaviour implementations.

To compute the other terms, we will need \(\deriv{W}{F}\):
\[
\deriv{\tns{W}}{\tns{F}}=\Frac{1}{2}\,\paren{\partial^{l}_{\star}\paren{\tns{F}^{-1}}-\partial^{r}_{\star}\paren{\tns{F}^{-T}}\,.\,\paren{\deriv{\tns{F}^{T}}{\tns{F}}}}
\]
The term \(\partial^{l}_{\star}\paren{\tns{F}^{-1}}\) can be computed
using the method {\tt tpld} of the {\tt t2tot2} class. The term
\(\partial^{r}_{\star}\paren{\tns{F}^{-1}}\) can be computed using the
method {\tt tprd} of the {\tt t2tot2} class.


This derivative allow us to compute the remaining terms of Equation~\eqref{eq:CJt}:
\[
\begin{aligned}
  \delta\,\tns{W}\,.\,\tenseur{\tau}&=\partial^{l}_{\star}\paren{\tenseur{\tau}}\paren{\deriv{\tns{W}}{\tns{F}}}\,\colon\,\delta\tns{F}\\
  \tenseur{\tau}\,.\,\delta\,\tns{W}&=\partial^{r}_{\star}\paren{\tenseur{\tau}}\paren{\deriv{\tns{W}}{\tns{F}}}\,\colon\,\delta\tns{F}
\end{aligned}
\]
The terms
\(\partial^{l}_{\star}\paren{\tenseur{\tau}}\paren{\deriv{\tns{W}}{\tns{F}}}\)
and
\(\partial^{r}_{\star}\paren{\tenseur{\tau}}\paren{\deriv{\tns{W}}{\tns{F}}}\)
can be computed with the {\tt tpld} and {\tt tprd} of the {\tt t2tot2}
class.

Finally, Equation~\eqref{eq:CJt} can be recast as~:
\[
J\,\tenseurq{C}\,\colon\,\delta\,\tenseur{D}=\tenseurq{K}\,\colon\,\delta\tns{F}
\]
where \(\tenseurq{K}\) is given by~:
\[
\tenseurq{K}=\deriv{\tenseur{\tau}}{\tns{F}}-\partial^{l}_{\star}\paren{\tenseur{\tau}}\paren{\deriv{\tns{W}}{\tns{F}}}+\partial^{r}_{\star}\paren{\tenseur{\tau}}\paren{\deriv{\tns{W}}{\tns{F}}}
\]

Following \nom{Han}~\cite{han_modelisation_2012}, the consistent
tangent operator \(\tenseurq{C}\) can then be deduced from the
\(\tenseurq{K}\) matrix using the following relationship~:
\[
J\,\tenseurq{C}_{ijkl}=K_{ijkm}\,F_{lm}
\]

\referencecea{}

\end{document}

% Local IspellDict: english
