add_subdirectory(ExpressionTemplates)
add_subdirectory(RungeKutta)
add_subdirectory(Functions)
add_subdirectory(St2toSt2)
add_subdirectory(Composite)

include_directories("${PROJECT_SOURCE_DIR}/include")
include_directories("${PROJECT_SOURCE_DIR}/tests/Math/include")
link_directories("${PROJECT_BINARY_DIR}/src/Math"
                 "${PROJECT_BINARY_DIR}/src/Utilities"
                 "${PROJECT_BINARY_DIR}/src/Exception"
		 "${PROJECT_BINARY_DIR}/src/Tests")

# a simple macro
macro(tests_math test_arg)
  if (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
    add_executable(${test_arg} EXCLUDE_FROM_ALL ${test_arg}.cxx)
    add_test(${test_arg} ${EXECUTABLE_OUTPUT_PATH}/${test_arg})
    add_dependencies(check ${test_arg})
  else (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
    add_executable(${test_arg} ${test_arg}.cxx)
    add_test(${test_arg} ${EXECUTABLE_OUTPUT_PATH}/${test_arg})
  endif (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
  target_link_libraries(${test_arg}  TFELMath TFELUtilities TFELException TFELTests)
endmacro(tests_math)

macro(tests_math2 test_arg)
  if (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
    add_executable(${test_arg} EXCLUDE_FROM_ALL ${test_arg}.cxx)
    add_test(${test_arg} ${EXECUTABLE_OUTPUT_PATH}/${test_arg})
    add_dependencies(check ${test_arg})
  else (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
    add_executable(${test_arg} ${test_arg}.cxx)
    add_test(${test_arg} ${EXECUTABLE_OUTPUT_PATH}/${test_arg})
  endif (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
  target_link_libraries(${test_arg} TFELMathKriging TFELMath TFELUtilities TFELException TFELTests)
endmacro(tests_math2)

macro(tests_math3 test_arg)
  if (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
    add_executable(${test_arg} EXCLUDE_FROM_ALL ${test_arg}.cxx)
    add_test(${test_arg} ${EXECUTABLE_OUTPUT_PATH}/${test_arg})
    add_dependencies(check ${test_arg})
  else (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
    add_executable(${test_arg} ${test_arg}.cxx)
    add_test(${test_arg} ${EXECUTABLE_OUTPUT_PATH}/${test_arg})
  endif (${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION} GREATER 2.6)
  target_link_libraries(${test_arg} TFELMathParser TFELMathKriging TFELMath TFELUtilities TFELException TFELTests)
endmacro(tests_math3)

tests_math(CubicRoots)
tests_math(FracSimplify)
tests_math(promote)
tests_math(hill)
tests_math(qt)
tests_math(qt2)
tests_math(qt3)
tests_math(array2)
tests_math(array3)
tests_math(array4)
tests_math(array)
tests_math(complex_operations)
tests_math(conj)
tests_math(Function)
tests_math(lu)
tests_math(lu2)
tests_math(tinymatrixsolve)
tests_math(tinymatrixsolve2)
tests_math(newton_raphson)
tests_math(solve)
tests_math(stensor)
tests_math(stensor2)
tests_math(stensor3)
tests_math(stensor4)
tests_math(stensor5)
tests_math(stensor_eigenvalues)
tests_math(stensor_eigenvectors2)
tests_math(stensor_eigenvectors)
tests_math(tmatrix)
tests_math(tmatrix1)
tests_math(tmatrix2)
tests_math(tmatrix3)
tests_math(tvector)
tests_math(tvector2)
tests_math(tvector3)
tests_math(tvector4)
tests_math(VectorResultType)
tests_math(vector1)
tests_math(broyden)
tests_math(broyden2)
tests_math(Range)
tests_math(SFTMCV)
tests_math(levenberg-marquardt)
tests_math(levenberg-marquardt2)
tests_math(levenberg-marquardt3)

tests_math2(krigeage)
tests_math2(krigeage1D)
tests_math2(krigeage2D)

tests_math3(parser)
tests_math3(parser2)
tests_math3(parser3)
tests_math3(parser4)
tests_math3(parser5)
tests_math3(parser6)
tests_math3(parser7)
tests_math3(parser8)
tests_math3(levenberg-marquardt4)

